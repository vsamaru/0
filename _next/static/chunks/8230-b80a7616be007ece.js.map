{"version":3,"file":"static/chunks/8230-b80a7616be007ece.js","mappings":"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","sources":["webpack://_N_E/./src/ui/components/UploadScreen/libraryConstants.ts","webpack://_N_E/./src/ui/components/UploadScreen/ReplayTitle.tsx","webpack://_N_E/./src/ui/components/UploadScreen/SettingsPreview.tsx","webpack://_N_E/./src/ui/components/UploadScreen/TeamSelect.tsx","webpack://_N_E/./src/ui/components/UploadScreen/Sharing.tsx","webpack://_N_E/./src/ui/components/UploadScreen/UploadRecordingTrialEnd.tsx","webpack://_N_E/./src/ui/components/UploadScreen/UploadScreen.tsx","webpack://_N_E/./src/ui/components/UploadScreen/index.ts","webpack://_N_E/./pages/recording/upload.tsx","webpack://_N_E/./src/ui/components/Library/LibraryDropdown.tsx","webpack://_N_E/./src/ui/components/shared/Icon.tsx","webpack://_N_E/./src/ui/components/shared/PortalDropdown.tsx","webpack://_N_E/./src/ui/components/shared/TrialEnd.tsx","webpack://_N_E/./src/ui/utils/org.ts","webpack://_N_E/./src/ui/components/Library/Library.module.css"],"sourcesContent":["export const MY_LIBRARY = \"Your Library\";\nexport const personalWorkspace = { id: MY_LIBRARY, name: MY_LIBRARY };\n","import React, { ChangeEvent, Dispatch, SetStateAction } from \"react\";\n\nexport default function ReplayTitle({\n  inputValue,\n  setInputValue,\n}: {\n  inputValue: string;\n  setInputValue: Dispatch<SetStateAction<string>>;\n}) {\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <div className=\"flex flex-col space-y-3\">\n      <input\n        type=\"textbox\"\n        className=\"rounded-lg bg-jellyfishBgcolor py-3.5 px-6 font-medium shadow-md focus:outline-none focus:ring-2 focus:ring-primaryAccent\"\n        onChange={onChange}\n        value={inputValue}\n      />\n    </div>\n  );\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { Workspace } from \"ui/types\";\nimport { getOrganizationSettings } from \"ui/utils/org\";\n\nimport { MY_LIBRARY, personalWorkspace } from \"./libraryConstants\";\n\nconst getIconAndText = (\n  isPublic: boolean,\n  selectedWorkspaceId: string,\n  workspaceName?: string\n): {\n  text: string;\n  icon: string;\n} => {\n  if (isPublic) {\n    return {\n      text: \"This replay can be viewed by anyone with the link\",\n      icon: \"public\",\n    };\n  }\n\n  if (selectedWorkspaceId === MY_LIBRARY) {\n    return {\n      text: `Only you can view this`,\n      icon: \"person\",\n    };\n  }\n\n  return {\n    text: `Shared privately with ${workspaceName}`,\n    icon: \"groups\",\n  };\n};\n\ntype SettingsPreviewProps = {\n  onClick: () => void;\n  isPublic: boolean;\n  workspaces: Workspace[];\n  selectedWorkspaceId: string;\n};\n\nexport default function SettingsPreview({\n  onClick,\n  isPublic,\n  workspaces,\n  selectedWorkspaceId,\n}: SettingsPreviewProps) {\n  const { features } = getOrganizationSettings(workspaces);\n  const canEdit = workspaces.length > 1 || features.user.library || features.recording.public;\n\n  const workspaceName = canEdit\n    ? [...workspaces, personalWorkspace].find(w => w.id === selectedWorkspaceId)!.name\n    : workspaces[0]!.name;\n\n  const { icon, text } = getIconAndText(isPublic, selectedWorkspaceId, workspaceName);\n\n  return (\n    <button\n      className={classNames(\n        !canEdit && \"cursor-default\",\n        \"flex w-full flex-row items-center justify-between hover:text-primaryAccent focus:text-primaryAccentHover focus:outline-none\"\n      )}\n      type=\"button\"\n      onClick={canEdit ? onClick : undefined}\n      style={{ minHeight: \"38px\" }}\n    >\n      <div className=\"flex flex-row items-center space-x-2.5\">\n        <span className=\"material-icons\" style={{ fontSize: \"24px\" }}>\n          {icon}\n        </span>\n        <div className=\"font-medium\">{text}</div>\n      </div>\n      {canEdit ? (\n        <div className=\"flex flex-row items-center space-x-2\">\n          <div className=\"font-medium\">Edit</div>\n          <span className=\"material-icons\" style={{ fontSize: \"24px\" }}>\n            edit\n          </span>\n        </div>\n      ) : null}\n    </button>\n  );\n}\n","import { SelectorIcon } from \"@heroicons/react/solid\";\nimport React, { useState } from \"react\";\n\nimport { useGetUserInfo } from \"ui/hooks/users\";\nimport { Workspace } from \"ui/types\";\n\nimport { Dropdown, DropdownItem } from \"../Library/LibraryDropdown\";\nimport PortalDropdown from \"../shared/PortalDropdown\";\nimport { personalWorkspace } from \"./libraryConstants\";\n\nconst TeamSelectButton = ({\n  selectedWorkspaceName,\n}: {\n  selectedWorkspaceName: string | undefined;\n}) => {\n  return (\n    <div className=\"relative w-full cursor-default rounded-md border border-textFieldBorder bg-jellyfishBgcolor py-1.5 pl-2.5 pr-8 text-left shadow-sm focus:border-primaryAccentHover focus:outline-none focus:ring-1 focus:ring-primaryAccent\">\n      <span className=\"block truncate\">{selectedWorkspaceName}</span>\n      <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-1.5\">\n        <SelectorIcon className=\"h-4 w-4 text-textFieldBorder\" aria-hidden=\"true\" />\n      </span>\n    </div>\n  );\n};\n\ninterface DisplayedWorkspace {\n  id: string;\n  name?: string;\n}\n\nexport default function TeamSelect({\n  workspaces,\n  selectedWorkspaceId,\n  handleWorkspaceSelect,\n}: {\n  workspaces: Workspace[];\n  selectedWorkspaceId: string;\n  handleWorkspaceSelect: (id: string) => void;\n}) {\n  const userInfo = useGetUserInfo();\n  const [expanded, setExpanded] = useState(false);\n  let displayedWorkspaces: DisplayedWorkspace[] = [...workspaces].sort();\n\n  if (userInfo.features.library) {\n    displayedWorkspaces = [personalWorkspace, ...displayedWorkspaces];\n  }\n\n  const handleSelect = (workspace: DisplayedWorkspace) => {\n    handleWorkspaceSelect(workspace.id);\n    setExpanded(false);\n  };\n\n  const selectedWorkspace =\n    displayedWorkspaces.find(w => w.id === selectedWorkspaceId) || displayedWorkspaces[0];\n  const selectedWorkspaceName = selectedWorkspace.name;\n  const button = <TeamSelectButton selectedWorkspaceName={selectedWorkspaceName} />;\n\n  return (\n    <PortalDropdown\n      buttonContent={button}\n      setExpanded={setExpanded}\n      expanded={expanded}\n      buttonStyle=\"\"\n      distance={0}\n      position=\"bottom-right\"\n    >\n      <Dropdown widthClass=\"w-64\" fontSizeClass=\"text-base\">\n        <div className=\"max-h-48 overflow-auto\">\n          {displayedWorkspaces.map(workspace => (\n            <DropdownItem onClick={() => handleSelect(workspace)} key={workspace.id}>\n              {workspace.name || \"\"}\n            </DropdownItem>\n          ))}\n        </div>\n      </Dropdown>\n    </PortalDropdown>\n  );\n}\n","import classNames from \"classnames\";\nimport React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\n\nimport hooks from \"ui/hooks\";\nimport { Workspace } from \"ui/types\";\nimport { isPublicDisabled } from \"ui/utils/org\";\n\nimport { Toggle } from \"../shared/Forms\";\nimport { MY_LIBRARY } from \"./libraryConstants\";\nimport SettingsPreview from \"./SettingsPreview\";\nimport TeamSelect from \"./TeamSelect\";\n\ntype SharingProps = {\n  workspaces: Workspace[];\n  selectedWorkspaceId: string;\n  setSelectedWorkspaceId: Dispatch<SetStateAction<string>>;\n  isPublic: boolean;\n  setIsPublic: Dispatch<SetStateAction<boolean>>;\n};\n\nfunction EditableSettings({\n  workspaces,\n  selectedWorkspaceId,\n  setSelectedWorkspaceId,\n  isPublic,\n  setIsPublic,\n}: Omit<SharingProps, \"showSharingSettings\">) {\n  const updateDefaultWorkspace = hooks.useUpdateDefaultWorkspace();\n  const publicDisabled = isPublicDisabled(workspaces, selectedWorkspaceId);\n\n  const handleWorkspaceSelect = (id: string) => {\n    setIsPublic(isPublic && !isPublicDisabled(workspaces, id));\n    setSelectedWorkspaceId(id);\n    const dbWorkspaceId = id === MY_LIBRARY ? null : id;\n    updateDefaultWorkspace({ variables: { workspaceId: dbWorkspaceId } });\n  };\n\n  return (\n    <div className=\"grid w-full grid-cols-2 gap-5 text-base\">\n      <TeamSelect {...{ handleWorkspaceSelect, selectedWorkspaceId, workspaces }} />\n      <div\n        className={classNames(\n          publicDisabled ? \"opacity-60\" : undefined,\n          \"flex w-full cursor-default select-none flex-row items-center justify-between space-x-2 rounded-md border border-textFieldBorder bg-jellyfishBgcolor px-2.5 py-1.5 text-left shadow-sm focus:border-primaryAccentHover focus:outline-none focus:ring-1 focus:ring-primaryAccent\"\n        )}\n        onClick={() => !publicDisabled && setIsPublic(!isPublic)}\n      >\n        <div>Public Access</div>\n        <Toggle\n          enabled={isPublic && !publicDisabled}\n          setEnabled={publicDisabled ? () => {} : setIsPublic}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default function Sharing(props: SharingProps) {\n  const [isEditing, setIsEditing] = useState(false);\n\n  return (\n    <div className=\"relative\">\n      {isEditing ? (\n        <EditableSettings {...props} />\n      ) : (\n        <SettingsPreview {...props} onClick={() => setIsEditing(!isEditing)} />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Workspace } from \"ui/types\";\nimport { inUnpaidFreeTrial, subscriptionEndsIn } from \"ui/utils/workspace\";\n\nimport { TrialEnd } from \"../shared/TrialEnd\";\n\nexport function UploadRecordingTrialEnd({\n  workspaces,\n  selectedWorkspaceId,\n}: {\n  workspaces: Workspace[];\n  selectedWorkspaceId: string | null;\n}) {\n  const workspace = workspaces.find(w => w.id === selectedWorkspaceId);\n\n  if (!workspace) {\n    return null;\n  }\n\n  const expiresIn = subscriptionEndsIn(workspace);\n  if (expiresIn > 0 && !inUnpaidFreeTrial(workspace)) {\n    return null;\n  }\n\n  return (\n    <TrialEnd\n      expiresIn={expiresIn}\n      color=\"yellow\"\n      className=\"absolute top-0 z-10 -translate-y-1/2 p-2 px-3\"\n    />\n  );\n}\n","import React, { Dispatch, ReactNode, SetStateAction, useEffect, useState } from \"react\";\n\nimport Modal from \"ui/components/shared/NewModal\";\nimport hooks from \"ui/hooks\";\nimport { useGetRecordingId } from \"ui/hooks/recordings\";\nimport { ExperimentalUserSettings, Recording } from \"ui/types\";\nimport { showDurationWarning } from \"ui/utils/recording\";\nimport { trackEvent } from \"ui/utils/telemetry\";\nimport { decodeWorkspaceId } from \"ui/utils/workspace\";\n\nimport Icon from \"../shared/Icon\";\nimport LoadingScreen from \"../shared/LoadingScreen\";\nimport ReplayLogo from \"../shared/ReplayLogo\";\nimport { BubbleViewportWrapper } from \"../shared/Viewport\";\nimport { MY_LIBRARY } from \"./libraryConstants\";\nimport { Privacy, ToggleShowPrivacyButton } from \"./Privacy\";\nimport ReplayTitle from \"./ReplayTitle\";\nimport Sharing from \"./Sharing\";\nimport { UploadRecordingTrialEnd } from \"./UploadRecordingTrialEnd\";\n\ntype UploadScreenProps = {\n  recording: Recording;\n  userSettings: ExperimentalUserSettings;\n  onUpload: () => void;\n};\ntype Status = \"saving\" | \"deleting\" | \"deleted\" | null;\n\nfunction DeletedScreen({ url }: { url: string }) {\n  const navigateToUrl = () => {\n    window.location.href = url;\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      navigateToUrl();\n    }, 1200);\n  });\n\n  return (\n    <div className=\"h-full w-full\">\n      <Modal>\n        <div\n          className=\"relative flex flex-col items-center justify-between space-y-4 overflow-y-auto rounded-md bg-modalBgcolor p-9 text-base shadow-lg\"\n          style={{ width: \"400px\" }}\n        >\n          <ReplayLogo size=\"sm\" />\n          <h2 className=\"text-2xl font-bold \">{`Replay discarded`}</h2>\n          <div className=\"text-md space-y-2\">\n            <div>{`Hang tight while we load your library...`}</div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nfunction Actions({ onDiscard, status }: { onDiscard: () => void; status: Status }) {\n  const isSaving = status === \"saving\";\n  const isDeleting = status === \"deleting\";\n  const shouldDisableActions = isSaving || isDeleting;\n  const saveButtonRef = React.useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    saveButtonRef.current?.focus(); // for faster/more keyboard accessible uploads\n  }, []);\n\n  return (\n    <div className=\"space-x-5\">\n      <button\n        type=\"button\"\n        onClick={onDiscard}\n        disabled={shouldDisableActions}\n        className=\"py-3.5 px-8 text-secondaryAccent hover:underline focus:underline focus:outline-none\"\n      >\n        {isDeleting ? `Discarding…` : `Discard`}\n      </button>\n      <input\n        type=\"submit\"\n        disabled={shouldDisableActions}\n        value={isSaving ? `Uploading…` : `Save`}\n        ref={saveButtonRef}\n        className=\"mb-8 cursor-pointer rounded-xl bg-primaryAccent py-3.5 px-16 font-bold text-buttontextColor shadow-sm hover:bg-primaryAccentHover focus:border-primaryAccentHover focus:outline-none focus:ring focus:ring-primaryAccentHover\"\n      />\n    </div>\n  );\n}\n\nfunction LimitWarning() {\n  return (\n    <div className=\"absolute bottom-2 right-2 flex place-content-center rounded-md bg-gray-500 p-2 text-xs text-white shadow-lg\">\n      <Icon filename=\"warning\" size=\"small\" className=\"bg-white\" />\n      <span className=\"px-1\">Replays work best under 2 minutes</span>\n    </div>\n  );\n}\n\nfunction ReplayScreenshot({\n  screenData,\n  showLimitWarning,\n}: {\n  screenData: string;\n  showLimitWarning: boolean;\n}) {\n  return (\n    <div className=\"relative h-64 rounded-lg bg-jellyfishBgcolor px-6 pt-6 shadow-lg short:hidden\">\n      {showLimitWarning ? <LimitWarning /> : null}\n      <img src={screenData} className=\"m-auto h-full\" />\n    </div>\n  );\n}\n\nexport default function UploadScreen({ recording, userSettings, onUpload }: UploadScreenProps) {\n  const recordingId = useGetRecordingId();\n  // This is pre-loaded in the parent component.\n  const { screenData, loading: loading1 } = hooks.useGetRecordingPhoto(recordingId!);\n  const { workspaces, loading: loading2 } = hooks.useGetNonPendingWorkspaces();\n  const [showPrivacy, setShowPrivacy] = useState(false);\n\n  const [status, setStatus] = useState<Status>(null);\n  const [inputValue, setInputValue] = useState(recording?.title || \"Untitled\");\n  // The actual replay in the database is public by default, for test purposes.\n  // Before being initialized, public/private behaves similarly since non-authors\n  // can't view the replay.\n  const [isPublic, setIsPublic] = useState(false);\n  const [selectedWorkspaceId, setSelectedWorkspaceId] = useState<string>(\n    userSettings?.defaultWorkspaceId || MY_LIBRARY\n  );\n\n  const initializeRecording = hooks.useInitializeRecording();\n  const updateIsPrivate = hooks.useUpdateIsPrivate();\n  const deleteRecording = hooks.useDeleteRecording(() => setStatus(\"deleted\"));\n\n  useEffect(() => {\n    // Show a prompt making sure the user doesn't accidentally navigate away from the page.\n    window.onbeforeunload = () => {\n      return true;\n    };\n\n    return () => {\n      window.onbeforeunload = null;\n    };\n  }, []);\n\n  const onSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    setStatus(\"saving\");\n    const workspaceId = selectedWorkspaceId == MY_LIBRARY ? null : selectedWorkspaceId;\n\n    trackEvent(\"upload.create_replay\", {\n      workspaceUuid: decodeWorkspaceId(workspaceId),\n    });\n\n    await initializeRecording({\n      variables: { recordingId, title: inputValue, workspaceId },\n    });\n    updateIsPrivate(recordingId, !isPublic);\n    onUpload();\n  };\n  const onDiscard = () => {\n    setStatus(\"deleting\");\n    trackEvent(\"upload.discard\");\n    window.onbeforeunload = null;\n    deleteRecording({ variables: { recordingId } });\n  };\n\n  if (loading1) {\n    return <LoadingScreen fallbackMessage=\"Loading recording metadata...\" />;\n  }\n  if (loading2) {\n    return <LoadingScreen fallbackMessage=\"Loading team info...\" />;\n  }\n\n  if (status === \"deleted\") {\n    return <DeletedScreen url=\"/\" />;\n  }\n\n  return (\n    <BubbleViewportWrapper>\n      <div className=\"flex flex-col items-center\">\n        <UploadRecordingTrialEnd {...{ selectedWorkspaceId, workspaces }} />\n        <form className=\"relative flex flex-col items-center overflow-auto\" onSubmit={onSubmit}>\n          <div className=\"mb-10 flex flex-row space-x-4 short:h-auto\">\n            <div\n              className=\"relative flex flex-col overflow-hidden rounded-xl text-lg font-medium shadow-lg\"\n              style={{ width: \"620px\" }}\n            >\n              <div className=\"absolute h-full w-full bg-jellyfishBgcolor\" />\n              <div className=\"relative space-y-6 px-8 py-9\">\n                <ReplayTitle inputValue={inputValue} setInputValue={setInputValue} />\n                <ReplayScreenshot\n                  screenData={screenData!}\n                  showLimitWarning={showDurationWarning(recording)}\n                />\n              </div>\n              <div className=\"relative space-y-6 border-t border-themeBorder px-8 py-9\">\n                <Sharing\n                  workspaces={workspaces}\n                  selectedWorkspaceId={selectedWorkspaceId}\n                  setSelectedWorkspaceId={setSelectedWorkspaceId}\n                  isPublic={isPublic}\n                  setIsPublic={setIsPublic}\n                />\n                {isPublic && recording.operations ? (\n                  <div className=\"border focus:bg-red-500 focus:text-blue-800\">\n                    <ToggleShowPrivacyButton\n                      showPrivacy={showPrivacy}\n                      operations={recording.operations}\n                      setShowPrivacy={setShowPrivacy}\n                    />\n                  </div>\n                ) : null}\n              </div>\n            </div>\n            {showPrivacy && isPublic ? (\n              <div\n                className=\"relative flex h-full overflow-hidden rounded-xl bg-themeBase-90 shadow-xl\"\n                style={{ width: \"440px\" }}\n              >\n                <Privacy />\n              </div>\n            ) : null}\n          </div>\n          <Actions onDiscard={onDiscard} status={status} />\n        </form>\n      </div>\n    </BubbleViewportWrapper>\n  );\n}\n","import UploadScreen from \"./UploadScreen\";\n\nexport default UploadScreen;\n","import React, { useEffect } from \"react\";\n\nimport LoadingScreen from \"ui/components/shared/LoadingScreen\";\nimport { BlankViewportWrapper } from \"ui/components/shared/Viewport\";\nimport UploadScreen from \"ui/components/UploadScreen\";\nimport { useGetRecording, useGetRecordingId } from \"ui/hooks/recordings\";\nimport { useGetUserSettings } from \"ui/hooks/settings\";\n\nfunction UploadScreenWrapper({ onUpload }: { onUpload: () => void }) {\n  const recordingId = useGetRecordingId();\n  const { recording } = useGetRecording(recordingId);\n  // Make sure to get the user's settings before showing the upload screen.\n  const { userSettings, loading } = useGetUserSettings();\n\n  useEffect(() => {\n    if (recording?.isInitialized) {\n      window.onbeforeunload = null;\n    }\n  });\n\n  if (loading) {\n    return <LoadingScreen fallbackMessage=\"Loading settings...\" />;\n  }\n\n  return recording ? (\n    <UploadScreen userSettings={userSettings} recording={recording} onUpload={onUpload} />\n  ) : (\n    <BlankViewportWrapper />\n  );\n}\n\nexport default UploadScreenWrapper;\n","import { Menu } from \"@headlessui/react\";\nimport classNames from \"classnames\";\nimport React from \"react\";\n\nimport Icon from \"../shared/Icon\";\nimport styles from \"./Library.module.css\";\n\n// This should be the standard dropdown component for the Library\n// but then we should slowly make it even more general purpose\n// so that all dropdowns look the same.\n\nexport function DropdownButton({\n  className,\n  children,\n  disabled,\n}: {\n  className?: string;\n  children: React.ReactElement;\n  disabled?: boolean;\n}) {\n  return (\n    <Menu.Button\n      className={classNames(className, \"flex items-center px-1 py-2 text-sm\")}\n      disabled={disabled}\n    >\n      {children}\n    </Menu.Button>\n  );\n}\n\nexport function Dropdown({\n  children,\n  menuItemsClassName,\n  widthClass = \"w-56\",\n  fontSizeClass = \"text-sm\",\n}: {\n  children: React.ReactNode;\n  menuItemsClassName?: string;\n  widthClass?: \"\" | \"w-56\" | \"w-64\" | \"w-80\";\n  fontSizeClass?: \"text-sm\" | \"text-base\";\n}) {\n  return (\n    <Menu as=\"div\" className=\"recording-options inline-block text-left shadow-lg\">\n      {({ open }) => (\n        <Menu.Items\n          static\n          className={classNames(\n            menuItemsClassName,\n            widthClass,\n            fontSizeClass,\n            \"right-0 origin-top-right rounded-md border-modalBorder bg-menuBgcolor shadow-lg ring-1 ring-black ring-opacity-5 backdrop-blur-sm focus:outline-none\"\n          )}\n        >\n          <div className=\"py-1\">{children}</div>\n        </Menu.Items>\n      )}\n    </Menu>\n  );\n}\n\nexport function DropdownItem({\n  children,\n  onClick,\n}: {\n  children: string | React.ReactElement;\n  onClick: (e: React.MouseEvent) => void;\n}) {\n  return (\n    <Menu.Item>\n      {({ active }) => (\n        <a\n          href=\"#\"\n          className={classNames(\n            active ? \"bg-menuHoverBgcolor text-menuHoverColor\" : \"text-menuColor\",\n            \"block px-4 py-2\"\n          )}\n          onClick={onClick}\n        >\n          {children}\n        </a>\n      )}\n    </Menu.Item>\n  );\n}\n\nexport function DropdownItemContent({\n  children,\n  icon,\n  selected,\n}: {\n  children: string | React.ReactElement;\n  icon: string;\n  selected: boolean;\n}) {\n  return (\n    <div className=\"flex flex-row space-x-4\">\n      <div className={classNames(\"flex w-4 flex-row items-center\")}>\n        <Icon\n          filename={icon}\n          className={classNames(\n            \"group-hover:bg-primaryAccent\",\n            selected ? \"bg-primaryAccent\" : \"bg-gray-400\"\n          )}\n        />\n      </div>\n      <span className=\"overflow-hidden overflow-ellipsis whitespace-pre\">{children}</span>\n    </div>\n  );\n}\n\nexport function DropdownDivider() {\n  return <div className={`w-full ${styles.dropdownDivider}`} />;\n}\n","import React from \"react\";\n\nconst SIZES = {\n  custom: {},\n  small: { height: \"1rem\", width: \"1rem\" },\n  medium: { height: \"1.25rem\", width: \"1.25rem\" },\n  large: { height: \"1.5rem\", width: \"1.5rem\" },\n  \"extra-large\": { height: \"2rem\", width: \"2rem\" },\n};\nexport default function Icon({\n  filename,\n  className = \"bg-gray-800\",\n  size = \"medium\",\n  style = {},\n}: {\n  size?: \"small\" | \"medium\" | \"large\" | \"extra-large\" | \"custom\";\n  filename: string;\n  className?: string;\n  style?: object;\n}) {\n  const sizeStyles = SIZES[size];\n  return <div className={`icon ${filename} ${className}`} style={{ ...sizeStyles, ...style }} />;\n}\n","import React, { CSSProperties, RefObject, useCallback, useRef, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { getToolboxLayout } from \"ui/reducers/layout\";\nimport { useAppSelector } from \"ui/setup/hooks\";\n\nimport { DropdownProps } from \"./Dropdown\";\n\ninterface PortalDropdownProps extends DropdownProps {\n  disabled?: boolean;\n  distance?: number;\n  style?: CSSProperties;\n}\n\ntype Direction = \"top\" | \"bottom\";\ntype Position = \"top-right\" | \"bottom-right\" | \"top-left\" | \"bottom-left\";\n\ntype ViewportOverflows = Direction[];\n\nexport default function PortalDropdown(props: PortalDropdownProps) {\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const [dropdownNode, setDropdownNode] = useState<HTMLDivElement | null>(null);\n\n  const expand = (e: React.MouseEvent) => {\n    if (e.button === 0) {\n      e.stopPropagation();\n      e.preventDefault();\n      props.setExpanded(true);\n    }\n  };\n  const collapse = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    props.setExpanded(false);\n  };\n\n  const {\n    buttonContent,\n    children,\n    position = \"bottom-left\",\n    buttonStyle = \"primary\",\n    style,\n    expanded,\n  } = props;\n\n  const contentPosition = getContentPosition(props, buttonRef, dropdownNode);\n  const toolboxLayout = useAppSelector(getToolboxLayout);\n\n  return (\n    <div className=\"portal-dropdown-wrapper\">\n      <button\n        type=\"button\"\n        className={`expand-dropdown flex w-full ${buttonStyle}`}\n        disabled={props.disabled}\n        id=\"portal-dropdown-button\"\n        data-test-id=\"consoleDockButton\"\n        data-test-state={toolboxLayout}\n        onMouseDown={expand}\n        ref={buttonRef}\n      >\n        {buttonContent}\n      </button>\n      {expanded\n        ? createPortal(\n            <div className=\"portal-dropdown-container\">\n              <div className=\"mask\" onClick={collapse} />\n              <div\n                className={`content ${position}`}\n                style={{ ...style, ...contentPosition }}\n                ref={setDropdownNode}\n              >\n                {children}\n              </div>\n            </div>,\n            document.body\n          )\n        : null}\n    </div>\n  );\n}\n\nfunction getContentPosition(\n  props: PortalDropdownProps,\n  buttonRef: RefObject<HTMLButtonElement>,\n  dropdownNode: HTMLDivElement | null\n): CSSProperties {\n  if (props.expanded && buttonRef.current) {\n    const buttonRect = buttonRef.current.getBoundingClientRect();\n    const docRect = document.body.getBoundingClientRect();\n    const dropdownRect = dropdownNode?.getBoundingClientRect();\n\n    const { left, right, top, bottom } = buttonRect;\n    const { width, height } = docRect;\n    const distance = props.distance || 5;\n\n    let position = props.position || \"bottom-left\";\n    const viewportOverflows = getViewportOverflows(docRect, dropdownRect);\n\n    viewportOverflows.forEach(overflow => {\n      if (position.includes(overflow)) {\n        position = adjustPosition(position, overflow);\n      }\n    });\n\n    switch (position) {\n      case \"top-right\":\n        return { bottom: height - top + distance + \"px\", left: left + \"px\" };\n      case \"bottom-right\":\n        return { top: bottom + distance + \"px\", left: left + \"px\" };\n      case \"top-left\":\n        return { bottom: height - top + distance + \"px\", right: width - right + \"px\" };\n      case \"bottom-left\":\n        return { top: bottom + distance + \"px\", right: width - right + \"px\" };\n    }\n  }\n\n  return {};\n}\n\nfunction getViewportOverflows(doc: ClientRect, dropdown?: ClientRect): ViewportOverflows {\n  const overflows: ViewportOverflows = [];\n\n  if (!dropdown) {\n    return [];\n  }\n\n  if (doc.bottom < dropdown.bottom) {\n    overflows.push(\"bottom\");\n  }\n\n  if (doc.top > dropdown.top) {\n    overflows.push(\"top\");\n  }\n\n  return overflows;\n}\n\nfunction adjustPosition(position: Position, overflow: Direction) {\n  const oppositeMap = { top: \"bottom\", bottom: \"top\" };\n\n  return position.replace(overflow, oppositeMap[overflow]) as Position;\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport MaterialIcon from \"./MaterialIcon\";\n\nexport function TrialEnd({\n  expiresIn,\n  color = \"gray\",\n  className,\n  onClick,\n}: {\n  expiresIn: number;\n  color?: \"yellow\" | \"gray\";\n  className?: string;\n  onClick?: () => void;\n}) {\n  const style = {\n    backgroundColor: color === \"yellow\" ? \"#FFFB96\" : \"#E9E9EB\",\n    cursor: onClick ? \"pointer\" : \"default\",\n  };\n\n  if (expiresIn >= 21) {\n    return null;\n  }\n\n  return (\n    <div\n      className={classNames(\"flex flex-row items-center space-x-2 rounded-lg p-4 py-1\", className)}\n      style={style}\n      onClick={onClick}\n    >\n      <MaterialIcon iconSize=\"xl\" className=\"text-gray-700\">\n        timer\n      </MaterialIcon>\n      <span className=\"overflow-hidden overflow-ellipsis whitespace-pre text-gray-500\">\n        {expiresIn > 1 ? (\n          <span>Trial expires in {expiresIn} days</span>\n        ) : expiresIn == 1 ? (\n          <span>Trial expires in 1 day</span>\n        ) : (\n          <span>Trial expired</span>\n        )}\n      </span>\n    </div>\n  );\n}\n","import { useGetNonPendingWorkspaces } from \"ui/hooks/workspaces\";\nimport { Workspace, WorkspaceSettings } from \"ui/types\";\n\nimport { useGetTeamIdFromRoute } from \"../components/Library/Team/utils\";\n\nexport function getDefaultOrganizationSettings(): WorkspaceSettings {\n  return {\n    features: {\n      user: {\n        library: true,\n        autoJoin: null,\n      },\n      recording: {\n        public: true,\n        allowList: [],\n        blockList: [],\n      },\n    },\n    motd: null,\n  };\n}\n\nexport function getOrganizationSettings(workspaces: Workspace[]) {\n  const org = workspaces.find(w => w.isOrganization);\n  return org?.settings || getDefaultOrganizationSettings();\n}\n\nexport function useIsPublicEnabled() {\n  const { workspaces, loading: loadingWorkspaces } = useGetNonPendingWorkspaces();\n  const teamId = useGetTeamIdFromRoute();\n\n  if (loadingWorkspaces) {\n    return false;\n  }\n\n  return !isPublicDisabled(workspaces, teamId);\n}\n\nexport function isPublicDisabled(workspaces: Workspace[], selectedWorkspaceId: string | null) {\n  const workspace = workspaces.find(w => w.id === selectedWorkspaceId);\n  const publicDisabledMyLibrary = workspaces.some(\n    w => w.settings?.features.recording.public === false\n  );\n  return (\n    (!selectedWorkspaceId && publicDisabledMyLibrary) ||\n    workspace?.settings?.features.recording.public === false\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"libraryHeader\":\"Library_libraryHeader__Q6BUj\",\"libraryWrapper\":\"Library_libraryWrapper__r3pJD\",\"libraryRow\":\"Library_libraryRow__bJfe0\",\"libraryRowSelected\":\"Library_libraryRowSelected__90gMl\",\"teamRow\":\"Library_teamRow__YfBbJ\",\"teamRowActive\":\"Library_teamRowActive__F8V2w\",\"dropdownDivider\":\"Library_dropdownDivider__dG_PD\",\"editButton\":\"Library_editButton__1jLbJ\",\"recordingsBackground\":\"Library_recordingsBackground__tHlCM\",\"navigation\":\"Library_navigation__GBDVP\",\"workspaceName\":\"Library_workspaceName__zZEkn\",\"runOverview\":\"Library_runOverview__L_KLG\"};"],"names":["MY_LIBRARY","personalWorkspace","id","name","ReplayTitle","inputValue","setInputValue","className","type","onChange","e","target","value","SettingsPreview","onClick","isPublic","workspaces","selectedWorkspaceId","features","getOrganizationSettings","canEdit","length","user","library","recording","public","workspaceName","find","w","icon","text","getIconAndText","classNames","undefined","style","minHeight","fontSize","TeamSelectButton","selectedWorkspaceName","SelectorIcon","TeamSelect","handleWorkspaceSelect","userInfo","useGetUserInfo","expanded","setExpanded","useState","displayedWorkspaces","sort","button","PortalDropdown","buttonContent","buttonStyle","distance","position","widthClass","fontSizeClass","map","workspace","handleSelect","EditableSettings","setSelectedWorkspaceId","setIsPublic","updateDefaultWorkspace","hooks","publicDisabled","isPublicDisabled","variables","workspaceId","enabled","setEnabled","Sharing","props","isEditing","setIsEditing","UploadRecordingTrialEnd","expiresIn","subscriptionEndsIn","inUnpaidFreeTrial","TrialEnd","color","DeletedScreen","url","useEffect","setTimeout","window","location","href","width","ReplayLogo","size","Actions","onDiscard","status","isSaving","isDeleting","shouldDisableActions","saveButtonRef","React","current","focus","disabled","ref","LimitWarning","Icon","filename","ReplayScreenshot","screenData","showLimitWarning","src","userSettings","onUpload","recordingId","useGetRecordingId","loading","loading1","loading2","showPrivacy","setShowPrivacy","setStatus","title","defaultWorkspaceId","initializeRecording","updateIsPrivate","deleteRecording","onbeforeunload","LoadingScreen","fallbackMessage","onSubmit","async","preventDefault","trackEvent","workspaceUuid","decodeWorkspaceId","showDurationWarning","operations","Privacy","useGetRecording","useGetUserSettings","isInitialized","B","Dropdown","children","menuItemsClassName","as","open","static","DropdownItem","active","DropdownItemContent","selected","DropdownDivider","styles","SIZES","custom","small","height","medium","large","sizeStyles","buttonRef","useRef","dropdownNode","setDropdownNode","contentPosition","buttonRect","getBoundingClientRect","docRect","document","body","dropdownRect","left","right","top","bottom","doc","dropdown","overflows","push","getViewportOverflows","forEach","overflow","includes","oppositeMap","replace","adjustPosition","getContentPosition","toolboxLayout","useAppSelector","getToolboxLayout","onMouseDown","stopPropagation","createPortal","backgroundColor","cursor","iconSize","isOrganization","settings","autoJoin","allowList","blockList","motd","useIsPublicEnabled","loadingWorkspaces","useGetNonPendingWorkspaces","teamId","useGetTeamIdFromRoute","publicDisabledMyLibrary","some","module","exports"],"sourceRoot":""}