{"version":3,"file":"static/chunks/pages/browser/error-20cf2345bdfcc3b8.js","mappings":"gLAwDA,UAjDqB,KACnB,MAAM,OAAEA,IAAWC,EAAAA,EAAAA,KAEnB,IACEC,OAASC,QAASC,EAAU,mBAArB,IAAyCC,EAAzC,KAA8CC,KACnDC,EAAAA,EAAAA,cAEJC,EAAAA,EAAAA,YAAU,KACK,SAATF,GAGFN,EAAO,CAAES,WAAW,MAErB,CAACT,EAAQM,IAQI,iCAAZF,IACFA,EACE,gJAGJ,MAAMM,GAAWC,EAAAA,EAAAA,KACXR,EAAmB,SAATG,EAAkB,oBAAsB,6BAExD,OACE,gCACY,SAATA,GAIC,mBAAQM,IAAM,WAAUF,cAAsBG,MAAO,CAAEC,OAAQ,EAAGC,MAAO,KACvE,MACJ,SAAC,KAAD,CACEC,MAAO,CACLb,QAAAA,EACAC,QAASa,MAAMC,QAAQd,GAAWA,EAAQ,GAAKA,EAC/Ce,OAAQd,EAAM,iBAAce,EAC5BC,SA3Ba,KACfhB,IACFiB,OAAOC,SAASC,KAAOP,MAAMC,QAAQb,GAAOA,EAAI,GAAKA,Y,uBCvBtDiB,OAAOG,SAAWH,OAAOG,UAAY,IAAIC,KAAK,CAC7C,iBACA,WACE,OAAO,EAAQ,Y","sources":["webpack://_N_E/./pages/browser/error.tsx","webpack://_N_E/?020b"],"sourcesContent":["import { useRouter } from \"next/dist/client/router\";\nimport React, { useEffect } from \"react\";\n\nimport { ExpectedErrorScreen } from \"ui/components/shared/Error\";\nimport { getAuthHost } from \"ui/utils/auth\";\nimport useAuth0 from \"ui/utils/useAuth0\";\n\nconst BrowserError = () => {\n  const { logout } = useAuth0();\n\n  let {\n    query: { message: content = \"Please try again\", url, type },\n  } = useRouter();\n\n  useEffect(() => {\n    if (type === \"auth\") {\n      // Clean up the local auth state separately since we're logging out of\n      // auth0 via an iframe\n      logout({ localOnly: true });\n    }\n  }, [logout, type]);\n\n  const handleAction = () => {\n    if (url) {\n      window.location.href = Array.isArray(url) ? url[0] : url;\n    }\n  };\n\n  if (content === \"Unexpected identity provider\") {\n    content =\n      \"We received an unexpected authentication source. Did you mean to use an Enterprise SSO? Please try signing in again from the Replay browser.\";\n  }\n\n  const authHost = getAuthHost();\n  const message = type === \"auth\" ? \"Unable to Sign In\" : \"Unexpected recording error\";\n\n  return (\n    <>\n      {type === \"auth\" ? (\n        // CORS prevents fetch()-ing the logout URL and logout() wants to\n        // redirect so this logs out the user silently so they can restart\n        // the auth process cleanly\n        <iframe src={`https://${authHost}/v2/logout`} style={{ height: 0, width: 0 }} />\n      ) : null}\n      <ExpectedErrorScreen\n        error={{\n          message,\n          content: Array.isArray(content) ? content[0] : content,\n          action: url ? \"try-again\" : undefined,\n          onAction: handleAction,\n        }}\n      />\n    </>\n  );\n};\n\nexport default BrowserError;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/browser/error\",\n      function () {\n        return require(\"private-next-pages/browser/error.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/browser/error\"])\n      });\n    }\n  "],"names":["logout","useAuth0","query","message","content","url","type","useRouter","useEffect","localOnly","authHost","getAuthHost","src","style","height","width","error","Array","isArray","action","undefined","onAction","window","location","href","__NEXT_P","push"],"sourceRoot":""}