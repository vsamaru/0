{"version":3,"file":"static/chunks/2083.13d7917bbe5c3efa.js","mappings":"mMA8CA,MAAMA,GAAYC,EAAAA,EAAAA,KACfC,IAAD,CACEC,gBAAgBC,EAAAA,EAAAA,IAAkBF,MAEpC,CAAEG,UAAWC,EAAAA,YAGf,UAAeN,GAvCf,UAA6B,UAAEK,EAAF,eAAaF,IACxC,MAAM,IAAEI,GAAQJ,EACVK,EAJWD,CAAAA,GAA4BA,GAAOA,EAAIE,SAAS,WAIlDC,CAAUH,GAEnBI,EAAMH,EACR,gFACA,qHAUJ,OACE,SAAC,KAAD,CAAOI,QAAS,CAAEC,iBAAkB,eAAiBC,YAAaT,EAAlE,UACE,UAAC,KAAD,CAAQU,iBAAiB,EAAzB,WACE,SAAC,KAAD,KACA,SAAC,KAAD,gDACA,SAAC,KAAD,UAAoBJ,KACpB,SAAC,KAAD,WACE,gBAAKK,UAAU,oCAAf,UACE,SAAC,KAAD,CAAeC,MAAM,OAAOC,QAhBtB,KACd,MAAMC,EAAWX,EACb,gGACA,gGAEJY,OAAOC,KAAKF,IAWJ,SAAgD","sources":["webpack://_N_E/./src/ui/components/shared/Modals/SourcemapSetupModal.tsx"],"sourcesContent":["import classNames from \"classnames\";\nimport React from \"react\";\nimport { ConnectedProps, connect } from \"react-redux\";\n\nimport * as actions from \"ui/actions/app\";\nimport { getSelectedSource } from \"ui/reducers/sources\";\nimport { UIState } from \"ui/state\";\n\nimport { PrimaryButton } from \"../Button\";\nimport { Dialog, DialogActions, DialogDescription, DialogLogo, DialogTitle } from \"../Dialog\";\nimport Modal from \"../NewModal\";\n\nconst isNextUrl = (url: string | undefined) => url && url.includes(\"/_next/\");\n\nfunction SourcemapSetupModal({ hideModal, selectedSource }: PropsFromRedux) {\n  const { url } = selectedSource;\n  const isNext = isNextUrl(url);\n\n  const msg = isNext\n    ? \"We noticed that you're using NextJS which makes adding sourcemaps super easy.\"\n    : \"We noticed that you have sourcemaps, but they are not publicly available. Would you like to upload them to Replay?\";\n\n  const onClick = () => {\n    const docsLink = isNext\n      ? \"https://docs.replay.io/docs/1923e679c1e4411db1bda29536eb1e31#6e444abdd19642af9ddc34766ff84bf2\"\n      : \"https://docs.replay.io/docs/1923e679c1e4411db1bda29536eb1e31#912af13ef09a41f4ae774a90796ebbc1\";\n\n    window.open(docsLink);\n  };\n\n  return (\n    <Modal options={{ maskTransparency: \"translucent\" }} onMaskClick={hideModal}>\n      <Dialog showFooterLinks={false}>\n        <DialogLogo />\n        <DialogTitle>Replay is better with sourcemaps</DialogTitle>\n        <DialogDescription>{msg}</DialogDescription>\n        <DialogActions>\n          <div className=\"flex w-full flex-col items-center\">\n            <PrimaryButton color=\"blue\" onClick={onClick}>{`Show me how`}</PrimaryButton>\n          </div>\n        </DialogActions>\n      </Dialog>\n    </Modal>\n  );\n}\n\nconst connector = connect(\n  (state: UIState) => ({\n    selectedSource: getSelectedSource(state)!,\n  }),\n  { hideModal: actions.hideModal }\n);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\nexport default connector(SourcemapSetupModal);\n"],"names":["connector","connect","state","selectedSource","getSelectedSource","hideModal","actions","url","isNext","includes","isNextUrl","msg","options","maskTransparency","onMaskClick","showFooterLinks","className","color","onClick","docsLink","window","open"],"sourceRoot":""}