{"version":3,"file":"static/chunks/1824.b855a4d64eb2d3bb.js","mappings":"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","sources":["webpack://_N_E/./node_modules/classnames/bind.js","webpack://_N_E/./src/ui/components/Avatar.tsx","webpack://_N_E/./src/ui/components/shared/APIKeys.tsx","webpack://_N_E/./src/ui/components/shared/Forms/Checkbox.tsx","webpack://_N_E/./src/ui/components/shared/Icon.tsx","webpack://_N_E/./src/ui/components/shared/SettingsModal/SettingsBody.tsx","webpack://_N_E/./src/ui/components/shared/Modal.tsx","webpack://_N_E/./src/ui/components/shared/SettingsModal/SettingsNavigation.tsx","webpack://_N_E/./src/ui/components/shared/SettingsModal/index.tsx","webpack://_N_E/./src/ui/components/shared/SettingsModal/SettingsModal.tsx","webpack://_N_E/./src/ui/components/shared/UserSettingsModal/CheckboxRow.tsx","webpack://_N_E/./src/ui/components/shared/UserSettingsModal/ExperimentalSettings.tsx","webpack://_N_E/./src/ui/components/shared/UserSettingsModal/PreferencesSettings.tsx","webpack://_N_E/./src/ui/components/shared/UserSettingsModal/UserSettingsModal.tsx","webpack://_N_E/./src/ui/components/shared/UserSettingsModal/index.ts","webpack://_N_E/./src/ui/components/Avatar.module.css"],"sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(this && this[arg] || arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(this, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(this && this[key] || key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import classNames from \"classnames/bind\";\nimport React from \"react\";\n\nimport { User } from \"ui/types\";\nimport useAuth0 from \"ui/utils/useAuth0\";\nimport { getAvatarColor } from \"ui/utils/user\";\n\nimport css from \"./Avatar.module.css\";\n\nconst cx = classNames.bind(css);\n\n// The user image URLs that we get from Google sometimes fail to load, in that case\n// we fall back to a transparent image (instead of showing the browser's icon for broken images)\ntype AvatarImageProps = Omit<React.ImgHTMLAttributes<HTMLImageElement>, \"src\"> & {\n  src: string | null | undefined;\n};\nexport const AvatarImage = (props: AvatarImageProps) => (\n  <img\n    data-private\n    {...props}\n    src={props.src || undefined}\n    onError={e => (e.currentTarget.src = \"/images/clear.png\")}\n  />\n);\n\nexport const AuthAvatar = ({ user }: { user: User }) => {\n  return (\n    <div className={cx(\"avatar authenticated firstPlayer\")}>\n      <AvatarImage src={user.picture} />\n    </div>\n  );\n};\n\nexport interface AvatarProps {\n  player: any;\n  isFirstPlayer: boolean;\n  index?: number;\n}\n\nexport default function Avatar({ player, isFirstPlayer, index }: AvatarProps) {\n  let auth = useAuth0();\n\n  if (auth.isAuthenticated && isFirstPlayer) {\n    return <AuthAvatar user={auth.user} />;\n  }\n\n  if (player.name) {\n    return (\n      <div className={cx(\"avatar\")} title={player.name}>\n        <AvatarImage src={player.picture} />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={cx(\"avatar\")}\n      title={\"Anonymous User\"}\n      style={{ background: getAvatarColor(index) }}\n    />\n  );\n}\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\n\nimport { ApiKey, ApiKeyResponse, ApiKeyScope } from \"ui/types\";\n\nimport { useConfirm } from \"./Confirm\";\nimport TextInput from \"./Forms/TextInput\";\nimport MaterialIcon from \"./MaterialIcon\";\n\nconst scopeLabels: Record<ApiKeyScope, string> = {\n  \"admin:all\": \"Create recordings\",\n  \"write:sourcemap\": \"Upload source maps\",\n};\n\nfunction NewApiKey({ keyValue, onDone }: { keyValue: string; onDone: () => void }) {\n  const [copied, setCopied] = useState(false);\n\n  useEffect(() => {\n    if (copied) {\n      setTimeout(() => setCopied(false), 2000);\n    }\n  }, [copied, setCopied]);\n\n  return (\n    <>\n      <div className=\"flex items-center justify-between space-x-3\">\n        <div className=\"w-0 flex-auto\">\n          <div className=\"flex h-9 w-full items-center rounded-md border border-textFieldBorder bg-themeTextFieldBgcolor px-2.5 text-themeTextFieldColor text-primaryAccent\">\n            <input\n              readOnly\n              value={keyValue}\n              className=\"flex-auto truncate bg-themeTextFieldBgcolor focus:outline-none\"\n              onFocus={ev => ev.target.setSelectionRange(0, keyValue.length)}\n            />\n            {copied ? (\n              <div className=\"text-primaryAccent\">Copied</div>\n            ) : (\n              <MaterialIcon\n                className=\"material-icons w-5 cursor-pointer text-primaryAccent hover:text-primaryAccentHover\"\n                iconSize=\"lg\"\n                onClick={() => navigator.clipboard.writeText(keyValue!).then(() => setCopied(true))}\n              >\n                assignment_outline\n              </MaterialIcon>\n            )}\n          </div>\n        </div>\n        <button\n          className=\"inline-flex h-9 items-center rounded-md border border-transparent bg-primaryAccent px-2.5 py-1.5 font-medium leading-4 text-buttontextColor shadow-sm hover:bg-primaryAccentHover focus:bg-primaryAccentHover focus:outline-none\"\n          onClick={onDone}\n        >\n          Done\n        </button>\n      </div>\n      <div className=\"flex items-center rounded-md border border-textFieldBorder bg-red-100 p-2.5 text-red-800\">\n        Make sure to copy your API key now. You won{\"'\"}t be able to see it again!\n      </div>\n    </>\n  );\n}\n\nfunction ApiKeyList({ apiKeys, onDelete }: { apiKeys: ApiKey[]; onDelete: (id: string) => void }) {\n  const { confirmDestructive } = useConfirm();\n  if (apiKeys.length === 0) {\n    return null;\n  }\n\n  return (\n    <section className=\"flex flex-auto flex-col\">\n      <h3 className=\"text-base font-semibold uppercase\">API Keys</h3>\n      <div className=\"h-0 flex-auto overflow-auto\">\n        {apiKeys.map(apiKey => {\n          const usage =\n            typeof apiKey.maxRecordings === \"number\"\n              ? `(${apiKey.recordingCount} / ${apiKey.maxRecordings} recordings)`\n              : `(${apiKey.recordingCount} recordings)`;\n          return (\n            <div className=\"flex flex-row items-center py-1.5\" key={apiKey.id}>\n              <span className=\"flex-auto\" data-private>\n                {apiKey.label}\n                <span className=\"ml-2 text-gray-500\">{usage}</span>\n              </span>\n              <button\n                className=\"inline-flex items-center rounded-md bg-gray-100 p-2.5 text-sm leading-4 text-red-500 shadow-sm hover:text-red-700 focus:text-red-700 focus:outline-none\"\n                onClick={() => {\n                  confirmDestructive({\n                    message: \"Delete API key?\",\n                    description:\n                      \"This action will permanently delete this API key. \\n\\nAre you sure you want to proceed?\",\n                    acceptLabel: \"Delete API key\",\n                  }).then(confirmed => {\n                    if (confirmed) {\n                      onDelete(apiKey.id);\n                    }\n                  });\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n}\n\nexport default function APIKeys({\n  apiKeys,\n  description,\n  error,\n  loading,\n  addKey,\n  deleteKey,\n  scopes = [],\n}: {\n  apiKeys: ApiKey[];\n  scopes?: ApiKeyScope[];\n  description: string;\n  error: any;\n  loading: boolean;\n  addKey: (label: string, scopes?: ApiKeyScope[]) => Promise<ApiKeyResponse>;\n  deleteKey: (id: string) => void;\n}) {\n  const labelRef = useRef<HTMLInputElement>(null);\n  const [keyValue, setKeyValue] = useState<string>();\n  const [selectedScopes, selectScopes] = useState<ApiKeyScope[]>(scopes);\n  const [label, setLabel] = useState<string>(\"\");\n\n  const canSubmit = label && !loading && selectedScopes.length > 0;\n  const sortedKeys = useMemo(\n    () =>\n      [...apiKeys].sort(\n        (a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n      ),\n    [apiKeys]\n  );\n\n  // focus the input on mount and when returning to the form (when keyValue changes)\n  useEffect(() => {\n    labelRef.current?.focus();\n  }, [keyValue]);\n\n  return (\n    <div className=\"flex h-0 flex-auto flex-col space-y-8\">\n      <label className=\"setting-item\">\n        <div className=\"description\">{description}</div>\n      </label>\n      {error ? (\n        <div>Unable to add an API key at this time. Please try again later.</div>\n      ) : keyValue ? (\n        <NewApiKey keyValue={keyValue} onDone={() => setKeyValue(undefined)} />\n      ) : (\n        <>\n          <section className=\"space-y-2.5 text-sm\">\n            <h3 className=\"text-xs font-semibold uppercase\">Create new API Key</h3>\n            <form\n              className=\"space-y-3\"\n              onSubmit={ev => {\n                canSubmit &&\n                  addKey(label, selectedScopes).then(resp => {\n                    selectScopes(scopes);\n                    setKeyValue(resp.keyValue);\n                    setLabel(\"\");\n                  });\n\n                ev.preventDefault();\n              }}\n            >\n              <fieldset className=\"flex w-full flex-row space-x-1.5\">\n                <TextInput\n                  disabled={loading}\n                  placeholder=\"API Key Label\"\n                  onChange={e => setLabel((e.target as HTMLInputElement).value)}\n                  ref={labelRef}\n                  value={label}\n                />\n                <button\n                  type=\"submit\"\n                  disabled={!canSubmit}\n                  className={`inline-flex items-center rounded-md border border-transparent bg-primaryAccent px-2.5 py-1.5 font-medium leading-4 text-buttontextColor shadow-sm focus:outline-none ${\n                    canSubmit\n                      ? \"hover:bg-primaryAccentHover focus:bg-primaryAccentHover\"\n                      : \"opacity-60\"\n                  }`}\n                >\n                  Add\n                </button>\n              </fieldset>\n              {scopes && scopes.length > 1 ? (\n                <fieldset className=\"w-full\">\n                  <h4 className=\"text-sm font-semibold uppercase\">Permissions</h4>\n                  {scopes.map(scope => (\n                    <label key={scope} className=\"mx-1.5 inline-block space-x-1.5\">\n                      <input\n                        type=\"checkbox\"\n                        onChange={e =>\n                          selectScopes(current => {\n                            if ((e.target as HTMLInputElement).checked) {\n                              return [...current, scope];\n                            } else {\n                              return current.filter(s => s !== scope);\n                            }\n                          })\n                        }\n                        checked={selectedScopes.includes(scope)}\n                      />\n                      <span>{scopeLabels[scope]}</span>\n                    </label>\n                  ))}\n                  {selectedScopes.length === 0 ? (\n                    <div className=\"mt-2.5 flex items-center rounded-md border border-textFieldBorder bg-red-100 p-2.5\">\n                      At least one permission must be selected.\n                    </div>\n                  ) : null}\n                </fieldset>\n              ) : null}\n            </form>\n          </section>\n          <ApiKeyList\n            apiKeys={sortedKeys}\n            onDelete={id => {\n              deleteKey(id);\n              labelRef.current?.focus();\n            }}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nexport default function Checkbox({\n  id,\n  checked,\n  disabled,\n  onChange,\n  className,\n}: React.HTMLProps<HTMLInputElement>) {\n  return (\n    <input\n      type=\"checkbox\"\n      disabled={disabled}\n      className={classNames(\n        \"m-0 h-4 w-4 cursor-pointer rounded border-checkboxBorder bg-checkbox text-primaryAccent focus:ring-primaryAccent\",\n        className\n      )}\n      {...{ id, checked, onChange }}\n    />\n  );\n}\n","import React from \"react\";\n\nconst SIZES = {\n  custom: {},\n  small: { height: \"1rem\", width: \"1rem\" },\n  medium: { height: \"1.25rem\", width: \"1.25rem\" },\n  large: { height: \"1.5rem\", width: \"1.5rem\" },\n  \"extra-large\": { height: \"2rem\", width: \"2rem\" },\n};\nexport default function Icon({\n  filename,\n  className = \"bg-gray-800\",\n  size = \"medium\",\n  style = {},\n}: {\n  size?: \"small\" | \"medium\" | \"large\" | \"extra-large\" | \"custom\";\n  filename: string;\n  className?: string;\n  style?: object;\n}) {\n  const sizeStyles = SIZES[size];\n  return <div className={`icon ${filename} ${className}`} style={{ ...sizeStyles, ...style }} />;\n}\n","import React from \"react\";\n\nimport { Setting } from \"./types\";\n\ninterface SettingsBodyProps<T extends string, P extends Record<string, unknown>> {\n  selectedSetting: Setting<T, P>;\n  panelProps: P;\n}\n\nfunction SettingsBodyWrapper({ children }: { children: (React.ReactChild | null)[] }) {\n  return <main className=\"flex w-full flex-col overflow-hidden p-8 pr-2 text-sm\">{children}</main>;\n}\n\nexport function SettingsHeader({ children }: { children: React.ReactNode }) {\n  return <h1 className=\"text-2xl\">{children}</h1>;\n}\n\nexport function SettingsBodyHeader({ children }: { children: React.ReactChild }) {\n  return <h2 className=\"text-lg\">{children}</h2>;\n}\n\nexport default function SettingsBody<T extends string, P extends Record<string, unknown>>({\n  panelProps,\n  selectedSetting,\n}: SettingsBodyProps<T, P>) {\n  const { title } = selectedSetting;\n\n  return (\n    <SettingsBodyWrapper>\n      {selectedSetting.noTitle ? null : <SettingsHeader>{title}</SettingsHeader>}\n      <selectedSetting.component {...panelProps} />\n    </SettingsBodyWrapper>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"ui/actions/app\";\n\ninterface ModalProps {\n  hideModal(): any;\n  showClose?: boolean;\n  children?: React.ReactNode;\n}\n\nfunction Modal({ hideModal, children, showClose = true }: ModalProps) {\n  return (\n    <div className=\"modal-container\">\n      <div className=\"modal-mask\" onClick={hideModal} />\n      <div className=\"modal-content overflow-hidden text-sm\">\n        {showClose && (\n          <button className=\"modal-close\" onClick={hideModal}>\n            <div className=\"img close\" />\n          </button>\n        )}\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default connect(null, { hideModal: actions.hideModal })(Modal);\n","import classnames from \"classnames\";\nimport React from \"react\";\n\nimport MaterialIcon from \"../MaterialIcon\";\nimport { SettingsHeader } from \"./SettingsBody\";\nimport { Setting, Settings } from \"./types\";\n\ninterface SettingNavigationItemProps<T extends string, P extends Record<string, unknown>> {\n  setting: Setting<T, P>;\n  selectedTab?: T;\n  setSelectedTab: (title: T) => void;\n}\n\ninterface SettingNavigationProps<T extends string, P extends Record<string, unknown>> {\n  settings: Settings<T, P>;\n  selectedTab?: T;\n  setSelectedTab: (title: T) => void;\n  title?: React.ReactNode;\n  hiddenTabs?: T[];\n}\n\nfunction SettingNavigationItem<T extends string, P extends Record<string, unknown>>({\n  setting,\n  selectedTab,\n  setSelectedTab,\n}: SettingNavigationItemProps<T, P>) {\n  const { title, icon } = setting;\n  const onClick = () => {\n    setSelectedTab(title);\n  };\n\n  return (\n    <li onClick={onClick} className={classnames({ selected: title === selectedTab })}>\n      <MaterialIcon iconSize=\"lg\">{icon!}</MaterialIcon>\n      <span>{title}</span>\n    </li>\n  );\n}\n\nexport default function SettingNavigation<T extends string, P extends Record<string, unknown>>({\n  hiddenTabs,\n  settings,\n  selectedTab,\n  setSelectedTab,\n  title = \"Settings\",\n}: SettingNavigationProps<T, P>) {\n  return (\n    <nav style={{ maxWidth: 240 }}>\n      <SettingsHeader>{title}</SettingsHeader>\n      <ul>\n        {settings\n          .filter(setting => !hiddenTabs || !hiddenTabs.includes(setting.title))\n          .map((setting, index) => (\n            <SettingNavigationItem {...{ setting, selectedTab, setSelectedTab }} key={index} />\n          ))}\n      </ul>\n    </nav>\n  );\n}\n","import SettingsModal from \"./SettingsModal\";\n\nexport default SettingsModal;\n","import classnames from \"classnames\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Modal from \"ui/components/shared/Modal\";\n\nimport SettingsBody from \"./SettingsBody\";\nimport SettingsNavigation from \"./SettingsNavigation\";\nimport { Settings } from \"./types\";\n\nexport default function SettingsModal<T extends string, P extends Record<string, unknown>>({\n  tab,\n  hiddenTabs,\n  loading,\n  panelProps,\n  settings,\n  size = \"sm\",\n  title,\n}: {\n  tab?: T;\n  hiddenTabs?: T[];\n  loading?: boolean;\n  panelProps: P;\n  settings: Settings<T, P>;\n  size?: \"sm\" | \"lg\";\n  title?: React.ReactNode;\n}) {\n  const [selectedTab, setSelectedTab] = useState<T | undefined>(tab);\n  const selectedSetting = settings.find(setting => setting.title === selectedTab)!;\n\n  useEffect(() => {\n    if (tab) {\n      setSelectedTab(tab);\n    }\n  }, [tab]);\n\n  if (loading) {\n    return (\n      <div className=\"settings-modal\">\n        <Modal></Modal>\n      </div>\n    );\n  }\n\n  return (\n    <div className={classnames(\"settings-modal\", { \"settings-modal-large\": size === \"lg\" })}>\n      <Modal>\n        <SettingsNavigation {...{ hiddenTabs, settings, selectedTab, setSelectedTab, title }} />\n        <SettingsBody selectedSetting={selectedSetting} panelProps={panelProps} />\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Checkbox from \"../Forms/Checkbox\";\n\ntype CheckboxRowProps = React.HTMLProps<HTMLInputElement> & {\n  label: string;\n  description?: string;\n};\n\nexport function CheckboxRow({ id, checked, onChange, label, description }: CheckboxRowProps) {\n  return (\n    <label\n      className=\"grid cursor-pointer items-center\"\n      style={{ gridTemplateColumns: \"auto minmax(0, 1fr)\", gap: \"0 0.5rem\" }}\n      data-private\n      htmlFor={id}\n    >\n      <Checkbox id={id} checked={checked} onChange={onChange} />\n      <div>{label}</div>\n      {description ? (\n        <div className=\"mb-1 text-xs text-gray-500\" style={{ gridColumnStart: \"2\" }}>\n          {description}\n        </div>\n      ) : null}\n    </label>\n  );\n}\n","import React from \"react\";\n\nimport Icon from \"ui/components/shared/Icon\";\nimport hooks from \"ui/hooks\";\nimport { useFeature } from \"ui/hooks/settings\";\nimport { CombinedExperimentalUserSettings } from \"ui/types\";\n\nimport { CheckboxRow } from \"./CheckboxRow\";\n\ntype ExperimentalKey = keyof CombinedExperimentalUserSettings;\ninterface ExperimentalSetting {\n  label: string;\n  description: string;\n  key: ExperimentalKey;\n}\n\nconst EXPERIMENTAL_SETTINGS: ExperimentalSetting[] = [\n  {\n    label: \"New source viewer\",\n    description: \"Enable new source viewer and log point UIs\",\n    key: \"enableNewSourceViewer\",\n  },\n  {\n    label: \"Column Breakpoints\",\n    description: \"Add breakpoints within a line\",\n    key: \"enableColumnBreakpoints\",\n  },\n  {\n    label: \"Resolve recording\",\n    description: \"Mark a replay as resolved\",\n    key: \"enableResolveRecording\",\n  },\n  {\n    label: \"Inline hit counts\",\n    description: \"Show line hit counts in the source view\",\n    key: \"hitCounts\",\n  },\n  {\n    label: \"Profile Source Worker\",\n    description:\n      \"Record a performance profile of the source worker and send it to Replay to help diagnose performance issues\",\n    key: \"profileWorkerThreads\",\n  },\n  {\n    label: \"Enable query-level caching\",\n    description:\n      \"Allow the backend to return previously generated responses without re-running the request\",\n    key: \"enableQueryCache\",\n  },\n  {\n    label: \"Detailed loading bar\",\n    description:\n      \"Split the loading bar's progress between gathering static resources from the recording and indexing runtime information\",\n    key: \"basicProcessingLoadingBar\",\n  },\n  {\n    label: \"Console filter drawer defaults to open\",\n    description:\n      \"Open the console filter settings by default when opening a Replay for the first time\",\n    key: \"consoleFilterDrawerDefaultsToOpen\",\n  },\n];\n\nconst RISKY_EXPERIMENTAL_SETTINGS: ExperimentalSetting[] = [];\n\nfunction Experiment({\n  setting,\n  onChange,\n  checked,\n}: {\n  setting: ExperimentalSetting;\n  checked: boolean;\n  onChange: (key: ExperimentalKey, value: any) => void;\n}) {\n  const { label, key, description } = setting;\n  return (\n    <CheckboxRow\n      id={key}\n      onChange={() => onChange(key, !checked)}\n      checked={checked}\n      label={label}\n      description={description}\n    />\n  );\n}\n\nexport default function ExperimentalSettings({}) {\n  const { userSettings, loading } = hooks.useGetUserSettings();\n\n  // TODO: This is bad and should be updated with a better generalized hook\n  const { value: enableColumnBreakpoints, update: updateEnableColumnBreakpoints } =\n    useFeature(\"columnBreakpoints\");\n\n  const { value: enableNewSourceViewer, update: updateEnableNewSourceViewer } =\n    useFeature(\"newSourceViewer\");\n\n  const { value: enableResolveRecording, update: updateEnableResolveRecording } =\n    useFeature(\"resolveRecording\");\n\n  const {\n    value: consoleFilterDrawerDefaultsToOpen,\n    update: updateConsoleFilterDrawerDefaultsToOpen,\n  } = useFeature(\"consoleFilterDrawerDefaultsToOpen\");\n  const { value: hitCounts, update: updateHitCounts } = useFeature(\"hitCounts\");\n  const { value: profileWorkerThreads, update: updateProfileWorkerThreads } =\n    useFeature(\"profileWorkerThreads\");\n  const { value: enableQueryCache, update: updateEnableQueryCache } =\n    useFeature(\"enableQueryCache\");\n  const { value: basicProcessingLoadingBar, update: updateBasicProcessingLoadingBar } = useFeature(\n    \"basicProcessingLoadingBar\"\n  );\n\n  const onChange = (key: ExperimentalKey, value: any) => {\n    if (key == \"enableColumnBreakpoints\") {\n      updateEnableColumnBreakpoints(!enableColumnBreakpoints);\n    } else if (key == \"enableNewSourceViewer\") {\n      updateEnableNewSourceViewer(!enableNewSourceViewer);\n    } else if (key == \"enableResolveRecording\") {\n      updateEnableResolveRecording(!enableResolveRecording);\n    } else if (key === \"hitCounts\") {\n      updateHitCounts(!hitCounts);\n    } else if (key === \"profileWorkerThreads\") {\n      updateProfileWorkerThreads(!profileWorkerThreads);\n    } else if (key === \"enableQueryCache\") {\n      updateEnableQueryCache(!enableQueryCache);\n    } else if (key === \"basicProcessingLoadingBar\") {\n      updateBasicProcessingLoadingBar(!basicProcessingLoadingBar);\n    } else if (key === \"consoleFilterDrawerDefaultsToOpen\") {\n      updateConsoleFilterDrawerDefaultsToOpen(!consoleFilterDrawerDefaultsToOpen);\n    }\n  };\n\n  const localSettings = {\n    basicProcessingLoadingBar,\n    consoleFilterDrawerDefaultsToOpen,\n    enableColumnBreakpoints,\n    enableNewSourceViewer,\n    enableResolveRecording,\n    enableQueryCache,\n    hitCounts,\n    profileWorkerThreads,\n  };\n\n  const settings = { ...userSettings, ...localSettings };\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <div className=\"space-y-6 overflow-auto\">\n      <div className=\"flex flex-col space-y-2 p-1\">\n        {EXPERIMENTAL_SETTINGS.map(setting => (\n          <Experiment\n            onChange={onChange}\n            key={setting.key}\n            setting={setting}\n            checked={!!settings[setting.key]}\n          />\n        ))}\n        {RISKY_EXPERIMENTAL_SETTINGS.length > 0 && (\n          <div>\n            <div className=\"my-4 flex items-center \">\n              <Icon\n                filename=\"warning\"\n                className=\"mr-2\"\n                style={{ backgroundColor: \"var(--theme-toolbar-color)\" }}\n              />\n              Increased chance of session errors and performance issues.\n            </div>\n            {RISKY_EXPERIMENTAL_SETTINGS.map(setting => (\n              <Experiment\n                onChange={onChange}\n                key={setting.key}\n                setting={setting}\n                checked={!!settings[setting.key]}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport hooks from \"ui/hooks\";\nimport { useFeature, useStringPref } from \"ui/hooks/settings\";\nimport { EmailSubscription } from \"ui/hooks/users\";\nimport { getThemePreference } from \"ui/reducers/app\";\nimport { updateTheme } from \"ui/reducers/app\";\nimport { useAppDispatch, useAppSelector } from \"ui/setup/hooks\";\nimport { AppTheme } from \"ui/state/app\";\n\nimport { SelectMenu } from \"../Forms\";\nimport Checkbox from \"../Forms/Checkbox\";\nimport { CheckboxRow } from \"./CheckboxRow\";\n\nconst EMAIL_NOTIFICATIONS = {\n  [EmailSubscription.COLLABORATOR_REQUEST]: \"When somebody invites you to collaborate on a replay\",\n  [EmailSubscription.REPLAY_COMMENT]: \"When somebody comments on your replay\",\n  [EmailSubscription.NEW_TEAM_INVITE]: \"When you're invited to a new team\",\n};\n\nfunction Notification({\n  content,\n  emailType,\n  unsubscribedEmailTypes,\n}: {\n  content: string;\n  emailType: EmailSubscription;\n  unsubscribedEmailTypes: EmailSubscription[];\n}) {\n  const subscribeToEmailType = hooks.useSubscribeToEmailType();\n  const unsubscribeToEmailType = hooks.useUnsubscribeToEmailType();\n  const checked = !unsubscribedEmailTypes.includes(emailType);\n\n  const handleChange = () => {\n    if (checked) {\n      unsubscribeToEmailType(emailType);\n    } else {\n      subscribeToEmailType(emailType);\n    }\n  };\n\n  return <CheckboxRow id={emailType} checked={checked} onChange={handleChange} label={content} />;\n}\n\nfunction NotificationPreferences({\n  unsubscribedEmailTypes,\n}: {\n  unsubscribedEmailTypes: EmailSubscription[];\n}) {\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-lg\">Notifications</div>\n      <div>Choose which email updates you would like to receive:</div>\n      <div className=\"flex flex-col space-y-2 p-1\">\n        {Object.entries(EMAIL_NOTIFICATIONS).map(([emailType, content]: string[], i) => (\n          <Notification\n            {...{ content, unsubscribedEmailTypes }}\n            emailType={emailType as EmailSubscription}\n            key={i}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction PrivacyPreferences() {\n  const [disableLogRocket, setDisableLogRocket] = useState<boolean>();\n  const { userSettings, loading } = hooks.useGetUserSettings();\n  const updateLogRocket = hooks.useUpdateUserSetting(\"disableLogRocket\");\n\n  const toggle = (newValue: boolean) => {\n    setDisableLogRocket(newValue);\n    updateLogRocket({\n      variables: {\n        newValue,\n      },\n    });\n  };\n\n  useEffect(() => {\n    setDisableLogRocket(userSettings.disableLogRocket);\n  }, [userSettings]);\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-lg\">Privacy</div>\n      <div className=\"flex flex-col space-y-2 p-1\">\n        <label\n          className=\"flex cursor-pointer items-center space-x-2\"\n          data-private\n          htmlFor=\"disableLogRocket\"\n        >\n          <Checkbox\n            id=\"disableLogRocket\"\n            checked={disableLogRocket}\n            disabled={loading}\n            onChange={ev => toggle(ev.currentTarget.checked)}\n          />\n          <div>Disable LogRocket session replay</div>\n        </label>\n      </div>\n    </div>\n  );\n}\ntype HitCountMode = \"hide-counts\" | \"show-counts\" | \"disabled\";\n\nfunction UiPreferences() {\n  const dispatch = useAppDispatch();\n  const theme = useAppSelector(getThemePreference);\n  const { value: defaultMode, update: updateDefaultMode } = useStringPref(\"defaultMode\");\n  const { value: hitCountsMode, update: updateHitCounts } = useStringPref(\"hitCounts\");\n  const hitCountsEnabled = useFeature(\"hitCounts\");\n  const { value: enableLargeText, update: updateEnableLargeText } = useFeature(\"enableLargeText\");\n\n  const setSelected = (value: AppTheme) => {\n    dispatch(updateTheme(value));\n  };\n\n  return (\n    <div className=\"mr-4 space-y-4\">\n      <div className=\"text-lg\">Appearance</div>\n      <div className=\"flex flex-row justify-between\">\n        <div>Theme</div>\n        <div className=\"w-1/2\">\n          <SelectMenu\n            options={[\n              { name: \"Dark\", id: \"dark\" },\n              { name: \"Light\", id: \"light\" },\n              { name: \"System\", id: \"system\" },\n            ]}\n            selected={theme}\n            setSelected={str => setSelected(str as AppTheme)}\n          />\n        </div>\n      </div>\n      <div className=\"flex flex-row justify-between\">\n        <div>Default Mode</div>\n        <div className=\"w-1/2\">\n          <SelectMenu\n            options={[\n              { name: \"Viewer\", id: \"non-dev\" },\n              { name: \"DevTools\", id: \"dev\" },\n            ]}\n            selected={defaultMode}\n            setSelected={str => str && updateDefaultMode(str)}\n          />\n        </div>\n      </div>\n      {hitCountsEnabled && (\n        <div className=\"flex flex-row justify-between\">\n          <div>Heat Maps</div>\n          <div className=\"w-1/2\">\n            <SelectMenu\n              options={[\n                { name: \"Hide Counts\", id: \"hide-counts\" },\n                { name: \"Show Counts\", id: \"show-counts\" },\n                { name: \"Hidden\", id: \"disabled\" },\n              ]}\n              selected={hitCountsMode}\n              setSelected={mode => updateHitCounts(mode as HitCountMode)}\n            />\n          </div>\n        </div>\n      )}\n      <label\n        className=\"flex cursor-pointer items-center space-x-2 p-1\"\n        data-private\n        htmlFor=\"enable-large-text\"\n      >\n        <Checkbox\n          id=\"enable-large-text\"\n          checked={enableLargeText}\n          onChange={() => updateEnableLargeText(!enableLargeText)}\n        />\n        <div>Enable large text for Editor</div>\n      </label>\n    </div>\n  );\n}\n\nexport default function PreferencesSettings() {\n  const { loading, unsubscribedEmailTypes } = hooks.useGetUserInfo();\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <div className=\"space-y-6 overflow-auto\">\n      <UiPreferences />\n      <PrivacyPreferences />\n      {unsubscribedEmailTypes ? <NotificationPreferences {...{ unsubscribedEmailTypes }} /> : null}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ConnectedProps, connect } from \"react-redux\";\n\nimport * as actions from \"ui/actions/app\";\nimport { AvatarImage } from \"ui/components/Avatar\";\nimport hooks from \"ui/hooks\";\nimport { useBoolPref, useFeature } from \"ui/hooks/settings\";\nimport { UserInfo, useGetUserInfo } from \"ui/hooks/users\";\nimport * as selectors from \"ui/reducers/app\";\nimport { UIState } from \"ui/state\";\nimport { SettingsTabTitle } from \"ui/state/app\";\nimport useAuth0 from \"ui/utils/useAuth0\";\n\nimport APIKeys from \"../APIKeys\";\nimport ExternalLink from \"../ExternalLink\";\nimport SettingsModal from \"../SettingsModal\";\nimport { SettingsBodyHeader } from \"../SettingsModal/SettingsBody\";\nimport { Settings } from \"../SettingsModal/types\";\nimport { CheckboxRow } from \"./CheckboxRow\";\nimport ExperimentalSettings from \"./ExperimentalSettings\";\nimport PreferencesSettings from \"./PreferencesSettings\";\n\nfunction Support() {\n  return (\n    <ul>\n      <li className=\"flex flex-row items-center\">\n        <label className=\"flex-grow space-y-1.5 pr-36\">\n          <SettingsBodyHeader>Join us on Discord</SettingsBodyHeader>\n          <div className=\"description\">\n            Come chat with us on our{\" \"}\n            <ExternalLink href=\"https://discord.gg/n2dTK6kcRX\">Discord server.</ExternalLink>\n          </div>\n        </label>\n      </li>\n      <li className=\"flex flex-row items-center\">\n        <label className=\"flex-grow space-y-1.5 pr-36\">\n          <SettingsBodyHeader>Send us an email</SettingsBodyHeader>\n          <div className=\"description\">\n            You can also send an email at <a href=\"mailto:support@replay.io\">support@replay.io</a>.\n            It goes straight to the people making the product, and we&apos;d love to hear your\n            feedback!\n          </div>\n        </label>\n      </li>\n    </ul>\n  );\n}\n\nfunction Personal() {\n  const { logout } = useAuth0();\n  const { name, email, picture } = useGetUserInfo();\n\n  return (\n    <div className=\"space-y-12\">\n      <div className=\"flex flex-row items-center space-x-3\" data-private>\n        <AvatarImage src={picture} className=\"avatar w-12 rounded-full\" />\n        <div>\n          <div className=\"text-base\">{name}</div>\n          <div className=\"text-gray-500\">{email}</div>\n        </div>\n      </div>\n      <div>\n        <button\n          onClick={() => logout({ returnTo: window.location.origin + \"/login\" })}\n          className=\"max-w-max items-center rounded-md border border-transparent bg-primaryAccent px-3 py-1.5 font-medium text-white shadow-sm hover:bg-primaryAccentHover focus:outline-none focus:ring-2 focus:ring-primaryAccent focus:ring-offset-2\"\n        >\n          Log Out\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction Legal() {\n  return (\n    <div className=\"space-y-12 pr-36\">\n      <div className=\"space-y-3\">\n        <div className=\"space-y-1.5\">\n          <SettingsBodyHeader>\n            <ExternalLink className=\"underline\" href=\"https://www.replay.io/terms-of-use\">\n              Terms of Use\n            </ExternalLink>\n          </SettingsBodyHeader>\n          <div>{`The Terms of Use help define Replay's relationship with you as you interact with our services.`}</div>\n        </div>\n        <div className=\"space-y-1.5\">\n          <SettingsBodyHeader>\n            <ExternalLink className=\"underline\" href=\"https://www.replay.io/privacy-policy\">\n              Privacy Policy\n            </ExternalLink>\n          </SettingsBodyHeader>\n          <div>{`Our Privacy Policy outlines how you can update, manage, and delete your information.`}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction UserAPIKeys() {\n  const { userSettings, loading } = hooks.useGetUserSettings();\n  const { addUserApiKey, loading: addLoading, error: addError } = hooks.useAddUserApiKey();\n  const { deleteUserApiKey } = hooks.useDeleteUserApiKey();\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <APIKeys\n      apiKeys={userSettings.apiKeys}\n      description=\"API Keys allow you to upload recordings programmatically from your automated tests or from your continuous integration environment.\"\n      loading={addLoading}\n      error={addError}\n      addKey={(label, scopes) =>\n        // @ts-ignore\n        addUserApiKey({ variables: { label: label, scopes } }).then(\n          resp => resp.data?.createUserAPIKey\n        )\n      }\n      deleteKey={id => deleteUserApiKey({ variables: { id } })}\n      scopes={[\"admin:all\"]}\n    />\n  );\n}\n\nfunction Advanced() {\n  const { value: logTelemetryEvent, update: updateLogTelemetryEvent } =\n    useBoolPref(\"logTelemetryEvent\");\n  const { value: protocolTimeline, update: updateProtocolTimeline } =\n    useFeature(\"protocolTimeline\");\n  const { value: logProtocol, update: updateLogProtocol } = useFeature(\"logProtocol\");\n\n  return (\n    <div>\n      <div className=\"mb-4\">\n        <CheckboxRow\n          id={\"mixpanel\"}\n          onChange={() => updateLogTelemetryEvent(!logTelemetryEvent)}\n          checked={logTelemetryEvent}\n          label={\"Log Mixpanel events to the console\"}\n          description={\"\"}\n        />\n      </div>\n      <div className=\"mb-4\">\n        <CheckboxRow\n          id={\"protocol-timeline\"}\n          onChange={() => updateProtocolTimeline(!protocolTimeline)}\n          checked={protocolTimeline}\n          label={\"Visualize protocol events in the timeline\"}\n          description={\"\"}\n        />\n      </div>\n\n      <div className=\"mb-4\">\n        <CheckboxRow\n          id={\"protocol-viewer\"}\n          onChange={() => updateLogProtocol(!logProtocol)}\n          checked={logProtocol}\n          label={\"View protocol requests and responses in the panel\"}\n          description={\"\"}\n        />\n      </div>\n    </div>\n  );\n}\n\nconst getSettings = (user: UserInfo): Settings<SettingsTabTitle, {}> => [\n  {\n    title: \"Personal\",\n    icon: \"person\",\n    component: Personal,\n  },\n  {\n    title: \"Preferences\",\n    icon: \"tune\",\n    component: PreferencesSettings,\n  },\n  {\n    title: \"API Keys\",\n    icon: \"vpn_key\",\n    component: UserAPIKeys,\n  },\n\n  {\n    title: \"Experimental\",\n    icon: \"biotech\",\n    component: ExperimentalSettings,\n  },\n  {\n    title: \"Support\",\n    icon: \"support\",\n    component: Support,\n  },\n  {\n    title: \"Legal\",\n    icon: \"gavel\",\n    component: Legal,\n  },\n  {\n    title: \"Advanced\",\n    icon: \"api\",\n    component: Advanced,\n  },\n];\n\nexport function UserSettingsModal(props: PropsFromRedux) {\n  const user = hooks.useGetUserInfo();\n  const view = props.view === \"preferences\" ? \"Preferences\" : props.defaultSettingsTab;\n  const hiddenTabs = [];\n\n  if (user) {\n    if (!user.features.library) {\n      hiddenTabs.push(\"API Keys\");\n    }\n\n    if (!user.internal) {\n      hiddenTabs.push(\"Advanced\");\n    }\n  }\n\n  return (\n    <SettingsModal\n      hiddenTabs={hiddenTabs}\n      tab={view}\n      panelProps={{}}\n      settings={getSettings(user)}\n      loading={user.loading}\n    />\n  );\n}\n\nconst connector = connect(\n  (state: UIState) => {\n    const opts = selectors.getModalOptions(state);\n    const view = opts && \"view\" in opts ? opts.view : null;\n    return {\n      defaultSettingsTab: selectors.getDefaultSettingsTab(state),\n      view,\n    };\n  },\n  { setDefaultSettingsTab: actions.setDefaultSettingsTab }\n);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\nexport default connector(UserSettingsModal);\n","import UserSettingsModal from \"./UserSettingsModal\";\n\nexport default UserSettingsModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__E8Cex\",\"authenticated\":\"Avatar_authenticated__weGMn\",\"firstPlayer\":\"Avatar_firstPlayer__OhjBJ\"};"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","this","Array","isArray","apply","toString","Object","prototype","key","call","join","module","exports","default","cx","css","AvatarImage","props","src","undefined","onError","e","currentTarget","AuthAvatar","user","className","picture","Avatar","player","isFirstPlayer","index","auth","useAuth0","isAuthenticated","name","title","style","background","getAvatarColor","scopeLabels","NewApiKey","keyValue","onDone","copied","setCopied","useState","useEffect","setTimeout","readOnly","value","onFocus","ev","target","setSelectionRange","iconSize","onClick","navigator","clipboard","writeText","then","ApiKeyList","apiKeys","onDelete","confirmDestructive","useConfirm","map","apiKey","usage","maxRecordings","recordingCount","label","message","description","acceptLabel","confirmed","id","APIKeys","error","loading","addKey","deleteKey","scopes","labelRef","useRef","setKeyValue","selectedScopes","selectScopes","setLabel","canSubmit","sortedKeys","useMemo","sort","a","b","Date","createdAt","getTime","current","focus","onSubmit","resp","preventDefault","disabled","placeholder","onChange","ref","type","scope","checked","filter","s","includes","Checkbox","SIZES","custom","small","height","width","medium","large","Icon","filename","size","sizeStyles","SettingsBodyWrapper","children","SettingsHeader","SettingsBodyHeader","SettingsBody","panelProps","selectedSetting","noTitle","component","connect","hideModal","actions","showClose","SettingNavigationItem","setting","selectedTab","setSelectedTab","icon","classnames","selected","MaterialIcon","SettingNavigation","hiddenTabs","settings","maxWidth","tab","find","CheckboxRow","gridTemplateColumns","gap","htmlFor","gridColumnStart","EXPERIMENTAL_SETTINGS","RISKY_EXPERIMENTAL_SETTINGS","Experiment","ExperimentalSettings","userSettings","hooks","enableColumnBreakpoints","update","updateEnableColumnBreakpoints","useFeature","enableNewSourceViewer","updateEnableNewSourceViewer","enableResolveRecording","updateEnableResolveRecording","consoleFilterDrawerDefaultsToOpen","updateConsoleFilterDrawerDefaultsToOpen","hitCounts","updateHitCounts","profileWorkerThreads","updateProfileWorkerThreads","enableQueryCache","updateEnableQueryCache","basicProcessingLoadingBar","updateBasicProcessingLoadingBar","localSettings","backgroundColor","EMAIL_NOTIFICATIONS","EmailSubscription","Notification","content","emailType","unsubscribedEmailTypes","subscribeToEmailType","unsubscribeToEmailType","NotificationPreferences","entries","PrivacyPreferences","disableLogRocket","setDisableLogRocket","updateLogRocket","toggle","newValue","variables","UiPreferences","dispatch","useAppDispatch","theme","useAppSelector","getThemePreference","defaultMode","updateDefaultMode","useStringPref","hitCountsMode","hitCountsEnabled","enableLargeText","updateEnableLargeText","options","setSelected","str","updateTheme","mode","PreferencesSettings","Support","ExternalLink","href","Personal","logout","email","useGetUserInfo","returnTo","window","location","origin","Legal","UserAPIKeys","addUserApiKey","addLoading","addError","deleteUserApiKey","data","createUserAPIKey","Advanced","logTelemetryEvent","updateLogTelemetryEvent","useBoolPref","protocolTimeline","updateProtocolTimeline","logProtocol","updateLogProtocol","state","opts","selectors","view","defaultSettingsTab","setDefaultSettingsTab","features","library","internal","SettingsModal"],"sourceRoot":""}