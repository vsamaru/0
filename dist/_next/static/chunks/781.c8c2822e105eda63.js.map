{"version":3,"file":"static/chunks/781.c8c2822e105eda63.js","mappings":"8PA+DA,IC7DA,GD2DkBA,EAAAA,EAAAA,KAAQ,KAAM,KAAM,CAAEC,UAAWC,EAAAA,WAEnD,EAxCA,UAA0B,UAAED,IAC1B,MAAME,EAAaC,EAAAA,EAAAA,gBAenB,OACE,SAACC,EAAA,GAAD,WACE,UAACA,EAAA,GAAD,YACE,UAACA,EAAA,GAAD,YACE,SAACA,EAAA,GAAD,UAAoB,uBACpB,SAACA,EAAA,GAAD,UACI,sFAGN,UAACA,EAAA,GAAD,YACE,SAAC,KAAD,CAAiBC,MAAM,OAAOC,QAvBnB,KACjBJ,EAAWK,EAAAA,IAAAA,gBACXP,KACAQ,EAAAA,EAAAA,IAAW,kCACXC,EAAAA,EAAAA,IAV2B,mCA6BrB,SACI,gCAEJ,SAAC,KAAD,CAAiBJ,MAAM,OAAOC,QAnBnB,KACjBJ,EAAWK,EAAAA,IAAAA,gBACXP,KACAQ,EAAAA,EAAAA,IAAW,yBAgBL,SACI,qB,8SEnCd,MAAME,EAAoBC,EAAAA,cAAoB,CAAEC,MAAO,SAEhD,SAASC,GAAyB,SACvCC,EADuC,QAEvCC,EAFuC,OAGvCC,KAMYC,EAAAA,EAAAA,YAAWP,GAEvB,OACE,iBACEQ,UAAWC,GAAAA,CACT,0GACAJ,EAAU,qBAAuB,uBACjC,CACE,2BAA4BA,IALlC,UASGC,EAAS,MAAO,gBAAKI,IAAI,mBAAmBF,UAAU,gBACtDJ,KAKA,SAASO,GAAkB,SAChCP,IAIA,OACE,gBAAKI,UAAU,+DAAf,SAA+EJ,IAI5E,SAASQ,GAAiB,SAAER,IACjC,OAAO,gBAAKI,UAAU,0BAAf,SAA0CJ,IAG5C,SAASS,GAAe,SAAET,IAC/B,OAAO,gBAAKI,UAAU,oBAAf,SAAoCJ,IAGtC,SAASU,GAAkB,SAChCV,IAIA,OAAO,gBAAKI,UAAU,YAAf,SAA4BJ,IAG9B,SAASW,GAAW,QACzBC,EADyB,KAEzBC,EAFyB,WAGzBC,EAHyB,OAIzBC,EAJyB,UAKzBC,IASA,MAAM,EAACC,EAAD,EAAcC,IAAkBC,EAAAA,EAAAA,WAAkB,IASxDC,EAAAA,EAAAA,YAAU,KAIJJ,GAAaC,GACfH,GAAWF,GAAWA,EAAU,MAEjC,CAACI,EAAWC,EAAaH,IAE5B,MACMO,EADeJ,IAAgBD,EACH,UAAYH,GAAQ,OAEtD,OACE,SAAC,KAAD,CAAiBtB,MAAM,OAAOC,QApBhB,KACVuB,GACFA,IAEFG,GAAe,IAgBf,SACGG,IAKA,SAASC,GAAiB,SAC/BtB,EAD+B,QAE/BR,EAAU,SAFqB,UAG/BY,EAH+B,SAI/BmB,GAAW,IAOX,OACE,mBACEC,KAAK,SACLhC,QAASA,EACT+B,SAAUA,EACVnB,UAAWC,GAAAA,CACTD,EACA,sOANJ,SASGJ,IAKA,SAASyB,GAAyB,SACvCzB,EADuC,MAEvCF,EAAQ,SAQR,OACE,SAACF,EAAkB8B,SAAnB,CAA4BC,MAAO,CAAE7B,MAAAA,GAArC,UACE,iBAAKM,UAAWC,GAAAA,CAAW,qDAA3B,WACE,SAAC,IAAD,KACA,SAAC,KAAD,CAAOuB,QAAS,CAAEC,iBAAkB,eAAiBC,UAAU,EAA/D,SACG9B","sources":["webpack://_N_E/./src/ui/components/shared/FirstReplayModal/FirstReplayModal.tsx","webpack://_N_E/./src/ui/components/shared/FirstReplayModal/index.ts","webpack://_N_E/./src/ui/components/shared/Onboarding/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { ConnectedProps, connect } from \"react-redux\";\n\nimport * as actions from \"ui/actions/app\";\nimport hooks from \"ui/hooks\";\nimport { Nag } from \"ui/hooks/users\";\nimport { launchAndRecordUrl } from \"ui/utils/environment\";\nimport { trackEvent } from \"ui/utils/telemetry\";\n\nimport { PrimaryLgButton } from \"../Button\";\nimport { TextInputCopy } from \"../NewWorkspaceModal/InvitationLink\";\nimport {\n  OnboardingActions,\n  OnboardingBody,\n  OnboardingContent,\n  OnboardingContentWrapper,\n  OnboardingHeader,\n  OnboardingModalContainer,\n} from \"../Onboarding/index\";\n\nexport const REPLAY_DEMO_URL = \"https://static.replay.io/demo/\";\nexport const REPLAY_LIBRARY_URL = \"https://app.replay.io/\";\n\nfunction FirstReplayModal({ hideModal }: PropsFromRedux) {\n  const dismissNag = hooks.useDismissNag();\n\n  const handleOpen = () => {\n    dismissNag(Nag.FIRST_REPLAY_2);\n    hideModal();\n    trackEvent(\"onboarding.demo_replay_launch\");\n    launchAndRecordUrl(REPLAY_DEMO_URL);\n  };\n\n  const handleSkip = () => {\n    dismissNag(Nag.FIRST_REPLAY_2);\n    hideModal();\n    trackEvent(\"onboarding.demo_skip\");\n  };\n\n  return (\n    <OnboardingModalContainer>\n      <OnboardingContentWrapper>\n        <OnboardingContent>\n          <OnboardingHeader>{`Let's time travel`}</OnboardingHeader>\n          <OnboardingBody>\n            {`We've made a Back to the Future themed demo for you to kick the tires. Ready?`}\n          </OnboardingBody>\n        </OnboardingContent>\n        <OnboardingActions>\n          <PrimaryLgButton color=\"blue\" onClick={handleOpen}>\n            {`Ready as I'll ever be, Doc`}\n          </PrimaryLgButton>\n          <PrimaryLgButton color=\"gray\" onClick={handleSkip}>\n            {`Skip`}\n          </PrimaryLgButton>\n        </OnboardingActions>\n      </OnboardingContentWrapper>\n    </OnboardingModalContainer>\n  );\n}\n\nconst connector = connect(() => ({}), { hideModal: actions.hideModal });\ntype PropsFromRedux = ConnectedProps<typeof connector>;\nexport default connector(FirstReplayModal);\n","import FirstReplayModal from \"./FirstReplayModal\";\n\nexport default FirstReplayModal;\n","import classNames from \"classnames\";\nimport React, {\n  Dispatch,\n  MouseEventHandler,\n  ReactNode,\n  SetStateAction,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { actions } from \"ui/actions\";\n\nimport { PrimaryLgButton } from \"../Button\";\nimport Modal from \"../NewModal\";\nimport ReplayLogo from \"../ReplayLogo\";\nimport BubbleBackground from \"./BubbleBackground\";\n\nconst OnboardingContext = React.createContext({ theme: \"dark\" });\n\nexport function OnboardingContentWrapper({\n  children,\n  overlay,\n  noLogo,\n}: {\n  children: React.ReactChild | (React.ReactChild | null)[];\n  overlay?: boolean;\n  noLogo?: boolean;\n}) {\n  const ctx = useContext(OnboardingContext);\n\n  return (\n    <div\n      className={classNames(\n        \"relative m-4 flex flex-col items-center rounded-xl bg-loadingBoxes p-9 text-xl text-bodyColor shadow-md\",\n        overlay ? \"max-w-sm space-y-8\" : \"max-w-2xl space-y-12\",\n        {\n          \"rounded-lg bg-opacity-80\": overlay,\n        }\n      )}\n    >\n      {noLogo ? null : <img src=\"/images/logo.svg\" className=\"h-24 w-full\" />}\n      {children}\n    </div>\n  );\n}\n\nexport function OnboardingContent({\n  children,\n}: {\n  children: React.ReactChild | (React.ReactChild | null)[];\n}) {\n  return (\n    <div className=\"relative flex flex-col items-center space-y-4 text-bodyColor\">{children}</div>\n  );\n}\n\nexport function OnboardingHeader({ children }: { children: string }) {\n  return <div className=\"text-3xl font-extrabold\">{children}</div>;\n}\n\nexport function OnboardingBody({ children }: { children: string | ReactNode }) {\n  return <div className=\"mx-10 text-center\">{children}</div>;\n}\n\nexport function OnboardingActions({\n  children,\n}: {\n  children: string | React.ReactChild | React.ReactChild[];\n}) {\n  return <div className=\"space-x-6\">{children}</div>;\n}\n\nexport function NextButton({\n  current,\n  text,\n  setCurrent,\n  onNext,\n  allowNext,\n}: {\n  current: number;\n  text?: string;\n  setCurrent: Dispatch<SetStateAction<number>>;\n  hideModal: typeof actions.hideModal;\n  onNext: () => void;\n  allowNext: boolean;\n}) {\n  const [nextClicked, setNextClicked] = useState<boolean>(false);\n\n  const onClick = () => {\n    if (onNext) {\n      onNext();\n    }\n    setNextClicked(true);\n  };\n\n  useEffect(() => {\n    // Only navigate to the next slide the work that eventually turns\n    // allowNext to true is finished. This allows us to do mutations\n    // in between navigations.\n    if (allowNext && nextClicked) {\n      setCurrent(current => current + 1);\n    }\n  }, [allowNext, nextClicked, setCurrent]);\n\n  const inferLoading = nextClicked && !allowNext;\n  const buttonText = inferLoading ? \"Loading\" : text || \"Next\";\n\n  return (\n    <PrimaryLgButton color=\"blue\" onClick={onClick}>\n      {buttonText}\n    </PrimaryLgButton>\n  );\n}\n\nexport function OnboardingButton({\n  children,\n  onClick = () => {},\n  className,\n  disabled = false,\n}: {\n  children: React.ReactElement | string;\n  className?: string;\n  onClick?: MouseEventHandler;\n  disabled?: boolean;\n}) {\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      disabled={disabled}\n      className={classNames(\n        className,\n        \"max-w-max items-center rounded-md border border-transparent bg-primaryAccent px-3 py-1.5 font-medium text-white shadow-sm hover:bg-primaryAccentHover focus:outline-none focus:ring-2 focus:ring-primaryAccent focus:ring-offset-2\"\n      )}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport function OnboardingModalContainer({\n  children,\n  theme = \"dark\",\n}: {\n  children: React.ReactNode;\n  // For randomizing some background elements as controlled by progress\n  // on the parent component, e.g. circles/bubbles that change on click\n  randomNumber?: number;\n  theme?: \"dark\" | \"light\";\n}) {\n  return (\n    <OnboardingContext.Provider value={{ theme }}>\n      <div className={classNames(\"fixed z-50 grid h-full w-full bg-black text-white\")}>\n        <BubbleBackground />\n        <Modal options={{ maskTransparency: \"transparent\" }} blurMask={false}>\n          {children}\n        </Modal>\n      </div>\n    </OnboardingContext.Provider>\n  );\n}\n"],"names":["connect","hideModal","actions","dismissNag","hooks","Onboarding","color","onClick","Nag","trackEvent","launchAndRecordUrl","OnboardingContext","React","theme","OnboardingContentWrapper","children","overlay","noLogo","useContext","className","classNames","src","OnboardingContent","OnboardingHeader","OnboardingBody","OnboardingActions","NextButton","current","text","setCurrent","onNext","allowNext","nextClicked","setNextClicked","useState","useEffect","buttonText","OnboardingButton","disabled","type","OnboardingModalContainer","Provider","value","options","maskTransparency","blurMask"],"sourceRoot":""}