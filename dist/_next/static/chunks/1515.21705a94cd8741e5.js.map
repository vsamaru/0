{"version":3,"file":"static/chunks/1515.21705a94cd8741e5.js","mappings":"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","sources":["webpack://_N_E/./packages/third-party/node-attribute-parser.js","webpack://_N_E/./src/devtools/client/inspector/computed/components/MatchedSelector.tsx","webpack://_N_E/./src/devtools/client/inspector/computed/components/ComputedProperty.tsx","webpack://_N_E/./src/devtools/client/inspector/computed/components/ComputedProperties.tsx","webpack://_N_E/./src/devtools/client/inspector/computed/components/ComputedToolbar.tsx","webpack://_N_E/./src/devtools/client/inspector/computed/components/ComputedApp.tsx","webpack://_N_E/./src/devtools/client/inspector/boxmodel/components/BoxModelSideLabel.tsx","webpack://_N_E/./src/devtools/client/inspector/boxmodel/components/BoxModelMain.tsx","webpack://_N_E/./src/devtools/client/inspector/boxmodel/components/ComputedProperty.tsx","webpack://_N_E/./src/devtools/client/inspector/boxmodel/components/BoxModelProperties.tsx","webpack://_N_E/./src/devtools/client/inspector/boxmodel/components/BoxModel.tsx","webpack://_N_E/./src/devtools/client/inspector/layout/components/LayoutApp.tsx","webpack://_N_E/./src/devtools/client/inspector/markup/components/HTMLBreadcrumbs.tsx","webpack://_N_E/./src/devtools/client/inspector/markup/components/InspectorSearch.tsx","webpack://_N_E/./src/devtools/client/inspector/actions/index.ts","webpack://_N_E/./src/devtools/client/inspector/markup/components/NodeAttribute.tsx","webpack://_N_E/./src/devtools/client/inspector/markup/components/ElementNode.tsx","webpack://_N_E/./src/devtools/client/inspector/markup/components/ReadOnlyNode.tsx","webpack://_N_E/./src/devtools/client/inspector/markup/components/TextNode.tsx","webpack://_N_E/./src/devtools/client/inspector/markup/components/Node.tsx","webpack://_N_E/./src/devtools/client/inspector/markup/components/Nodes.tsx","webpack://_N_E/./src/ui/utils/use-key-shortcuts.ts","webpack://_N_E/./src/devtools/client/inspector/markup/components/MarkupApp.tsx","webpack://_N_E/./src/devtools/client/inspector/rules/components/Declaration.tsx","webpack://_N_E/./src/devtools/client/inspector/rules/components/Declarations.tsx","webpack://_N_E/./src/devtools/client/inspector/rules/components/Selector.js","webpack://_N_E/./src/devtools/client/inspector/rules/components/SourceLink.tsx","webpack://_N_E/./src/devtools/client/inspector/rules/components/Rule.tsx","webpack://_N_E/./src/devtools/client/inspector/rules/components/Rules.tsx","webpack://_N_E/./src/devtools/client/inspector/rules/components/SearchBox.tsx","webpack://_N_E/./src/devtools/client/inspector/rules/components/Toolbar.tsx","webpack://_N_E/./src/devtools/client/inspector/rules/components/RulesApp.tsx","webpack://_N_E/./src/devtools/client/shared/components/ResponsiveTabs.tsx","webpack://_N_E/./src/ui/actions/event-listeners.ts","webpack://_N_E/./src/devtools/client/inspector/event-listeners/ExpandableItem.tsx","webpack://_N_E/./src/devtools/client/inspector/event-listeners/XHTMLNode.tsx","webpack://_N_E/./src/devtools/client/inspector/event-listeners/EventListenersApp.tsx","webpack://_N_E/./src/devtools/client/inspector/components/App.tsx","webpack://_N_E/./src/devtools/client/inspector/rules/components/DeclarationValue.js","webpack://_N_E/./src/devtools/client/inspector/rules/components/value/Color.js","webpack://_N_E/./src/devtools/client/inspector/rules/components/value/FontFamily.js","webpack://_N_E/./src/devtools/client/inspector/rules/components/value/Url.js","webpack://_N_E/./src/devtools/client/inspector/rules/types.ts","webpack://_N_E/./src/devtools/client/shared/components/Accordion.js","webpack://_N_E/./src/devtools/shared/inspector/utils.js"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n\"use strict\";\n\n/**\n * This module contains a small element attribute value parser. It's primary\n * goal is to extract link information from attribute values (like the href in\n * <a href=\"/some/link.html\"> for example).\n *\n * There are several types of linkable attribute values:\n * - TYPE_URI: a URI (e.g. <a href=\"uri\">).\n * - TYPE_URI_LIST: a space separated list of URIs (e.g. <a ping=\"uri1 uri2\">).\n * - TYPE_IDREF: a reference to an other element in the same document via its id\n *   (e.g. <label for=\"input-id\"> or <key command=\"command-id\">).\n * - TYPE_IDREF_LIST: a space separated list of IDREFs (e.g.\n *   <output for=\"id1 id2\">).\n * - TYPE_JS_RESOURCE_URI: a URI to a javascript resource that can be opened in\n *   the devtools (e.g. <script src=\"uri\">).\n * - TYPE_CSS_RESOURCE_URI: a URI to a css resource that can be opened in the\n *   devtools (e.g. <link href=\"uri\">).\n *\n * parseAttribute is the parser entry function, exported on this module.\n */\n\nconst TYPE_STRING = \"string\";\nconst TYPE_URI = \"uri\";\nconst TYPE_URI_LIST = \"uriList\";\nconst TYPE_IDREF = \"idref\";\nconst TYPE_IDREF_LIST = \"idrefList\";\nconst TYPE_JS_RESOURCE_URI = \"jsresource\";\nconst TYPE_CSS_RESOURCE_URI = \"cssresource\";\n\nconst HTML_NS = \"http://www.w3.org/1999/xhtml\";\n\nconst WILDCARD = Symbol();\n\nconst ATTRIBUTE_TYPES = new Map([\n  [\"action\", { form: { namespaceURI: HTML_NS, type: TYPE_URI } }],\n  [\"background\", { body: { namespaceURI: HTML_NS, type: TYPE_URI } }],\n  [\n    \"cite\",\n    {\n      blockquote: { namespaceURI: HTML_NS, type: TYPE_URI },\n      q: { namespaceURI: HTML_NS, type: TYPE_URI },\n      del: { namespaceURI: HTML_NS, type: TYPE_URI },\n      ins: { namespaceURI: HTML_NS, type: TYPE_URI },\n    },\n  ],\n  [\"classid\", { object: { namespaceURI: HTML_NS, type: TYPE_URI } }],\n  [\n    \"codebase\",\n    {\n      object: { namespaceURI: HTML_NS, type: TYPE_URI },\n      applet: { namespaceURI: HTML_NS, type: TYPE_URI },\n    },\n  ],\n  [\n    \"command\",\n    {\n      menuitem: { namespaceURI: HTML_NS, type: TYPE_IDREF },\n    },\n  ],\n  [\n    \"contextmenu\",\n    {\n      WILDCARD: { namespaceURI: WILDCARD, type: TYPE_IDREF },\n    },\n  ],\n  [\"data\", { object: { namespaceURI: HTML_NS, type: TYPE_URI } }],\n  [\n    \"for\",\n    {\n      label: { namespaceURI: HTML_NS, type: TYPE_IDREF },\n      output: { namespaceURI: HTML_NS, type: TYPE_IDREF_LIST },\n    },\n  ],\n  [\n    \"form\",\n    {\n      button: { namespaceURI: HTML_NS, type: TYPE_IDREF },\n      fieldset: { namespaceURI: HTML_NS, type: TYPE_IDREF },\n      input: { namespaceURI: HTML_NS, type: TYPE_IDREF },\n      keygen: { namespaceURI: HTML_NS, type: TYPE_IDREF },\n      label: { namespaceURI: HTML_NS, type: TYPE_IDREF },\n      object: { namespaceURI: HTML_NS, type: TYPE_IDREF },\n      output: { namespaceURI: HTML_NS, type: TYPE_IDREF },\n      select: { namespaceURI: HTML_NS, type: TYPE_IDREF },\n      textarea: { namespaceURI: HTML_NS, type: TYPE_IDREF },\n    },\n  ],\n  [\n    \"formaction\",\n    {\n      button: { namespaceURI: HTML_NS, type: TYPE_URI },\n      input: { namespaceURI: HTML_NS, type: TYPE_URI },\n    },\n  ],\n  [\n    \"headers\",\n    {\n      td: { namespaceURI: HTML_NS, type: TYPE_IDREF_LIST },\n      th: { namespaceURI: HTML_NS, type: TYPE_IDREF_LIST },\n    },\n  ],\n  [\n    \"href\",\n    {\n      a: { namespaceURI: HTML_NS, type: TYPE_URI },\n      area: { namespaceURI: HTML_NS, type: TYPE_URI },\n      link: [\n        {\n          namespaceURI: WILDCARD,\n          type: TYPE_CSS_RESOURCE_URI,\n          isValid: attributes => {\n            return getAttribute(attributes, \"rel\") === \"stylesheet\";\n          },\n        },\n        { namespaceURI: WILDCARD, type: TYPE_URI },\n      ],\n      base: { namespaceURI: HTML_NS, type: TYPE_URI },\n    },\n  ],\n  [\n    \"icon\",\n    {\n      menuitem: { namespaceURI: HTML_NS, type: TYPE_URI },\n    },\n  ],\n  [\"list\", { input: { namespaceURI: HTML_NS, type: TYPE_IDREF } }],\n  [\n    \"longdesc\",\n    {\n      img: { namespaceURI: HTML_NS, type: TYPE_URI },\n      frame: { namespaceURI: HTML_NS, type: TYPE_URI },\n      iframe: { namespaceURI: HTML_NS, type: TYPE_URI },\n    },\n  ],\n  [\"manifest\", { html: { namespaceURI: HTML_NS, type: TYPE_URI } }],\n  [\n    \"menu\",\n    {\n      button: { namespaceURI: HTML_NS, type: TYPE_IDREF },\n    },\n  ],\n  [\n    \"ping\",\n    {\n      a: { namespaceURI: HTML_NS, type: TYPE_URI_LIST },\n      area: { namespaceURI: HTML_NS, type: TYPE_URI_LIST },\n    },\n  ],\n  [\"poster\", { video: { namespaceURI: HTML_NS, type: TYPE_URI } }],\n  [\"profile\", { head: { namespaceURI: HTML_NS, type: TYPE_URI } }],\n  [\n    \"src\",\n    {\n      script: { namespaceURI: WILDCARD, type: TYPE_JS_RESOURCE_URI },\n      input: { namespaceURI: HTML_NS, type: TYPE_URI },\n      frame: { namespaceURI: HTML_NS, type: TYPE_URI },\n      iframe: { namespaceURI: HTML_NS, type: TYPE_URI },\n      img: { namespaceURI: HTML_NS, type: TYPE_URI },\n      audio: { namespaceURI: HTML_NS, type: TYPE_URI },\n      embed: { namespaceURI: HTML_NS, type: TYPE_URI },\n      source: { namespaceURI: HTML_NS, type: TYPE_URI },\n      track: { namespaceURI: HTML_NS, type: TYPE_URI },\n      video: { namespaceURI: HTML_NS, type: TYPE_URI },\n    },\n  ],\n  [\n    \"usemap\",\n    {\n      img: { namespaceURI: HTML_NS, type: TYPE_URI },\n      input: { namespaceURI: HTML_NS, type: TYPE_URI },\n      object: { namespaceURI: HTML_NS, type: TYPE_URI },\n    },\n  ],\n  [\"xmlns\", { WILDCARD: { namespaceURI: WILDCARD, type: TYPE_URI } }],\n\n  // SVG links aren't handled yet, see bug 1158831.\n  // [\"fill\", {\n  //   WILDCARD: {namespaceURI: SVG_NS, type: },\n  // }],\n  // [\"stroke\", {\n  //   WILDCARD: {namespaceURI: SVG_NS, type: },\n  // }],\n  // [\"markerstart\", {\n  //   WILDCARD: {namespaceURI: SVG_NS, type: },\n  // }],\n  // [\"markermid\", {\n  //   WILDCARD: {namespaceURI: SVG_NS, type: },\n  // }],\n  // [\"markerend\", {\n  //   WILDCARD: {namespaceURI: SVG_NS, type: },\n  // }],\n  // [\"xlink:href\", {\n  //   WILDCARD: {namespaceURI: SVG_NS, type: },\n  // }],\n]);\n\nvar parsers = {\n  [TYPE_URI]: function (attributeValue) {\n    return [\n      {\n        type: TYPE_URI,\n        value: attributeValue,\n      },\n    ];\n  },\n  [TYPE_URI_LIST]: function (attributeValue) {\n    const data = splitBy(attributeValue, \" \");\n    for (const token of data) {\n      if (!token.type) {\n        token.type = TYPE_URI;\n      }\n    }\n    return data;\n  },\n  [TYPE_JS_RESOURCE_URI]: function (attributeValue) {\n    return [\n      {\n        type: TYPE_JS_RESOURCE_URI,\n        value: attributeValue,\n      },\n    ];\n  },\n  [TYPE_CSS_RESOURCE_URI]: function (attributeValue) {\n    return [\n      {\n        type: TYPE_CSS_RESOURCE_URI,\n        value: attributeValue,\n      },\n    ];\n  },\n  [TYPE_IDREF]: function (attributeValue) {\n    return [\n      {\n        type: TYPE_IDREF,\n        value: attributeValue,\n      },\n    ];\n  },\n  [TYPE_IDREF_LIST]: function (attributeValue) {\n    const data = splitBy(attributeValue, \" \");\n    for (const token of data) {\n      if (!token.type) {\n        token.type = TYPE_IDREF;\n      }\n    }\n    return data;\n  },\n};\n\n/**\n * Parse an attribute value.\n * @param {String} namespaceURI The namespaceURI of the node that has the\n * attribute.\n * @param {String} tagName The tagName of the node that has the attribute.\n * @param {Array} attributes The list of all attributes of the node. This should\n * be an array of {name, value} objects.\n * @param {String} attributeName The name of the attribute to parse.\n * @param {String} attributeValue The value of the attribute to parse.\n * @return {Array} An array of tokens that represents the value. Each token is\n * an object {type: [string|uri|jsresource|cssresource|idref], value}.\n * For instance parsing the ping attribute in <a ping=\"uri1 uri2\"> returns:\n * [\n *   {type: \"uri\", value: \"uri2\"},\n *   {type: \"string\", value: \" \"},\n *   {type: \"uri\", value: \"uri1\"}\n * ]\n */\nfunction parseAttribute(namespaceURI, tagName, attributes, attributeName, attributeValue) {\n  const type = getType(namespaceURI, tagName, attributes, attributeName);\n  if (!type) {\n    return [\n      {\n        type: TYPE_STRING,\n        value: attributeValue,\n      },\n    ];\n  }\n\n  return parsers[type](attributeValue);\n}\n\n/**\n * Get the type for links in this attribute if any.\n * @param {String} namespaceURI The node's namespaceURI.\n * @param {String} tagName The node's tagName.\n * @param {Array} attributes The node's attributes, as a list of {name, value}\n * objects.\n * @param {String} attributeName The name of the attribute to get the type for.\n * @return {Object} null if no type exist for this attribute on this node, the\n * type object otherwise.\n */\nfunction getType(namespaceURI, tagName, attributes, attributeName) {\n  const attributeType = ATTRIBUTE_TYPES.get(attributeName);\n  if (!attributeType) {\n    return null;\n  }\n\n  const lcTagName = tagName.toLowerCase();\n  const typeData = attributeType[lcTagName] || attributeType.WILDCARD;\n\n  if (!typeData) {\n    return null;\n  }\n\n  if (Array.isArray(typeData)) {\n    for (const data of typeData) {\n      const hasNamespace = data.namespaceURI === WILDCARD || data.namespaceURI === namespaceURI;\n      const isValid = data.isValid ? data.isValid(attributes) : true;\n\n      if (hasNamespace && isValid) {\n        return data.type;\n      }\n    }\n\n    return null;\n  } else if (typeData.namespaceURI === WILDCARD || typeData.namespaceURI === namespaceURI) {\n    return typeData.type;\n  }\n\n  return null;\n}\n\nfunction getAttribute(attributes, attributeName) {\n  const attribute = attributes.find(x => x.name === attributeName);\n  return attribute ? attribute.value : null;\n}\n\n/**\n * Split a string by a given character and return an array of objects parts.\n * The array will contain objects for the split character too, marked with\n * TYPE_STRING type.\n * @param {String} value The string to parse.\n * @param {String} splitChar A 1 length split character.\n * @return {Array}\n */\nfunction splitBy(value, splitChar) {\n  const data = [];\n\n  let buffer = \"\",\n    i = 0;\n  while (i <= value.length) {\n    if (i === value.length && buffer) {\n      data.push({ value: buffer });\n    }\n    if (value[i] === splitChar) {\n      if (buffer) {\n        data.push({ value: buffer });\n      }\n      data.push({\n        type: TYPE_STRING,\n        value: splitChar,\n      });\n      buffer = \"\";\n    } else {\n      buffer += value[i];\n    }\n\n    i++;\n  }\n  return data;\n}\n\nexports.parseAttribute = parseAttribute;\n// Exported for testing only.\nexports.splitBy = splitBy;\n","import React from \"react\";\n\nimport ExternalLink from \"ui/components/shared/ExternalLink\";\n\nimport { MatchedSelectorState } from \"../state\";\n\nconst DeclarationValue = require(\"../../rules/components/DeclarationValue\");\n\ninterface MatchedSelectorProps {\n  selector: MatchedSelectorState;\n}\n\nexport default function MatchedSelector(props: MatchedSelectorProps) {\n  const { selector } = props;\n\n  return (\n    <div className={selector.overridden ? \"computed-overridden\" : \"\"}>\n      <span className=\"rule-link\">\n        <ExternalLink\n          className=\"computed-link theme-link\"\n          title={selector.stylesheetURL}\n          tabIndex={0}\n        >\n          {selector.stylesheet}\n        </ExternalLink>\n      </span>\n      <span dir=\"ltr\" className=\"rule-text theme-fg-color3\">\n        <div className=\"fix-get-selection\">{selector.selector}</div>\n        <div className=\"fix-get-selection computed-other-property-value theme-fg-color1\">\n          <DeclarationValue\n            colorSpanClassName=\"computed-color\"\n            colorSwatchClassName=\"computed-colorswatch\"\n            fontFamilySpanClassName=\"computed-font-family\"\n            values={selector.parsedValue}\n          />\n        </div>\n      </span>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { ComputedPropertyState } from \"../state\";\nimport MatchedSelector from \"./MatchedSelector\";\n\nconst DeclarationValue = require(\"../../rules/components/DeclarationValue\");\nconst classnames = require(\"classnames\");\n\ninterface ComputedPropertyProps {\n  property: ComputedPropertyState;\n  hidden?: boolean;\n  dark: boolean;\n  isExpanded: boolean;\n  toggleExpanded(): void;\n}\n\nfunction getHeaderClassName(hidden: boolean | undefined, dark: boolean) {\n  if (!hidden) {\n    return dark ? \"computed-property-view row-striped\" : \"computed-property-view\";\n  }\n  return \"computed-property-hidden\";\n}\n\nfunction getContentClassName(hidden: boolean | undefined, dark: boolean) {\n  if (!hidden) {\n    return dark ? \"computed-property-content row-striped\" : \"computed-property-content\";\n  }\n  return \"computed-property-hidden\";\n}\n\nfunction getTwistyClassName(property: ComputedPropertyState, isExpanded: boolean) {\n  return classnames(\n    \"computed-expander\",\n    \"theme-twisty\",\n    property.selectors.length > 0 ? \"computed-expandable\" : undefined,\n    isExpanded ? \"open\" : undefined\n  );\n}\n\nexport default function ComputedProperty(props: ComputedPropertyProps) {\n  const { property, hidden, dark, isExpanded, toggleExpanded } = props;\n  const headerClassName = getHeaderClassName(hidden, dark);\n  const contentClassName = getContentClassName(hidden, dark);\n  const twistyClassName = getTwistyClassName(property, isExpanded);\n\n  return (\n    <>\n      <div className={headerClassName} onDoubleClick={toggleExpanded}>\n        <span className=\"computed-property-name-container\">\n          <div className={twistyClassName} onClick={toggleExpanded}></div>\n          <span\n            className=\"computed-property-name theme-fg-color3\"\n            tabIndex={undefined}\n            dir=\"ltr\"\n            title={property.name}\n          >\n            {property.name}\n            <span className=\"visually-hidden\">: </span>\n          </span>\n        </span>\n        <span className=\"computed-property-value-container\">\n          <span className=\"computed-property-value theme-fg-color1\" tabIndex={undefined} dir=\"ltr\">\n            <DeclarationValue\n              colorSpanClassName=\"computed-color\"\n              colorSwatchClassName=\"computed-colorswatch\"\n              fontFamilySpanClassName=\"computed-font-family\"\n              values={property.parsedValue}\n            />\n          </span>\n          <span className=\"visually-hidden\">;</span>\n        </span>\n      </div>\n      <div className={contentClassName}>\n        <div className=\"matchedselectors\">\n          {isExpanded\n            ? property.selectors.map((selector, index) => (\n                <MatchedSelector key={index} selector={selector} />\n              ))\n            : null}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { ConnectedProps, connect } from \"react-redux\";\n\nimport { UIState } from \"ui/state\";\n\nimport { setComputedPropertyExpanded } from \"../actions\";\nimport { ComputedPropertyState } from \"../state\";\nimport ComputedProperty from \"./ComputedProperty\";\n\nfunction isHidden(property: ComputedPropertyState, search: string, showBrowserStyles: boolean) {\n  if (property.selectors.length === 0 && !showBrowserStyles) {\n    return true;\n  }\n\n  const isValidSearchTerm = search.trim().length > 0;\n  if (\n    isValidSearchTerm &&\n    !property.name.toLowerCase().includes(search) &&\n    !property.value.toLowerCase().includes(search)\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ComputedProperties(props: PropsFromRedux) {\n  const { properties, expandedProperties, setComputedPropertyExpanded, search, showBrowserStyles } =\n    props;\n\n  let dark = false;\n  let allPropertiesHidden = true;\n  const renderedProperties = properties.map(property => {\n    const hidden = isHidden(property, search, showBrowserStyles);\n    if (hidden) {\n      return null;\n    }\n    dark = !dark;\n    allPropertiesHidden = false;\n    const isExpanded = expandedProperties.has(property.name);\n    const toggleExpanded = () => setComputedPropertyExpanded(property.name, !isExpanded);\n\n    return (\n      <ComputedProperty\n        key={property.name}\n        property={property}\n        dark={dark}\n        isExpanded={isExpanded}\n        toggleExpanded={toggleExpanded}\n      />\n    );\n  });\n\n  return (\n    <div id=\"computed-container\">\n      <div id=\"computed-container-focusable\" tabIndex={-1}>\n        <div id=\"computed-property-container\" className=\"devtools-monospace\" tabIndex={0} dir=\"ltr\">\n          {renderedProperties}\n        </div>\n        <div\n          id=\"computed-no-results\"\n          className=\"devtools-sidepanel-no-result\"\n          hidden={!allPropertiesHidden}\n        >\n          No CSS properties found.\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: UIState) => ({\n  properties: state.computed.properties,\n  expandedProperties: state.computed.expandedProperties,\n  search: state.computed.search,\n  showBrowserStyles: state.computed.showBrowserStyles,\n});\nconst mapDispatchToProps = {\n  setComputedPropertyExpanded,\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(ComputedProperties);\n","import debounce from \"lodash/debounce\";\nimport React, { FormEvent, useRef } from \"react\";\nimport { ConnectedProps, connect } from \"react-redux\";\n\nimport Checkbox from \"ui/components/shared/Forms/Checkbox\";\n\nimport { setComputedPropertySearch, setShowBrowserStyles } from \"../actions\";\n\nfunction ComputedToolbar(props: PropsFromRedux) {\n  const { setComputedPropertySearch, setShowBrowserStyles } = props;\n\n  const searchFieldRef = useRef<HTMLInputElement>(null);\n\n  const setSearch = debounce(() => {\n    if (searchFieldRef.current) {\n      setComputedPropertySearch(searchFieldRef.current.value);\n    }\n  }, 150);\n\n  function setShowAll(event: FormEvent<HTMLInputElement>) {\n    setShowBrowserStyles(event.currentTarget.checked);\n  }\n\n  return (\n    <div id=\"computed-toolbar\" className=\"devtools-toolbar devtools-input-toolbar\">\n      <div id=\"computed-search\" className=\"devtools-searchbox text-themeTextFieldColor\">\n        <input\n          id=\"computed-searchbox\"\n          className=\"devtools-filterinput\"\n          type=\"input\"\n          autoComplete=\"off\"\n          placeholder=\"Filter Styles\"\n          ref={searchFieldRef}\n          onInput={setSearch}\n        />\n      </div>\n      <div className=\"devtools-separator\"></div>\n      <Checkbox id=\"browser-style-checkbox\" onChange={setShowAll} />\n      <label id=\"browser-style-checkbox-label\" htmlFor=\"browser-style-checkbox\">\n        Browser Styles\n      </label>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = {\n  setComputedPropertySearch,\n  setShowBrowserStyles,\n};\nconst connector = connect(undefined, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(ComputedToolbar);\n","import React from \"react\";\n\nimport ComputedProperties from \"./ComputedProperties\";\nimport ComputedToolbar from \"./ComputedToolbar\";\n\nexport default function ComputedApp() {\n  return (\n    <div id=\"sidebar-panel-computedview\" className=\"theme-sidebar inspector-tabpanel\">\n      <ComputedToolbar />\n      <ComputedProperties />\n    </div>\n  );\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport classnames from \"classnames\";\n\nconst LONG_TEXT_ROTATE_LIMIT = 3;\n\ninterface BMEProps {\n  box: string;\n  direction?: string;\n  property: string;\n  textContent: string | number;\n}\n\nexport function BoxModelSideLabel({ box, direction, property, textContent }: BMEProps) {\n  const rotate =\n    direction &&\n    (direction == \"left\" || direction == \"right\") &&\n    box !== \"position\" &&\n    textContent.toString().length > LONG_TEXT_ROTATE_LIMIT;\n\n  const paraClassnames = classnames(\n    `boxmodel-${box}`,\n    direction ? `boxmodel-${direction}` : `boxmodel-${property}`,\n    rotate ? \"boxmodel-rotate\" : \"\"\n  );\n\n  return (\n    <p className={paraClassnames}>\n      <span className=\"boxmodel-editable\" data-box={box} title={property}>\n        {textContent}{\" \"}\n      </span>\n    </p>\n  );\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from \"react\";\nimport { ConnectedProps, connect } from \"react-redux\";\n\nimport { highlightNode, unhighlightNode } from \"devtools/client/inspector/markup/actions/markup\";\nimport { UIState } from \"ui/state\";\n\nimport { getSelectedNodeId } from \"../../markup/selectors/markup\";\nimport { Layout, LayoutNumericFields } from \"../reducers/box-model\";\nimport { BoxModelSideLabel } from \"./BoxModelSideLabel\";\n\ninterface BMMProps {\n  layout: Layout;\n}\n\nconst mapState = (state: UIState) => ({\n  selectedNodeId: getSelectedNodeId(state),\n});\n\nconst connector = connect(mapState, { highlightNode, unhighlightNode });\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype FinalBMMProps = BMMProps & PropsFromRedux;\n\nexport class BoxModelMain extends React.PureComponent<FinalBMMProps> {\n  getBorderOrPaddingValue = (property: keyof LayoutNumericFields) => {\n    const { layout } = this.props;\n    return layout[property] ? parseFloat(layout[property]) : \"-\";\n  };\n\n  /**\n   * Returns true if the layout box sizing is context box and false otherwise.\n   */\n  getContextBox = () => {\n    const { layout } = this.props;\n    return layout[\"box-sizing\"] == \"content-box\";\n  };\n\n  /**\n   * Returns true if the position is displayed and false otherwise.\n   */\n  getDisplayPosition = () => {\n    const { layout } = this.props;\n    return layout.position && layout.position != \"static\";\n  };\n\n  getHeightValue = (property?: number) => {\n    if (property == undefined) {\n      return \"-\";\n    }\n\n    const { layout } = this.props;\n\n    property -=\n      parseFloat(layout[\"border-top-width\"] || \"0\") +\n      parseFloat(layout[\"border-bottom-width\"] || \"0\") +\n      parseFloat(layout[\"padding-top\"] || \"0\") +\n      parseFloat(layout[\"padding-bottom\"] || \"0\");\n    property = parseFloat(property.toPrecision(6));\n\n    return property;\n  };\n\n  getMarginValue = (property: keyof LayoutNumericFields, direction: string) => {\n    const { layout } = this.props;\n    const autoMargins = layout.autoMargins || {};\n    let value: string | number = \"-\";\n\n    if (direction in autoMargins) {\n      value = autoMargins[direction];\n    } else if (layout[property]) {\n      const parsedValue = parseFloat(layout[property]);\n\n      if (Number.isNaN(parsedValue)) {\n        // Not a number. We use the raw string.\n        // Useful for pseudo-elements with auto margins since they\n        // don't appear in autoMargins.\n        value = layout[property];\n      } else {\n        value = parsedValue;\n      }\n    }\n\n    return value;\n  };\n\n  getPositionValue = (property: keyof LayoutNumericFields) => {\n    const { layout } = this.props;\n    let value: string | number = \"-\";\n\n    if (!layout[property]) {\n      return value;\n    }\n\n    const parsedValue = parseFloat(layout[property]);\n\n    if (Number.isNaN(parsedValue)) {\n      // Not a number. We use the raw string.\n      value = layout[property];\n    } else {\n      value = parsedValue;\n    }\n\n    return value;\n  };\n\n  getWidthValue = (property?: number) => {\n    if (property == undefined) {\n      return \"-\";\n    }\n\n    const { layout } = this.props;\n\n    property -=\n      parseFloat(layout[\"border-left-width\"] || \"0\") +\n      parseFloat(layout[\"border-right-width\"] || \"0\") +\n      parseFloat(layout[\"padding-left\"] || \"0\") +\n      parseFloat(layout[\"padding-right\"] || \"0\");\n    property = parseFloat(property.toPrecision(6));\n\n    return property;\n  };\n\n  onHideBoxModelHighlighter = () => {\n    this.props.unhighlightNode();\n  };\n\n  onShowBoxModelHighlighter = () => {\n    const { selectedNodeId, highlightNode } = this.props;\n    if (selectedNodeId) {\n      highlightNode(selectedNodeId);\n    }\n  };\n\n  onHighlightMouseOver = (event: React.MouseEvent) => {\n    const target = event.target as HTMLElement;\n    let region = target.getAttribute(\"data-box\");\n\n    if (!region) {\n      let el = target;\n\n      do {\n        el = el.parentNode! as HTMLElement;\n\n        if (el && el.getAttribute(\"data-box\")) {\n          region = el.getAttribute(\"data-box\");\n          break;\n        }\n      } while (el.parentNode);\n\n      this.onHideBoxModelHighlighter();\n    }\n\n    this.onShowBoxModelHighlighter();\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { layout } = this.props;\n    let { height, width } = layout;\n\n    const sides = [\"top\", \"right\", \"bottom\", \"left\"] as const;\n\n    const borderValues = sides.map(side => this.getBorderOrPaddingValue(`border-${side}-width`));\n    const paddingValues = sides.map(side => this.getBorderOrPaddingValue(`padding-${side}`));\n    const positionValues = sides.map(side => this.getPositionValue(side));\n    const marginValues = sides.map(side => this.getMarginValue(`margin-${side}`, side));\n\n    const displayPosition = this.getDisplayPosition();\n\n    const renderValueLabels = (values: (number | string)[], boxName: string) => {\n      return sides.map((side, i) => {\n        const property = `${boxName}-${side}`;\n        return (\n          <BoxModelSideLabel\n            key={property}\n            box={boxName}\n            direction={side}\n            property={property}\n            textContent={values[i]}\n          />\n        );\n      });\n    };\n\n    const finalHeight = this.getHeightValue(height);\n    const finalWidth = this.getWidthValue(width);\n\n    const dimensions = `${finalWidth}\\u00D7${finalHeight}`;\n\n    const contentBox =\n      layout[\"box-sizing\"] == \"content-box\" ? (\n        <div className=\"boxmodel-size\">\n          <BoxModelSideLabel box=\"content\" property=\"width\" textContent={finalWidth} />\n          <span>{\"\\u00D7\"}</span>\n          <BoxModelSideLabel box=\"content\" property=\"height\" textContent={finalHeight} />\n        </div>\n      ) : (\n        <p className=\"boxmodel-size\">\n          <span title=\"content\">{dimensions}</span>\n        </p>\n      );\n\n    return (\n      <div\n        className=\"boxmodel-main devtools-monospace\"\n        data-box=\"position\"\n        onMouseOver={this.onHighlightMouseOver}\n        onMouseOut={this.onHideBoxModelHighlighter}\n      >\n        {displayPosition ? (\n          <span className=\"boxmodel-legend\" data-box=\"position\" title=\"position\">\n            position\n          </span>\n        ) : null}\n        <div className=\"boxmodel-box\">\n          <span className=\"boxmodel-legend\" data-box=\"margin\" title=\"margin\">\n            margin\n          </span>\n          <div className=\"boxmodel-margins\" data-box=\"margin\" title=\"margin\">\n            <span className=\"boxmodel-legend\" data-box=\"border\" title=\"border\">\n              border\n            </span>\n            <div className=\"boxmodel-borders\" data-box=\"border\" title=\"border\">\n              <span className=\"boxmodel-legend\" data-box=\"padding\" title=\"padding\">\n                padding\n              </span>\n              <div className=\"boxmodel-paddings\" data-box=\"padding\" title=\"padding\">\n                <div className=\"boxmodel-contents\" data-box=\"content\" title=\"content\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {displayPosition ? renderValueLabels(positionValues, \"position\") : null}\n        {renderValueLabels(marginValues, \"margin\")}\n        {renderValueLabels(borderValues, \"border\")}\n        {renderValueLabels(paddingValues, \"padding\")}\n        {contentBox}\n      </div>\n    );\n  }\n}\n\nexport default connector(BoxModelMain);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n\"use strict\";\n\nimport React from \"react\";\n\ninterface CPProps {\n  name: string;\n  value: string;\n}\n\nexport function ComputedProperty({ name, value }: CPProps) {\n  return (\n    <div className=\"computed-property-view\" data-property-name={name} tabIndex={0}>\n      <div className=\"computed-property-name-container\">\n        <div className=\"computed-property-name theme-fg-color3\" title={name}>\n          {name}\n        </div>\n      </div>\n      <div className=\"computed-property-value-container\">\n        <div className=\"computed-property-value theme-fg-color1\" dir=\"ltr\">\n          {value}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n\"use strict\";\n\nimport React, { useState } from \"react\";\n\nimport type { Layout } from \"../reducers/box-model\";\nimport { ComputedProperty } from \"./ComputedProperty\";\n\ninterface BMProps {\n  layout: Layout;\n}\n\nconst layoutInfo = [\n  \"box-sizing\",\n  \"display\",\n  \"float\",\n  \"line-height\",\n  \"position\",\n  \"z-index\",\n] as const;\n\nexport function BoxModelProperties({ layout }: BMProps) {\n  const [isOpen, setIsOpen] = useState(true);\n\n  const onToggleExpander = (event: React.MouseEvent) => {\n    event.stopPropagation();\n    setIsOpen(!isOpen);\n  };\n\n  const properties = layoutInfo.map(info => {\n    return <ComputedProperty key={info} name={info} value={layout[info]} />;\n  });\n\n  return (\n    <div className=\"layout-properties\">\n      <div className=\"layout-properties-header\" onDoubleClick={onToggleExpander}>\n        <span\n          className=\"layout-properties-expander theme-twisty\"\n          onClick={onToggleExpander}\n          style={{ transform: isOpen ? \"none\" : undefined }}\n        ></span>\n        Box Model Properties\n      </div>\n      <div className=\"layout-properties-wrapper devtools-monospace\" hidden={!isOpen} tabIndex={0}>\n        {properties}\n      </div>\n    </div>\n  );\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n\"use strict\";\n\nimport React from \"react\";\n\nimport type { Layout } from \"../reducers/box-model\";\nimport BoxModelMain from \"./BoxModelMain\";\nimport { BoxModelProperties } from \"./BoxModelProperties\";\n\nfunction BoxModelInfo({ layout }: { layout: Layout }) {\n  const { height = \"-\", position, width = \"-\" } = layout;\n\n  const dimensions = `${width}\\u00D7${height}`;\n  return (\n    <div className=\"boxmodel-info\">\n      <span className=\"boxmodel-element-size\">{dimensions}</span>\n      <section className=\"boxmodel-position-group\">\n        <span className=\"boxmodel-element-position\">{position}</span>\n      </section>\n    </div>\n  );\n}\n\ninterface BMProps {\n  boxModel: { layout: Layout };\n  showBoxModelProperties: boolean;\n}\n\nexport function BoxModel({ boxModel, showBoxModelProperties }: BMProps) {\n  const { layout } = boxModel;\n\n  const boxModelProperties = showBoxModelProperties ? <BoxModelProperties layout={layout} /> : null;\n\n  return (\n    <div className=\"boxmodel-container\" tabIndex={0}>\n      <BoxModelMain layout={layout} />\n      <BoxModelInfo layout={layout} />\n      {boxModelProperties}\n    </div>\n  );\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from \"react\";\nimport { ConnectedProps, connect } from \"react-redux\";\n\nimport type { UIState } from \"ui/state\";\n\nimport { BoxModel } from \"../../boxmodel/components/BoxModel\";\n\nconst Services = require(\"devtools/shared/services\");\n\nconst Accordion = require(\"devtools/client/shared/components/Accordion\");\nconst BOXMODEL_OPENED_PREF = \"devtools.layout.boxmodel.opened\";\n\nconst mapStateToProps = (state: UIState) => ({\n  boxModel: state.boxModel,\n});\n\nconst connector = connect(mapStateToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ninterface LayoutAppProps {\n  showBoxModelProperties: boolean;\n}\n\ntype FinalLAProps = PropsFromRedux & LayoutAppProps;\n\nclass LayoutApp extends React.PureComponent<FinalLAProps> {\n  getBoxModelSection() {\n    return {\n      component: BoxModel,\n      componentProps: this.props,\n      contentClassName: \"layout-content\",\n      header: \"Box Model\",\n      id: \"layout-section-boxmodel\",\n      opened: Services.prefs.getBoolPref(BOXMODEL_OPENED_PREF),\n      onToggle: (opened: boolean) => {\n        Services.prefs.setBoolPref(BOXMODEL_OPENED_PREF, opened);\n      },\n    };\n  }\n\n  render() {\n    const items = [this.getBoxModelSection()];\n\n    return (\n      <div className=\"layout-container\">\n        <div className=\"h-full overflow-y-auto\">\n          <Accordion items={items} style={{ overflow: \"auto\" }} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connector(LayoutApp);\n","import classnames from \"classnames\";\nimport React, { useEffect, useRef } from \"react\";\n\nimport { useAppDispatch, useAppSelector } from \"ui/setup/hooks\";\n\nimport { highlightNode, selectNode, unhighlightNode } from \"../actions/markup\";\nimport { NodeInfo } from \"../reducers/markup\";\nimport { getMarkupNodes, getRootNodeId, getSelectedNodeId } from \"../selectors/markup\";\n\nexport function HTMLBreadcrumbs() {\n  const dispatch = useAppDispatch();\n  const markupNodes = useAppSelector(getMarkupNodes);\n  const selectedNodeId = useAppSelector(getSelectedNodeId);\n  const rootNodeId = useAppSelector(getRootNodeId);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // By default, the breadcrumbs list is empty\n  let breadcrumbsContent: React.ReactNode[] = [];\n\n  if (rootNodeId && markupNodes.ids.length > 0 && selectedNodeId) {\n    let currentNodeId: string | undefined = selectedNodeId;\n    let nodeHierarchy: NodeInfo[] = [];\n\n    // Assuming we have markup node data and a valid selected node, traverse up\n    // the node tree to find all ancestors (minus the `<document>`)\n    while (currentNodeId && currentNodeId !== rootNodeId) {\n      const node: NodeInfo | undefined = markupNodes.entities[currentNodeId];\n      if (!node) {\n        breadcrumbsContent = [\"Loading...\"];\n        break;\n      }\n      nodeHierarchy.push(node);\n      currentNodeId = node.parentNodeId;\n    }\n\n    // Reverse this so the `<html>` node is first, and selected is last\n    nodeHierarchy.reverse();\n\n    breadcrumbsContent = nodeHierarchy.map(node => {\n      const buttonClassnames = classnames(\"breadcrumbs-widget-item\", \"flex\", {\n        selectedBreadcrumb: node.id === selectedNodeId,\n      });\n\n      // Extract `id` and `class` attribute data\n      const nodeIdAttribute = node.attributes.find(attr => attr.name === \"id\");\n      const nodeClassAttribute = node.attributes.find(attr => attr.name === \"class\");\n      const nodeClassNames = nodeClassAttribute?.value.split(\" \") ?? [];\n\n      // Construct textual tag/id/class values for display\n      const nodeTagLabel = `${node.pseudoType ? \"::\" : \"\"}${node.displayName}`;\n      const nodeIdLabel = nodeIdAttribute ? `#${nodeIdAttribute.value}` : \"\";\n      const nodeClassLabel = [\"\"].concat(nodeClassNames).join(\".\");\n\n      // The `title` attribute will be a plain concatenated string form\n      const titleText = `${nodeTagLabel}${nodeIdLabel}${nodeClassLabel}`;\n\n      const handleButtonClick = () => {\n        dispatch(selectNode(node.id));\n      };\n\n      const handleMouseOver = () => {\n        dispatch(highlightNode(node.id));\n      };\n\n      const handleMouseLeave = () => {\n        dispatch(unhighlightNode());\n      };\n\n      return (\n        <button\n          key={node.id}\n          className={buttonClassnames}\n          onClick={handleButtonClick}\n          onMouseOver={handleMouseOver}\n          onMouseLeave={handleMouseLeave}\n          id={`breadcrumbs-widget-item-${node.id}`}\n          tabIndex={-1}\n          title={titleText}\n        >\n          <span className=\"breadcrumbs-widget-item-tag plain\">{nodeTagLabel}</span>\n          <span className=\"breadcrumbs-widget-item-id plain\">{nodeIdLabel}</span>\n          <span className=\"breadcrumbs-widget-item-classes plain\">{nodeClassLabel}</span>\n        </button>\n      );\n    });\n  }\n  useEffect(() => {\n    if (!selectedNodeId) {\n      return;\n    }\n\n    // Find the last button DOM node\n    const buttons = [...(containerRef.current?.querySelectorAll(\".breadcrumbs-widget-item\") || [])];\n    const [lastButton] = buttons.slice(-1);\n\n    if (lastButton) {\n      // Scroll sideways so the entire last button is in view\n      const rect = lastButton.getBoundingClientRect();\n      containerRef.current!.scroll({ left: rect.right, behavior: \"smooth\" });\n    }\n  }, [selectedNodeId]);\n\n  // Carry over some ARIA attributes from the old impl, because why not\n  let activeDescendant = selectedNodeId ? `breadcrumbs-widget-item-${selectedNodeId}` : undefined;\n\n  return (\n    <div className=\"inspector-breadcrumbs-toolbar devtools-toolbar\">\n      <div\n        className=\"breadcrumbs-widget-container overflow-y-none flex max-h-8 overflow-x-auto\"\n        role=\"toolbar\"\n        aria-label=\"Breadcrumbs\"\n        tabIndex={0}\n        ref={containerRef}\n        aria-activedescendant={activeDescendant}\n      >\n        {breadcrumbsContent}\n      </div>\n    </div>\n  );\n}\n","import { Object as ProtocolObject } from \"@replayio/protocol\";\nimport React, { useContext, useEffect, useLayoutEffect, useRef, useState } from \"react\";\n\nimport type { UIThunkAction } from \"ui/actions\";\nimport { useAppDispatch, useAppSelector } from \"ui/setup/hooks\";\nimport { getNodeDataAsync } from \"ui/suspense/nodeCaches\";\n\nimport { searchDOM } from \"../actions/markup\";\nimport { getSelectedDomNodeId, nodeSelected } from \"../reducers/markup\";\n\nconst Services = require(\"devtools/shared/services\");\n\nconst doFullTextSearch = (\n  queryBefore: string,\n  queryRef: { current: string },\n  reverse: boolean\n): UIThunkAction<Promise<ProtocolObject[] | undefined>> => {\n  return async (dispatch, getState, { ThreadFront, replayClient, protocolClient }) => {\n    const state = getState();\n    const pauseIdBefore = state.pause.id;\n\n    const results = await dispatch(searchDOM(queryBefore));\n\n    const stateAfter = getState();\n    const pauseIdAfter = stateAfter.pause.id;\n\n    if (results?.length && pauseIdAfter === pauseIdBefore && queryRef.current === queryBefore) {\n      const currentSelectedNode = stateAfter.markup.selectedNode;\n\n      const currentIndex = currentSelectedNode\n        ? results.findIndex(node => node.objectId === currentSelectedNode)\n        : -1;\n      let index;\n      if (currentIndex == -1) {\n        index = 0;\n      } else if (reverse) {\n        index = currentIndex ? currentIndex - 1 : results.length - 1;\n      } else {\n        index = currentIndex != results.length - 1 ? currentIndex + 1 : 0;\n      }\n\n      const node = results[index];\n\n      dispatch(nodeSelected(node.objectId, \"inspectorsearch\"));\n    }\n\n    return results;\n  };\n};\n\nexport function InspectorSearch() {\n  const dispatch = useAppDispatch();\n  const selectedDomNodeId = useAppSelector(getSelectedDomNodeId);\n\n  // TODO Add a loading indicator of some kind?\n  const [searchText, setSearchText] = useState(\"\");\n  const [activeSearchText, setActiveSearchText] = useState<string | null>(null);\n\n  const [results, setResults] = useState<ProtocolObject[] | null>(null);\n\n  const latestSearchTextRef = useRef(searchText);\n\n  const startFullTextSearch = async (query: string, reverseSearchDirection: boolean) => {\n    if (activeSearchText !== query) {\n      setActiveSearchText(query);\n      setResults(null);\n    }\n\n    const results = await dispatch(\n      doFullTextSearch(query, latestSearchTextRef, reverseSearchDirection)\n    );\n\n    setResults(results || null);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  };\n\n  useLayoutEffect(() => {\n    latestSearchTextRef.current = searchText;\n  });\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      startFullTextSearch(searchText, e.shiftKey);\n    }\n\n    // Honestly I have no idea why this was in the original search logic.\n    // Apparently search if you hit CTRL+G? Weird combo.\n    const modifierKey = Services.appinfo.OS === \"Darwin\" ? e.metaKey : e.ctrlKey;\n    if (e.key === \"g\" && modifierKey) {\n      startFullTextSearch(searchText, e.shiftKey);\n      e.preventDefault();\n    }\n  };\n\n  let labelText = \"\";\n  let labelHidden = !results;\n\n  if (results) {\n    if (results.length === 0) {\n      labelText = \"No matches\";\n    } else {\n      const resultsIndex = results.findIndex(node => node.objectId === selectedDomNodeId);\n      labelText = `${resultsIndex + 1} of ${results.length}`;\n    }\n  }\n\n  return (\n    <>\n      <div id=\"inspector-search\" className=\"devtools-searchbox text-themeTextFieldColor\">\n        <input\n          id=\"inspector-searchbox\"\n          className=\"devtools-searchinput\"\n          type=\"input\"\n          placeholder=\"Search HTML\"\n          autoComplete=\"off\"\n          onKeyDown={handleKeyDown}\n          onChange={handleChange}\n          value={searchText}\n        />\n      </div>\n      <div id=\"inspector-searchlabel-container\" hidden={labelHidden}>\n        <div\n          className=\"devtools-separator\"\n          style={{ height: \"calc(var(--theme-toolbar-height) - 8px\" }}\n        ></div>\n        <span id=\"inspector-searchlabel\" className=\"whitespace-nowrap\">\n          {labelText}\n        </span>\n      </div>\n    </>\n  );\n}\n","import { Action } from \"@reduxjs/toolkit\";\n\nimport { trackEvent } from \"ui/utils/telemetry\";\n\nimport { InspectorActiveTab } from \"../reducers\";\n\nexport type SetActiveTabAction = Action<\"set_active_inspector_tab\"> & {\n  activeTab: InspectorActiveTab;\n};\nexport type InspectorAction = SetActiveTabAction;\n\nexport function setActiveTab(activeTab: InspectorActiveTab): SetActiveTabAction {\n  trackEvent(\"inspector.select_tab\", { tab: activeTab });\n  return { type: \"set_active_inspector_tab\", activeTab };\n}\n","import { Attr } from \"@replayio/protocol\";\nimport React, { PureComponent } from \"react\";\nimport { ConnectedProps, connect } from \"react-redux\";\n\nimport { UIState } from \"ui/state\";\n\nimport { NodeInfo } from \"../reducers/markup\";\n\nconst { truncateString } = require(\"devtools/shared/inspector/utils\");\nconst { parseAttribute } = require(\"third-party/node-attribute-parser\");\n\nconst COLLAPSE_DATA_URL_REGEX = /^data.+base64/;\nconst COLLAPSE_DATA_URL_LENGTH = 60;\n\ninterface NodeAttributeProps {\n  attribute: Attr;\n  attributes: Attr[];\n  node: NodeInfo;\n}\n\nclass NodeAttribute extends PureComponent<NodeAttributeProps & PropsFromRedux> {\n  /**\n   * Truncates the given attribute value if it is a base65 data URL or the\n   * collapse attributes pref is enabled.\n   *\n   * @param  {String} value\n   *         Attribute value.\n   * @return {String} truncated attribute value.\n   */\n  truncateValue(value: string) {\n    if (value && value.match(COLLAPSE_DATA_URL_REGEX)) {\n      return truncateString(value, COLLAPSE_DATA_URL_LENGTH);\n    }\n\n    const { collapseAttributes, collapseAttributeLength } = this.props;\n    return collapseAttributes ? truncateString(value, collapseAttributeLength) : value;\n  }\n\n  render() {\n    const { attribute, attributes, node } = this.props;\n    // Parse the attribute value to detect whether there are linkable parts in it\n    const parsedLinksData = parseAttribute(\n      node.namespaceURI,\n      node.tagName,\n      attributes,\n      attribute.name,\n      attribute.value\n    );\n    const values = [];\n\n    for (const token of parsedLinksData) {\n      if (token.type === \"string\") {\n        values.push(this.truncateValue(token.value));\n      } else {\n        values.push(\n          <span key={token.value} className=\"link\" data-link={token.value} data-type={token.type}>\n            {this.truncateValue(token.value)}\n          </span>\n        );\n      }\n    }\n\n    return (\n      <span className=\"attreditor\" data-attr={attribute.name} data-value={attribute.value}>\n        {\" \"}\n        <span className=\"editable\" tabIndex={0}>\n          <span className=\"attr-name theme-fg-color1\">{attribute.name}</span>\n          {'=\"'}\n          <span className=\"attr-value theme-fg-color2\">{values}</span>\n          {'\"'}\n        </span>\n      </span>\n    );\n  }\n}\n\nconst mapStateToProps = (state: UIState) => {\n  return {\n    collapseAttributes: state.markup.collapseAttributes,\n    collapseAttributeLength: state.markup.collapseAttributeLength,\n  };\n};\nconst connector = connect(mapStateToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(NodeAttribute);\n","import { Attr } from \"@replayio/protocol\";\nimport React, { MouseEvent, PureComponent } from \"react\";\n\nimport { NodeInfo } from \"../reducers/markup\";\nimport NodeAttribute from \"./NodeAttribute\";\nimport TextNode from \"./TextNode\";\n\n// Contains only void (without end tag) HTML elements.\nconst HTML_VOID_ELEMENTS = [\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"command\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"keygen\",\n  \"link\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\",\n];\n\n// Contains only valid computed display property types of the node to display in the\n// element markup and their respective title tooltip text.\nconst DISPLAY_TYPES: { [key: string]: string | undefined } = {\n  flex: \"This element behaves like a block element and lays out its content according to the flexbox model. Click to toggle the flexbox overlay for this element.\",\n  \"inline-flex\":\n    \"This element behaves like an inline element and lays out its content according to the flexbox model. Click to toggle the flexbox overlay for this element.\",\n  grid: \"This element behaves like a block element and lays out its content according to the grid model. Click to toggle the grid overlay for this element.\",\n  \"inline-grid\":\n    \"This element behaves like an inline element and lays out its content according to the grid model. Click to toggle the grid overlay for this element.\",\n  subgrid:\n    \"This element lays out its content according to the grid model but defers the definition of its rows and/or columns to its parent grid container.\",\n  \"flow-root\":\n    \"This element generates a block element box that establishes a new block formatting context.\",\n  contents: \"This element doesn’t produce a specific box by itself, but renders its contents.\",\n};\n\ninterface ElementNodeProps {\n  node: NodeInfo;\n  onToggleNodeExpanded: (nodeId: string, isExpanded: boolean) => void;\n}\n\nclass ElementNode extends PureComponent<ElementNodeProps> {\n  constructor(props: ElementNodeProps) {\n    super(props);\n\n    this.onExpandBadgeClick = this.onExpandBadgeClick.bind(this);\n  }\n\n  onExpandBadgeClick(event: MouseEvent) {\n    event.stopPropagation();\n    this.props.onToggleNodeExpanded(this.props.node.id, false);\n  }\n\n  renderAttributes() {\n    const { node } = this.props;\n    const attributes = node.attributes.slice().sort(compareAttributeNames);\n\n    return (\n      <span>\n        {attributes.map(attribute => (\n          <NodeAttribute\n            key={`${node.id}-${attribute.name}`}\n            attribute={attribute}\n            attributes={attributes}\n            node={node}\n          />\n        ))}\n      </span>\n    );\n  }\n\n  renderCloseTag() {\n    const { displayName } = this.props.node;\n\n    if (HTML_VOID_ELEMENTS.includes(displayName)) {\n      return null;\n    }\n\n    return (\n      <span className=\"close\">\n        {\"</\"}\n        <span className=\"tag theme-fg-color3\">{displayName}</span>\n        {\">\"}\n      </span>\n    );\n  }\n\n  renderDisplayBadge() {\n    const { displayType } = this.props.node;\n\n    if (!displayType || !(displayType in DISPLAY_TYPES)) {\n      return null;\n    }\n\n    return (\n      <div className=\"inspector-badge\" title={DISPLAY_TYPES[displayType]}>\n        {displayType}\n      </div>\n    );\n  }\n\n  renderOpenTag() {\n    const { displayName } = this.props.node;\n\n    return (\n      <span className=\"open\">\n        &lt;\n        <span className=\"tag theme-fg-color3\" tabIndex={-1}>\n          {displayName}\n        </span>\n        {this.renderAttributes()}\n        <span className=\"closing-bracket\">&gt;</span>\n      </span>\n    );\n  }\n\n  render() {\n    return (\n      <span className=\"editor\">\n        {this.renderOpenTag()}\n        <span className=\"markup-expand-badge\" onClick={this.onExpandBadgeClick}></span>\n        {this.renderCloseTag()}\n        {this.renderDisplayBadge()}\n      </span>\n    );\n  }\n}\n\n/**\n * A compare function to be used when sorting the array of node attributes. This will\n * prioritize \"id\" and \"class\" attribute names being first and second of the array if the\n * attributes exist.\n */\nfunction compareAttributeNames(a: Attr, b: Attr) {\n  const nameA = a.name.toLowerCase();\n  const nameB = b.name.toLowerCase();\n\n  if (nameA === \"id\" && nameB === \"class\") {\n    return -1;\n  } else if (nameA === \"class\" && nameB === \"id\") {\n    return 1;\n  } else if (nameA === \"id\" || nameA === \"class\") {\n    return -1;\n  } else if (nameB === \"id\" || nameB === \"class\") {\n    return 1;\n  }\n\n  return 0;\n}\n\nexport default ElementNode;\n","import classnames from \"classnames\";\nimport React, { FC } from \"react\";\n\ntype ReadOnlyNodeProps = {\n  displayName: string;\n  isDocType: boolean;\n  pseudoType: boolean;\n};\n\nconst ReadOnlyNode: FC<ReadOnlyNodeProps> = ({ displayName, isDocType, pseudoType }) => (\n  <span className={classnames(\"editor\", { \"comment doctype\": isDocType })}>\n    <span\n      className={classnames(\"tag\", { \"theme-fg-color3\": pseudoType })}\n      tabIndex={isDocType ? -1 : undefined}\n    >\n      {pseudoType ? `::${pseudoType}` : displayName}\n    </span>\n  </span>\n);\n\nexport default ReadOnlyNode;\n","import React, { PureComponent } from \"react\";\n\nimport NodeConstants from \"devtools/shared/dom-node-constants\";\nimport { assert } from \"protocol/utils\";\n\ninterface TextNodeProps {\n  type: number;\n  value: string | undefined;\n}\n\nclass TextNode extends PureComponent<TextNodeProps> {\n  render() {\n    const { type, value } = this.props;\n    assert(typeof value === \"string\", \"value not set in TextNode props\");\n    const isComment = type === NodeConstants.COMMENT_NODE;\n    const isWhiteSpace = !/[^\\s]/.exec(value);\n\n    return (\n      <span className={\"editor\" + (isComment ? \" comment\" : \" text \")}>\n        {isComment ? <span>{\"<!--\"}</span> : null}\n        <pre\n          className={isWhiteSpace ? \"whitespace\" : \"\"}\n          style={{\n            display: \"inline-block\",\n            whiteSpace: \"normal\",\n          }}\n          tabIndex={-1}\n          title={\n            isWhiteSpace\n              ? `Whitespace-only text node: ${value\n                  .replace(/\\n/g, \"⏎\")\n                  .replace(/\\t/g, \"⇥\")\n                  .replace(/ /g, \"◦\")}`\n              : \"\"\n          }\n          data-label=\"whitespace\"\n        >\n          {value}\n        </pre>\n        {isComment ? <span>{\"-->\"}</span> : null}\n      </span>\n    );\n  }\n}\n\nexport default TextNode;\n","import classnames from \"classnames\";\nimport React, { MouseEvent, PureComponent, ReactElement } from \"react\";\nimport { ConnectedProps, connect } from \"react-redux\";\n\nimport NodeConstants from \"devtools/shared/dom-node-constants\";\nimport { assert } from \"protocol/utils\";\nimport { UIState } from \"ui/state\";\n\nimport { setActiveTab } from \"../../actions\";\nimport {\n  collapseNode,\n  expandNode,\n  highlightNode,\n  selectNode,\n  toggleNodeExpanded,\n  unhighlightNode,\n} from \"../actions/markup\";\nimport {\n  getNode,\n  getRootNodeId,\n  getScrollIntoViewNodeId,\n  getSelectedNodeId,\n} from \"../selectors/markup\";\nimport ElementNode from \"./ElementNode\";\nimport ReadOnlyNode from \"./ReadOnlyNode\";\nimport TextNode from \"./TextNode\";\n\ninterface NodeProps {\n  nodeId: string;\n}\n\ntype FinalNodeProps = NodeProps & PropsFromRedux;\n\nclass _Node extends PureComponent<FinalNodeProps> {\n  onExpanderToggle = (event: MouseEvent) => {\n    event.stopPropagation();\n    const { node } = this.props;\n\n    this.props.toggleNodeExpanded(node.id, node.isExpanded);\n  };\n\n  onSelectNodeClick = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    const { node, isSelectedNode } = this.props;\n\n    // Don't reselect the same selected node.\n    if (isSelectedNode) {\n      return;\n    }\n\n    this.props.onSelectNode(node.id);\n  };\n\n  onMouseEnter = () => {\n    this.props.highlightNode(this.props.node.id);\n  };\n\n  onMouseLeave = () => {\n    this.props.unhighlightNode();\n  };\n\n  scrollIntoView = (el: HTMLElement | null) => {\n    if (!el) {\n      return;\n    }\n    const { top, bottom } = el.getBoundingClientRect();\n    const container = document.getElementById(\"markup-box\");\n    assert(container, \"no markup container\");\n    const { top: containerTop, bottom: containerBottom } = container.getBoundingClientRect();\n    if (top < containerTop || bottom > containerBottom) {\n      // Chrome sometimes ignores element.scrollIntoView() here,\n      // calling it with a little delay fixes it\n      setTimeout(() => el.scrollIntoView({ behavior: \"smooth\", block: \"center\" }));\n    }\n  };\n\n  /**\n   * Renders the children of the current node.\n   */\n  renderChildren(): ReactElement | null {\n    const { node } = this.props;\n    const children = node.children || [];\n\n    if (node.isLoadingChildren) {\n      return <span>Loading…</span>;\n    }\n\n    if (!children.length) {\n      return null;\n    }\n\n    return (\n      <ul className=\"children\" role={node.hasChildren ? \"group\" : \"\"}>\n        {children.map(nodeId => (\n          <Node key={nodeId} nodeId={nodeId} />\n        ))}\n      </ul>\n    );\n  }\n\n  /**\n   * Renders the closing tag of the current node.\n   */\n  renderClosingTag() {\n    const { hasChildren, displayName } = this.props.node;\n    // Whether or not the node can be expander - True if node has children and child is\n    // not an inline text node.\n    const canExpand = hasChildren;\n\n    if (!canExpand) {\n      return null;\n    }\n\n    return (\n      <div className=\"tag-line\" role=\"presentation\">\n        <div className=\"tag-state\"></div>\n        <span className=\"close\">\n          {\"</\"}\n          <span className=\"tag theme-fg-color3\">{displayName}</span>\n          {\">\"}\n        </span>\n      </div>\n    );\n  }\n\n  renderComponent() {\n    const { node } = this.props;\n\n    let component = null;\n    if (node.type === NodeConstants.ELEMENT_NODE) {\n      component = <ElementNode node={node} onToggleNodeExpanded={this.props.toggleNodeExpanded} />;\n    } else if (node.type === NodeConstants.COMMENT_NODE || node.type === NodeConstants.TEXT_NODE) {\n      component = <TextNode type={node.type} value={node.value} />;\n    } else {\n      component = (\n        <ReadOnlyNode\n          displayName={node.displayName}\n          isDocType={node.type === NodeConstants.DOCUMENT_TYPE_NODE}\n          pseudoType={!!node.pseudoType}\n        />\n      );\n    }\n\n    return component;\n  }\n\n  renderEventBadge() {\n    if (!this.props.node.hasEventListeners) {\n      return null;\n    }\n\n    return (\n      <button\n        type=\"button\"\n        title=\"Open event listeners\"\n        className=\"inspector-badge interactive relative inline-block w-auto py-0 px-0.5 leading-2\"\n        onClick={() => {\n          this.props.setActiveTab(\"eventsview\");\n        }}\n      >\n        event\n      </button>\n    );\n  }\n\n  render() {\n    const { node, rootNodeId, isSelectedNode, isScrollIntoViewNode } = this.props;\n\n    // Whether or not the node can be expanded - True if node has children and child is\n    // not an inline text node.\n    const canExpand = node.hasChildren;\n    // Whether or not to the show the expanded - True if node can expand and the parent\n    // node is not the root node.\n    const showExpander = canExpand && node.parentNodeId !== rootNodeId;\n\n    return (\n      <li\n        className={classnames(\"child\", {\n          collapsed: !node.isExpanded,\n          \"not-displayed\": !node.isDisplayed,\n          expandable: showExpander,\n        })}\n        role=\"presentation\"\n        onClick={this.onSelectNodeClick}\n      >\n        <div\n          className={\"tag-line\" + (isSelectedNode ? \" selected\" : \"\")}\n          role=\"treeitem\"\n          onMouseEnter={this.onMouseEnter}\n          onMouseLeave={this.onMouseLeave}\n          ref={isScrollIntoViewNode ? this.scrollIntoView : null}\n        >\n          <span\n            className={\"tag-state\" + (isSelectedNode ? \" theme-selected\" : \"\")}\n            role=\"presentation\"\n          ></span>\n          {showExpander ? (\n            <span\n              className={\"theme-twisty expander\" + (node.isExpanded ? \" open\" : \"\")}\n              onClick={this.onExpanderToggle}\n            ></span>\n          ) : null}\n          {this.renderComponent()}\n          {this.renderEventBadge()}\n        </div>\n        {this.renderChildren()}\n        {this.renderClosingTag()}\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = (state: UIState, { nodeId }: NodeProps) => ({\n  node: getNode(state, nodeId)!,\n  rootNodeId: getRootNodeId(state),\n  isSelectedNode: nodeId === getSelectedNodeId(state),\n  isScrollIntoViewNode: nodeId === getScrollIntoViewNodeId(state),\n});\nconst connector = connect(mapStateToProps, {\n  setActiveTab,\n  onSelectNode: selectNode,\n  expandNode,\n  collapseNode,\n  highlightNode,\n  unhighlightNode,\n  toggleNodeExpanded,\n});\ntype PropsFromRedux = ConnectedProps<typeof connector>;\nconst Node = connector(_Node);\n\nexport default Node;\n","import React, { useRef } from \"react\";\nimport { ConnectedProps, connect } from \"react-redux\";\n\nimport { UIState } from \"ui/state\";\nimport { cancelBubbling, preventDefault } from \"ui/utils/key-shortcuts\";\nimport useKeyShortcuts from \"ui/utils/use-key-shortcuts\";\n\nimport {\n  onDownKey,\n  onLeftKey,\n  onPageDownKey,\n  onPageUpKey,\n  onRightKey,\n  onUpKey,\n} from \"../actions/markup\";\nimport { getNode, getRootNodeId } from \"../selectors/markup\";\nimport { MarkupProps } from \"./MarkupApp\";\nimport Node from \"./Node\";\n\nfunction Nodes(props: MarkupProps & PropsFromRedux) {\n  const { node, onUpKey, onDownKey, onLeftKey, onRightKey, onPageUpKey, onPageDownKey } = props;\n\n  const ref = useRef<HTMLUListElement>(null);\n  function onLeftKeyEnsureFocus() {\n    onLeftKey();\n    // the focused element may have disappeared because its parent was collapsed,\n    // ensure that the markup panel still has focus\n    ref.current?.focus();\n  }\n  useKeyShortcuts(\n    {\n      Up: cancelBubbling(preventDefault(onUpKey)),\n      Down: cancelBubbling(preventDefault(onDownKey)),\n      Left: cancelBubbling(preventDefault(onLeftKeyEnsureFocus)),\n      Right: cancelBubbling(preventDefault(onRightKey)),\n      PageUp: cancelBubbling(preventDefault(onPageUpKey)),\n      PageDown: cancelBubbling(preventDefault(onPageDownKey)),\n    },\n    ref\n  );\n\n  if (!node) {\n    return null;\n  }\n\n  return (\n    <ul aria-dropeffect=\"none\" role=\"tree\" tabIndex={0} ref={ref}>\n      {node.children.map(nodeId => (\n        <Node key={nodeId} nodeId={nodeId} />\n      ))}\n    </ul>\n  );\n}\n\nconst mapStateToProps = (state: UIState) => ({\n  node: getNode(state, getRootNodeId(state)),\n});\nconst mapDispatchToProps = {\n  onUpKey,\n  onDownKey,\n  onLeftKey,\n  onRightKey,\n  onPageUpKey,\n  onPageDownKey,\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(Nodes);\n","import { RefObject, useEffect, useRef, useState } from \"react\";\n\nimport KeyShortcuts, { KeyboardEventListener } from \"./key-shortcuts\";\n\nexport default function useKeyShortcuts(\n  initialShortcuts: Record<string, KeyboardEventListener>,\n  ref?: RefObject<EventTarget>\n) {\n  const memoizedShortcutsRef = useRef<KeyShortcuts>(null as unknown as KeyShortcuts);\n  if (memoizedShortcutsRef.current === null) {\n    memoizedShortcutsRef.current = new KeyShortcuts(initialShortcuts);\n  }\n\n  const prevTargetRef = useRef<EventTarget | null>(null);\n\n  // Attach shortcut on-mount and re-attach whenever ref.current changes\n  useEffect(() => {\n    const target = ref ? ref.current : document.body;\n    if (prevTargetRef.current !== target) {\n      if (target) {\n        memoizedShortcutsRef.current.attach(target);\n      } else {\n        memoizedShortcutsRef.current.detach();\n      }\n    }\n\n    prevTargetRef.current = target;\n  });\n\n  // This will run when the component is unmounted\n  useEffect(() => () => memoizedShortcutsRef.current.destroy(), []);\n}\n","import React, { Suspense, useEffect, useRef } from \"react\";\nimport { ConnectedProps, connect } from \"react-redux\";\n\nimport KeyShortcuts from \"devtools/client/shared/key-shortcuts\";\nimport { UIState } from \"ui/state\";\n\nimport { getNodeInfo } from \"../selectors/markup\";\nimport { HTMLBreadcrumbs } from \"./HTMLBreadcrumbs\";\nimport { InspectorSearch } from \"./InspectorSearch\";\nimport Nodes from \"./Nodes\";\n\nconst LoadingProgressBar = require(\"ui/components/shared/LoadingProgressBar\").default;\n\nexport interface MarkupProps {}\n\ntype PropsFromParent = {};\n\nfunction MarkupApp({ markupRootNode }: PropsFromRedux & PropsFromParent) {\n  const isMarkupEmpty = (markupRootNode?.children?.length || 0) == 0;\n\n  const contentRef = useRef<HTMLDivElement>(null);\n  const searchBoxShortcutsRef = useRef<KeyShortcuts | null>(null);\n\n  useEffect(() => {\n    searchBoxShortcutsRef.current = new KeyShortcuts({\n      window: document.defaultView,\n      target: contentRef.current,\n    });\n\n    const key = \"CmdOrCtrl+F\";\n    const listener = (event: KeyboardEvent) => {\n      event.preventDefault();\n      const searchBoxInput =\n        contentRef.current?.querySelector<HTMLInputElement>(\"#inspector-searchbox\");\n\n      searchBoxInput?.focus();\n    };\n\n    searchBoxShortcutsRef.current.on(key, listener);\n\n    return () => {\n      searchBoxShortcutsRef.current?.off(key, listener);\n    };\n  }, []);\n\n  return (\n    <div className=\"devtools-inspector-tab-panel\">\n      <div id=\"inspector-main-content\" className=\"devtools-main-content\" ref={contentRef}>\n        <div id=\"inspector-toolbar\" className=\"devtools-toolbar devtools-input-toolbar\">\n          <InspectorSearch />\n          <div className=\"devtools-separator\" hidden={true}></div>\n          <button\n            id=\"inspector-element-add-button\"\n            className=\"devtools-button\"\n            data-localization=\"title=inspectorAddNode.label\"\n            hidden={true}\n          ></button>\n          <button\n            id=\"inspector-eyedropper-toggle\"\n            className=\"devtools-button\"\n            hidden={true}\n          ></button>\n        </div>\n        <div id=\"markup-box\" className=\"devtools-monospace bg-bodyBgcolor\">\n          <div id=\"markup-root-wrapper\" role=\"presentation\">\n            <div id=\"markup-root\" role=\"presentation\">\n              {<Nodes />}\n            </div>\n          </div>\n          {isMarkupEmpty ? <LoadingProgressBar /> : null}\n        </div>\n        <HTMLBreadcrumbs />\n      </div>\n    </div>\n  );\n}\n\nconst connector = connect((state: UIState) => ({\n  markupRootNode: getNodeInfo(state, state.markup.rootNode!),\n}));\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(MarkupApp);\n","import classnames from \"classnames\";\nimport React, { FC, useState } from \"react\";\n\nimport { DeclarationState } from \"../reducers/rules\";\n\nconst DeclarationValue = require(\"../../rules/components/DeclarationValue\");\n\ntype DeclarationProps = {\n  declaration: DeclarationState;\n  query: string;\n};\n\nexport const Declaration: FC<DeclarationProps> = ({ declaration, query }) => {\n  const [isComputedListExpanded, setIsComputedListExpanded] = useState(false);\n\n  // Only show the computed list expander or the shorthand overridden list if:\n  // - The computed properties are actually different from the current property\n  //   (i.e these are longhands while the current property is the shorthand).\n  // - All of the computed properties have defined values. In case the current property\n  //   value contains CSS variables, then the computed properties will be missing and we\n  //   want to avoid showing them.\n  const hasComputed =\n    declaration.computedProperties.some(c => c.name !== declaration.name) &&\n    !declaration.computedProperties.every(c => !c.value);\n\n  const onComputedExpanderClick = (event: React.MouseEvent) => {\n    event.stopPropagation();\n    setIsComputedListExpanded(!isComputedListExpanded);\n  };\n\n  const computedPropertyList = isComputedListExpanded && (\n    <ul\n      className=\"ruleview-computedlist\"\n      style={{\n        display: \"block\",\n      }}\n    >\n      {declaration.computedProperties.map(({ name, value, isOverridden }) => (\n        <li\n          key={`${name}${value}`}\n          className={classnames(\"ruleview-computed\", { \"ruleview-overridden\": isOverridden })}\n        >\n          <span className=\"ruleview-namecontainer\">\n            <span className=\"ruleview-propertyname theme-fg-color3\">{name}</span>\n            {\": \"}\n          </span>\n          <span className=\"ruleview-propertyvaluecontainer\">\n            <span className=\"ruleview-propertyvalue theme-fg-color1\">{value}</span>\n            {\";\"}\n          </span>\n        </li>\n      ))}\n    </ul>\n  );\n\n  const overriddenComputedProperties = declaration.computedProperties.filter(\n    prop => prop.isOverridden\n  );\n  const shorthandOverriddenList =\n    isComputedListExpanded ||\n    declaration.isOverridden ||\n    !hasComputed ||\n    overriddenComputedProperties.length === 0 ? null : (\n      <ul className=\"ruleview-overridden-items\">\n        {overriddenComputedProperties.map(({ name, value }) => (\n          <li key={`${name}${value}`} className=\"ruleview-overridden-item ruleview-overridden\">\n            <span className=\"ruleview-namecontainer\">\n              <span className=\"ruleview-propertyname theme-fg-color3\">{name}</span>\n              {\": \"}\n            </span>\n            <span className=\"ruleview-propertyvaluecontainer\">\n              <span className=\"ruleview-propertyvaluecontainer\">{value}</span>\n              {\";\"}\n            </span>\n          </li>\n        ))}\n      </ul>\n    );\n\n  const warning = declaration.isDeclarationValid ? null : (\n    <div\n      className=\"ruleview-warning\"\n      title={declaration.isNameValid ? \"Invalid property name\" : \"Invalid property value\"}\n    ></div>\n  );\n\n  const {\n    id,\n    isEnabled,\n    isKnownProperty,\n    isOverridden,\n    isPropertyChanged,\n    name,\n    parsedValue,\n    value,\n  } = declaration;\n\n  const declarationClassName = classnames(\"ruleview-property\", {\n    \"ruleview-matched\": query && (name.match(query) || value.match(query)),\n    \"ruleview-overridden\": !isEnabled || !isKnownProperty || isOverridden,\n    \"ruleview-changed\": isPropertyChanged,\n  });\n\n  return (\n    <li className={declarationClassName} data-declaration-id={id}>\n      <div className=\"ruleview-propertycontainer\">\n        <span className=\"ruleview-namecontainer\">\n          <span id={id} className=\"ruleview-propertyname theme-fg-color3\" tabIndex={0}>\n            {name}\n          </span>\n          {\": \"}\n          <span\n            className={classnames(\"ruleview-expander theme-twisty\", {\n              open: isComputedListExpanded,\n            })}\n            onClick={onComputedExpanderClick}\n            style={{ display: hasComputed ? \"inline-block\" : \"none\" }}\n          ></span>\n        </span>\n        <span className=\"ruleview-propertyvaluecontainer\">\n          <span className=\"ruleview-propertyvalue theme-fg-color1\" tabIndex={0}>\n            <DeclarationValue\n              {...{\n                colorSpanClassName: \"ruleview-color\",\n                colorSwatchClassName: \"ruleview-colorswatch ruleview-swatch\",\n                fontFamilySpanClassName: \"ruleview-font-family\",\n                values: parsedValue,\n              }}\n            />\n          </span>\n          {\";\"}\n        </span>\n        {warning}\n        {/* // this.renderOverriddenFilter() */}\n      </div>\n      {computedPropertyList}\n      {shorthandOverriddenList}\n    </li>\n  );\n};\n","import React, { FC } from \"react\";\n\nimport { Declaration } from \"devtools/client/inspector/rules/components/Declaration\";\n\nimport { DeclarationState } from \"../reducers/rules\";\n\ntype DeclarationsProps = {\n  declarations: DeclarationState[];\n  query: string;\n};\n\nexport const Declarations: FC<DeclarationsProps> = ({ declarations, query }) => {\n  if (declarations.length === 0) {\n    return null;\n  }\n\n  return (\n    <ul className=\"ruleview-propertylist\">\n      {declarations.map(declaration => (\n        <Declaration key={declaration.id} declaration={declaration} query={query} />\n      ))}\n    </ul>\n  );\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n\"use strict\";\n\nconst { createRef, PureComponent } = require(\"react\");\nconst dom = require(\"react-dom-factories\");\nconst PropTypes = require(\"prop-types\");\nconst { PSEUDO_CLASSES } = require(\"third-party/css/constants\");\nconst {\n  parsePseudoClassesAndAttributes,\n  SELECTOR_ATTRIBUTE,\n  SELECTOR_ELEMENT,\n  SELECTOR_PSEUDO_CLASS,\n} = require(\"third-party/css/parsing-utils\");\n\nimport { ELEMENT_STYLE } from \"shared/constants\";\n\nconst Types = require(\"devtools/client/inspector/rules/types\");\n\nexport default class Selector extends PureComponent {\n  static get propTypes() {\n    return {\n      id: PropTypes.string.isRequired,\n      isUserAgentStyle: PropTypes.bool.isRequired,\n      selector: PropTypes.shape(Types.selector).isRequired,\n      type: PropTypes.number.isRequired,\n      query: PropTypes.string.isRequired,\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.selectorRef = createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.props.isUserAgentStyle ||\n      this.props.type === ELEMENT_STYLE ||\n      this.props.type === CSSRule.KEYFRAME_RULE\n    ) {\n      // Selector is not editable.\n      return;\n    }\n  }\n\n  renderSelector() {\n    // Show the text directly for custom selector text (such as the inline \"element\"\n    // style and Keyframes rules).\n    if (this.props.type === ELEMENT_STYLE || this.props.type === CSSRule.KEYFRAME_RULE) {\n      return this.props.selector.selectorText;\n    }\n\n    const { matchedSelectors, selectors } = this.props.selector;\n    const output = [];\n\n    // Go through the CSS rule's selectors and highlight the selectors that actually\n    // matches.\n    for (let i = 0; i < selectors.length; i++) {\n      const selector = selectors[i];\n      // Parse the selector for pseudo classes and attributes, and apply different\n      // CSS classes for the parsed values.\n      // NOTE: parsePseudoClassesAndAttributes is a good candidate for memoization.\n      output.push(\n        dom.span(\n          {\n            className:\n              matchedSelectors.indexOf(selector) > -1\n                ? \"ruleview-selector-matched\"\n                : \"ruleview-selector-unmatched\",\n          },\n          parsePseudoClassesAndAttributes(selector).map(({ type, value }) => {\n            let selectorSpanClass = \"\";\n\n            switch (type) {\n              case SELECTOR_ATTRIBUTE:\n                selectorSpanClass += \" ruleview-selector-attribute\";\n                break;\n              case SELECTOR_ELEMENT:\n                selectorSpanClass += \" ruleview-selector\";\n                break;\n              case SELECTOR_PSEUDO_CLASS:\n                selectorSpanClass += PSEUDO_CLASSES.some(p => value === p)\n                  ? \" ruleview-selector-pseudo-class-lock\"\n                  : \" ruleview-selector-pseudo-class\";\n                break;\n            }\n\n            return dom.span(\n              {\n                key: value,\n                className: selectorSpanClass,\n              },\n              value\n            );\n          })\n        )\n      );\n\n      // Append a comma separator unless this is the last selector.\n      if (i < selectors.length - 1) {\n        output.push(dom.span({ className: \"ruleview-selector-separator\" }, \", \"));\n      }\n    }\n\n    return output;\n  }\n\n  render() {\n    return dom.span(\n      {\n        className:\n          \"ruleview-selectorcontainer\" +\n          (this.props.query && this.props.selector.selectorText.match(this.props.query)\n            ? \" ruleview-selector-matched\"\n            : \"\"),\n        ref: this.selectorRef,\n        tabIndex: 0,\n      },\n      // this.renderSelector()\n      this.props.selector.selectorText\n    );\n  }\n}\n","import React, { FC } from \"react\";\n\nimport { SourceLink as SourceLinkType } from \"../models/rule\";\n\ntype SourceLinkProps = {\n  id: string;\n  isUserAgentStyle: boolean;\n  sourceLink: SourceLinkType;\n  type: number;\n};\n\nexport const SourceLink: FC<SourceLinkProps> = ({ sourceLink: { label, title } }) => {\n  return (\n    <div className=\"ruleview-rule-source theme-link\">\n      <span className=\"ruleview-rule-source-label\" title={title || undefined}>\n        {label}\n      </span>\n    </div>\n  );\n};\n","import classNames from \"classnames\";\nimport React, { FC } from \"react\";\n\nimport { Declarations } from \"devtools/client/inspector/rules/components/Declarations\";\nimport Selector from \"devtools/client/inspector/rules/components/Selector\";\nimport { SourceLink } from \"devtools/client/inspector/rules/components/SourceLink\";\n\nimport { RuleState } from \"../reducers/rules\";\n\ntype RuleProps = {\n  query: string;\n  rule: RuleState;\n};\n\nexport const Rule: FC<RuleProps> = ({\n  query,\n  rule: { id, declarations, sourceLink, selector, type, isUserAgentStyle, isUnmatched },\n}) => {\n  return (\n    <div\n      className={classNames(\"ruleview-rule devtools-monospace\", {\n        unmatched: isUnmatched,\n        uneditable: isUserAgentStyle,\n      })}\n      data-rule-id={id}\n    >\n      <SourceLink\n        id={id}\n        isUserAgentStyle={isUserAgentStyle ?? false}\n        sourceLink={sourceLink}\n        type={type}\n      />\n      <div className=\"ruleview-code\">\n        <div>\n          <Selector {...{ id, isUserAgentStyle, selector, type, query }} />\n          <span className=\"ruleview-ruleopen\">{\" {\"}</span>\n        </div>\n        <Declarations declarations={declarations} query={query} />\n        <div className=\"ruleview-ruleclose\" tabIndex={!isUserAgentStyle ? 0 : -1}>\n          {\"}\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { Rule } from \"devtools/client/inspector/rules/components/Rule\";\n\nimport { RuleState } from \"../reducers/rules\";\n\ntype RulesProps = {\n  rules: RuleState[];\n  query: string;\n  children?: React.ReactNode;\n};\n\nexport const Rules = ({ rules, children, ...rest }: RulesProps) => {\n  return (\n    <>\n      {rules.map(rule => (\n        <Rule key={rule.id} rule={rule} {...rest} />\n      ))}\n    </>\n  );\n};\n","import React, { FC } from \"react\";\n\ntype SearchBoxProps = {\n  query: string;\n  onQueryChange: (query: string) => void;\n};\n\nexport const SearchBox: FC<SearchBoxProps> = ({ query, onQueryChange }) => {\n  return (\n    <div id=\"ruleview-search\" className=\"devtools-searchbox text-themeTextFieldColor\">\n      <input\n        id=\"ruleview-searchbox\"\n        type=\"text\"\n        autoComplete=\"off\"\n        className=\"devtools-filterinput text-themeTextFieldColor\"\n        placeholder=\"Filter Styles\"\n        value={query}\n        onChange={e => onQueryChange(e.target.value)}\n      />\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\n\nimport { SearchBox } from \"devtools/client/inspector/rules/components/SearchBox\";\n\ntype ToolbarProps = {\n  rulesQuery: string;\n  onRulesQueryChange: (query: string) => void;\n};\n\nexport const Toolbar: FC<ToolbarProps> = ({ rulesQuery, onRulesQueryChange }) => {\n  return (\n    <div id=\"ruleview-toolbar-container\">\n      <div id=\"ruleview-toolbar\" className=\"devtools-toolbar devtools-input-toolbar\">\n        <SearchBox query={rulesQuery} onQueryChange={onRulesQueryChange} />\n      </div>\n    </div>\n  );\n};\n","const Services = require(\"devtools/shared/services\");\n\nimport React, { FC, useCallback, useMemo, useState } from \"react\";\n\nimport { Rule } from \"devtools/client/inspector/rules/components/Rule\";\nimport { Rules } from \"devtools/client/inspector/rules/components/Rules\";\nimport { Toolbar } from \"devtools/client/inspector/rules/components/Toolbar\";\nimport Accordion from \"devtools/client/shared/components/Accordion\";\nimport { useAppSelector } from \"ui/setup/hooks\";\n\nimport { RuleInheritance } from \"../models/rule\";\nimport { RuleState } from \"../reducers/rules\";\n\nconst SHOW_PSEUDO_ELEMENTS_PREF = \"devtools.inspector.show_pseudo_elements\";\n\ntype InheritedRule = RuleState & { inheritance: RuleInheritance };\n\nconst NO_RULES_AVAILABLE: RuleState[] = [];\n\nexport const RulesApp: FC = ({}) => {\n  const rules = useAppSelector(state => state.rules.rules ?? NO_RULES_AVAILABLE);\n\n  const [rulesQuery, setRulesQuery] = useState(\"\");\n\n  const renderInheritedRules = useCallback(\n    (rules: InheritedRule[]) => {\n      const output = [];\n      let lastInheritedNodeId;\n\n      for (const rule of rules) {\n        const { inheritedNodeId, inheritedSource } = rule.inheritance;\n\n        if (inheritedNodeId !== lastInheritedNodeId) {\n          lastInheritedNodeId = inheritedNodeId;\n          output.push(\n            <div key={inheritedNodeId} className=\"ruleview-header\">\n              {inheritedSource}\n            </div>\n          );\n        }\n\n        output.push(<Rule key={`${inheritedNodeId}|${rule.id}`} rule={rule} query={rulesQuery} />);\n      }\n\n      return output;\n    },\n    [rulesQuery]\n  );\n\n  const renderStyleRules = useCallback(\n    (rules: RuleState[]) => {\n      return <Rules query={rulesQuery} rules={rules} />;\n    },\n    [rulesQuery]\n  );\n\n  const renderPseudoElementRules = useCallback(\n    (rules: RuleState[]) => {\n      type FCProps<C> = C extends FC<infer P> ? P : never;\n      const componentProps: FCProps<typeof Rules> = {\n        rules,\n        query: rulesQuery,\n      };\n\n      const items = [\n        {\n          component: Rules,\n          componentProps,\n          header: \"Pseudo-elements\",\n          id: \"rules-section-pseudoelement\",\n          opened: Services.prefs.getBoolPref(SHOW_PSEUDO_ELEMENTS_PREF),\n          onToggle: (opened: boolean) => {\n            Services.prefs.setBoolPref(SHOW_PSEUDO_ELEMENTS_PREF, opened);\n          },\n        },\n      ];\n\n      return (\n        <>\n          <Accordion items={items} />\n          <div className=\"ruleview-header\">This Element</div>\n        </>\n      );\n    },\n    [rulesQuery]\n  );\n\n  const rulesElements = useMemo(() => {\n    if (!rulesQuery && rules.length === 0) {\n      return <div className=\"devtools-sidepanel-no-result\">No element selected.</div>;\n    }\n\n    const nonEmptyRules = rules.filter(rule =>\n      rule.declarations.some(declaration => !declaration.isInvisible)\n    );\n\n    const filteredRules = rulesQuery\n      ? nonEmptyRules.filter(\n          rule =>\n            rule.selector.selectors?.some(selector => selector.match(rulesQuery)) ||\n            rule.declarations.some(\n              declaration =>\n                declaration.name.match(rulesQuery) || declaration.value.match(rulesQuery)\n            )\n        )\n      : nonEmptyRules;\n\n    if (!filteredRules.length) {\n      return <div className=\"devtools-sidepanel-no-result\">No matching selector or style.</div>;\n    }\n\n    const inheritedRules: InheritedRule[] = [];\n    const pseudoElementRules: RuleState[] = [];\n    const styleRules: RuleState[] = [];\n\n    for (const rule of filteredRules) {\n      if (rule.inheritance) {\n        inheritedRules.push(rule as InheritedRule);\n      } else if (rule.pseudoElement) {\n        pseudoElementRules.push(rule);\n      } else {\n        styleRules.push(rule);\n      }\n    }\n\n    return (\n      <>\n        {pseudoElementRules.length !== 0 && renderPseudoElementRules(pseudoElementRules)}\n        {styleRules.length !== 0 && renderStyleRules(styleRules)}\n        {inheritedRules.length !== 0 && renderInheritedRules(inheritedRules)}\n      </>\n    );\n  }, [rules, rulesQuery, renderInheritedRules, renderStyleRules, renderPseudoElementRules]);\n\n  return (\n    <div id=\"sidebar-panel-ruleview\" className=\"theme-sidebar inspector-tabpanel\">\n      <Toolbar rulesQuery={rulesQuery} onRulesQueryChange={setRulesQuery} />\n      <div id=\"ruleview-container\" className=\"ruleview\">\n        <div id=\"ruleview-container-focusable\" tabIndex={-1}>\n          {rules ? (\n            rulesElements\n          ) : (\n            <div className=\"devtools-sidepanel-no-result\">Rules not available.</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import cx from \"classnames\";\nimport React, {\n  CSSProperties,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\ntype ResponsiveTabsProps = {\n  className?: string;\n  dropdownButton?: ReactNode;\n  dropdownClassName?: string;\n  dropdownStyle?: CSSProperties;\n  children: ReactElement | ReactElement[];\n  activeIdx: number;\n};\n\nexport const ResponsiveTabs = ({\n  className = \"\",\n  dropdownButton,\n  dropdownClassName,\n  dropdownStyle,\n  children,\n  activeIdx,\n}: ResponsiveTabsProps) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const tabsRef = useRef<HTMLSpanElement[]>([]);\n  const dropdownRef = useRef<HTMLSpanElement>(null);\n\n  const tabs = Array.isArray(children) ? children : [children];\n\n  const [visibleItemsCount, setVisibleItemsCount] = useState(tabs.length);\n  const [indicesOrder, setIndicesOrder] = useState<number[]>(\n    Array.from({ length: tabs.length }).map((_, idx) => idx)\n  );\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const calcTabsVisibilityAndOrder = useCallback(() => {\n    const containerWidth = containerRef.current?.clientWidth ?? 0;\n\n    // we will always close dropdown when resizing\n    setDropdownOpen(false);\n\n    // check if maybe we don't need a dropdown at all\n    let totalTabsWidth = 0;\n    for (const tab of tabsRef.current) {\n      totalTabsWidth += tab?.clientWidth ?? 0;\n    }\n\n    if (totalTabsWidth <= containerWidth) {\n      setVisibleItemsCount(tabs.length);\n      setIndicesOrder(Array.from({ length: tabs.length }).map((_, idx) => idx));\n      return;\n    }\n\n    // we will need a dropdown for sure,\n    // so let's calc which items are visible\n    const dropdownButtonWidth = dropdownRef.current?.clientWidth ?? 0;\n    const activeTabWidth = tabsRef.current[activeIdx].clientWidth ?? 0;\n\n    let visibleCount = 1;\n    let tabIndices: number[] = [activeIdx];\n\n    let runningWidth = dropdownButtonWidth + activeTabWidth;\n    for (let idx = 0; idx < tabs.length; idx++) {\n      if (idx === activeIdx) {\n        continue;\n      }\n\n      runningWidth += tabsRef.current[idx].clientWidth;\n\n      if (runningWidth <= containerWidth) {\n        if (idx < activeIdx) {\n          tabIndices.splice(tabIndices.length - 1, 0, idx);\n        } else {\n          tabIndices.push(idx);\n        }\n        visibleCount++;\n      } else {\n        tabIndices.push(idx);\n      }\n    }\n\n    setVisibleItemsCount(visibleCount);\n    setIndicesOrder(tabIndices);\n  }, [activeIdx, tabs.length]);\n\n  useEffect(() => {\n    calcTabsVisibilityAndOrder();\n\n    const container = containerRef.current;\n    if (!container) {\n      return;\n    }\n\n    const ro = new ResizeObserver(calcTabsVisibilityAndOrder);\n    ro.observe(container);\n\n    return () => {\n      ro.unobserve(container);\n    };\n  }, [calcTabsVisibilityAndOrder]);\n\n  useEffect(() => {\n    const handleClick = (e: any) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener(\"click\", handleClick);\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  }, []);\n\n  const orderedTabs = indicesOrder.map(idx => tabs[idx]);\n  const hasDropdown = visibleItemsCount < tabs.length;\n\n  return (\n    <div className=\"relative max-w-full\">\n      <div className={cx(\"flex overflow-hidden\", className)} ref={containerRef}>\n        {orderedTabs.map((tab, idx) => (\n          <span\n            key={tab.key}\n            ref={ref => (tabsRef.current[indicesOrder[idx]] = ref!)}\n            style={{\n              pointerEvents: idx < visibleItemsCount ? \"auto\" : \"none\",\n              opacity: idx < visibleItemsCount ? 1 : 0,\n            }}\n          >\n            {tab}\n          </span>\n        ))}\n      </div>\n      {hasDropdown && (\n        <span\n          onClick={() => setDropdownOpen(!dropdownOpen)}\n          ref={dropdownRef}\n          className={cx(\"absolute right-0 top-0 flex h-full items-center\", dropdownClassName)}\n        >\n          {dropdownButton ?? (\n            <span className=\"flex h-full cursor-pointer select-none items-center px-1 hover:bg-[color:var(--tab-bgcolor)]\">\n              ···\n            </span>\n          )}\n          {dropdownOpen && (\n            <div\n              className=\"responsive-tabs-dropdown absolute right-0 top-full\"\n              style={dropdownStyle}\n            >\n              {orderedTabs.slice(visibleItemsCount).map(tab => (\n                <div key={tab.key}>{tab}</div>\n              ))}\n            </div>\n          )}\n        </span>\n      )}\n    </div>\n  );\n};\n","// Routines for finding framework-specific event listeners within a pause.\n\nimport { Dictionary } from \"@reduxjs/toolkit\";\nimport type { Location, ObjectPreview, Object as ProtocolObject } from \"@replayio/protocol\";\n\nimport { ThreadFront } from \"protocol/thread\";\nimport { SourceDetails, getPreferredLocation, getSourceDetailsEntities } from \"ui/reducers/sources\";\nimport { UIState } from \"ui/state\";\n\nimport { UIThunkAction } from \"./index\";\n\nexport type FunctionPreview = Required<\n  Pick<ObjectPreview, \"functionName\" | \"functionLocation\" | \"functionParameterNames\">\n>;\n\nexport interface EventListenerWithFunctionInfo {\n  type: string;\n  capture: boolean;\n  functionName: string;\n  locationUrl?: string;\n  location?: Location;\n  functionParameterNames: string[];\n  framework?: string;\n}\n\nexport type FunctionWithPreview = Omit<ProtocolObject, \"preview\"> & {\n  preview: FunctionPreview;\n};\n\n// TS magic: https://stackoverflow.com/a/57837897/62937\ntype DeepRequired<T, P extends string[]> = T extends object\n  ? Omit<T, Extract<keyof T, P[0]>> &\n      Required<{\n        [K in Extract<keyof T, P[0]>]: NonNullable<DeepRequired<T[K], ShiftUnion<P>>>;\n      }>\n  : T;\n\n// Analogues to array.prototype.shift\nexport type Shift<T extends any[]> = ((...t: T) => any) extends (\n  first: any,\n  ...rest: infer Rest\n) => any\n  ? Rest\n  : never;\n\n// use a distributed conditional type here\ntype ShiftUnion<T> = T extends any[] ? Shift<T> : never;\n\nexport type NodeWithPreview = DeepRequired<\n  ProtocolObject,\n  [\"preview\", \"node\"] | [\"preview\", \"getterValues\"]\n>;\n\nconst isFunctionPreview = (obj?: ObjectPreview): obj is FunctionPreview => {\n  return (\n    !!obj && \"functionName\" in obj && \"functionLocation\" in obj && \"functionParameterNames\" in obj\n  );\n};\n\nconst isFunctionWithPreview = (obj: ProtocolObject): obj is FunctionWithPreview => {\n  return obj.className === \"Function\" && isFunctionPreview(obj.preview);\n};\n\nconst REACT_16_EVENT_LISTENER_PROP_KEY = \"__reactEventHandlers$\";\nconst REACT_17_18_EVENT_LISTENER_PROP_KEY = \"__reactProps$\";\n\nconst formatEventListener = (\n  listener: { type: string; capture: boolean },\n  fnPreview: FunctionWithPreview,\n  state: UIState,\n  sourcesById: Dictionary<SourceDetails>,\n  framework?: string\n) => {\n  const { functionLocation, functionName = \"\", functionParameterNames = [] } = fnPreview.preview;\n\n  let location: Location | undefined = undefined;\n  let locationUrl: string | undefined = undefined;\n  if (functionLocation) {\n    location = getPreferredLocation(state.sources, functionLocation);\n\n    locationUrl = functionLocation?.length > 0 ? sourcesById[location.sourceId]?.url : undefined;\n  }\n\n  return {\n    ...listener,\n    location,\n    locationUrl,\n    functionName,\n    functionParameterNames,\n    framework,\n  };\n};\n\nconst eventListenersCacheByPause = new Map<string, Map<string, EventListenerWithFunctionInfo[]>>();\n\nexport function getNodeEventListeners(\n  nodeId: string\n): UIThunkAction<Promise<EventListenerWithFunctionInfo[]>> {\n  return async (dispatch, getState, { ThreadFront, protocolClient, replayClient, objectCache }) => {\n    if (!ThreadFront.currentPause) {\n      return [];\n    }\n    const pauseId = ThreadFront.currentPause.pauseId!;\n\n    if (!eventListenersCacheByPause.has(pauseId)) {\n      eventListenersCacheByPause.set(pauseId, new Map());\n    }\n\n    // Reuse cached event listener entries if we've done this work already\n    const eventListenersCache = eventListenersCacheByPause.get(pauseId)!;\n    const cachedListeners = eventListenersCache.get(nodeId);\n\n    if (cachedListeners) {\n      return cachedListeners;\n    }\n\n    const state = getState();\n    const sourcesById = getSourceDetailsEntities(state);\n\n    // We need to fetch \"basic\" event listeners from the protocol API\n    const { listeners } = await ThreadFront.currentPause.sendMessage(\n      protocolClient.DOM.getEventListeners,\n      {\n        node: nodeId,\n      }\n    );\n\n    // Reformat those entries to add location/name/params data\n    const formattedListenerEntries = listeners.map(listener => {\n      // TODO These entries exist in current testing, but what's fetching them earlier?\n      const listenerHandler = objectCache.getObjectThrows(\n        pauseId,\n        listener.handler\n      ) as FunctionWithPreview;\n\n      return formatEventListener(listener, listenerHandler, state, sourcesById);\n    });\n\n    // Next, we want to find \"framework listeners\". As currently implemented,\n    // this is really just finding React `onThing` events.\n    // React normally points the \"raw\" event handlers like `\"click\"` to a `noop`\n    // function. It's much more useful to see an `onClick` entry that points to\n    // a real file like `Counter.tsx:27` instead.\n\n    // Start by getting \"the JS object that represents this DOM node\".\n    const domNodeObject = (await objectCache.getObjectWithPreviewHelper(\n      replayClient,\n      pauseId,\n      nodeId\n    )) as NodeWithPreview;\n\n    // DOM nodes can have normal JS object properties.\n    const { properties = [] } = domNodeObject.preview;\n\n    // React adds special secret expando properties to DOM nodes to store\n    // metadata about props and component args.\n    // HACK This is groveling into the guts of React and can easily break!\n    const reactEventListenerProperty = properties.find(\n      prop =>\n        prop.name.startsWith(REACT_16_EVENT_LISTENER_PROP_KEY) ||\n        prop.name.startsWith(REACT_17_18_EVENT_LISTENER_PROP_KEY)\n    );\n\n    if (reactEventListenerProperty) {\n      // Assuming we found the magic \"props metadata\" object name/ID,\n      // retrieve the actual object contents.\n      const listenerPropObj = await objectCache.getObjectWithPreviewHelper(\n        replayClient,\n        pauseId,\n        reactEventListenerProperty.object!\n      );\n\n      // The object might contain both primitives and objects/functions.\n      // Narrow down the props fields to just objects (including functions)\n      const objectProperties =\n        listenerPropObj.preview?.properties?.filter(prop => !!prop.object) ?? [];\n\n      if (objectProperties.length) {\n        // Then retrieve full preview data for all of those \"object\" fields\n        const allPropertyPreviews = await Promise.all(\n          objectProperties.map(async prop => ({\n            name: prop.name,\n            value: (await objectCache.getObjectWithPreviewHelper(\n              replayClient,\n              pauseId,\n              prop.object!\n            )) as FunctionWithPreview,\n          }))\n        );\n\n        // Finally, we can filter that down to \"objects\" that are actually functions.\n        // We can assume that any function this far down is a React event handler,\n        // defined in actual user code.\n        const formattedFrameworkListeners = allPropertyPreviews\n          .filter(obj => obj.value.className === \"Function\")\n          .map(obj => {\n            // Add an entry like `{name: \"onClick\", location, locationUrl}\n            return formatEventListener(\n              { type: obj.name, capture: false },\n              obj.value,\n              state,\n              sourcesById,\n              // We're only finding React-specific event handlers atm\n              \"react\"\n            );\n          });\n\n        // Merge the React event entries into the list of all event listeners\n        formattedListenerEntries.push(...formattedFrameworkListeners);\n      }\n    }\n\n    // Cache all that work for later\n    eventListenersCache.set(nodeId, formattedListenerEntries);\n    return formattedListenerEntries;\n  };\n}\n\nexport function logpointGetFrameworkEventListeners(frameId: string, frameworkListeners: string) {\n  const evalText = `\n(array => {\n  const rv = [];\n  for (const maybeEvent of array) {\n    if (!(maybeEvent instanceof Event)) {\n      continue;\n    }\n    for (let node = maybeEvent.target; node; node = node.parentNode) {\n      const props = Object.getOwnPropertyNames(node);\n      const reactProp = props.find(v => v.startsWith(\"__reactEventHandlers$\") || v.startsWith(\"__reactProps$\"));\n      if (!reactProp) {\n        continue;\n      }\n      const reactObj = node[reactProp];\n      const eventProps = Object.getOwnPropertyNames(reactObj);\n      for (const name of eventProps) {\n        const v = reactObj[name];\n        if (typeof v == \"function\") {\n          rv.push(name, v);\n        }\n      }\n    }\n  }\n  return rv;\n})([...arguments])\n`;\n\n  return `\nconst { result: frameworkResult } = sendCommand(\n  \"Pause.evaluateInFrame\",\n  { ${frameId}, expression: \\`${evalText}\\` }\n);\naddPauseData(frameworkResult.data);\n${frameworkListeners} = frameworkResult.returned;\n`;\n}\n","import cx from \"classnames\";\nimport React, { FC, ReactNode, useState } from \"react\";\n\ntype ExpandableItemProps = {\n  header: ReactNode;\n  children?: ReactNode;\n};\n\nexport const ExpandableItem = ({ header, children }: ExpandableItemProps) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const hasChildren = children && React.Children.count(children) > 0;\n\n  return (\n    <div>\n      <div className=\"grid auto-cols-max grid-flow-col items-center gap-1\">\n        <span\n          className={cx(\"theme-twisty bg-center\", {\n            \"opacity-0\": !hasChildren,\n            \"cursor-pointer\": hasChildren,\n            open: isExpanded,\n          })}\n          onClick={() => setIsExpanded(!isExpanded)}\n        ></span>\n        <div>{header}</div>\n      </div>\n      {isExpanded && hasChildren && <div className=\"pl-3\">{children}</div>}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\n\nimport { NodeWithPreview } from \"ui/actions/event-listeners\";\n\ntype XHTMLNodeProps = {\n  node: NodeWithPreview;\n};\n\nconst getAttribute = (node: NodeWithPreview, name: string) => {\n  const attr = node.preview.node.attributes?.find(a => a.name == name);\n  return attr?.value;\n};\n\n// Show a stringified DOM node representation, like:\n// button#someId.class1.class2\nexport const XHTMLNode: FC<XHTMLNodeProps> = ({ node }) => {\n  const { nodeName, pseudoType, attributes } = node.preview.node;\n\n  const id = getAttribute(node, \"id\");\n  const className = getAttribute(node, \"class\") || \"\";\n  const classList = className.split(\" \").filter(Boolean);\n\n  const tagText = `${nodeName.toLowerCase()}${pseudoType ? \"::\" + pseudoType : \"\"}`;\n  const idText = id ? `#${id}` : \"\";\n  // Add a preceding `.` if there are any classes, plus in-between each\n  const classesText = [\"\"].concat(classList).join(\".\");\n\n  return (\n    <span>\n      <span className=\"theme-fg-color3\">{tagText}</span>\n      {idText && (\n        <span\n          style={{\n            color: \"var(--theme-highlight-purple)\",\n          }}\n        >\n          {idText}\n        </span>\n      )}\n      {classesText && <span className=\"theme-fg-color3\">{classesText}</span>}\n    </span>\n  );\n};\n","import React, { useContext, useEffect, useMemo, useState } from \"react\";\n\nimport { getObjectWithPreviewSuspense } from \"bvaughn-architecture-demo/src/suspense/ObjectPreviews\";\nimport { getPauseId } from \"devtools/client/debugger/src/reducers/pause\";\nimport { getSelectedDomNodeId } from \"devtools/client/inspector/markup/reducers/markup\";\nimport { onViewSourceInDebugger } from \"devtools/client/webconsole/actions/toolbox\";\nimport { ReplayClientContext } from \"shared/client/ReplayClientContext\";\nimport {\n  EventListenerWithFunctionInfo,\n  NodeWithPreview,\n  getNodeEventListeners,\n} from \"ui/actions/event-listeners\";\nimport { useAppDispatch } from \"ui/setup/hooks\";\nimport { useAppSelector } from \"ui/setup/hooks\";\n\nimport { ExpandableItem } from \"./ExpandableItem\";\nimport { XHTMLNode } from \"./XHTMLNode\";\n\nexport const EventListenersApp = () => {\n  const [listeners, setListeners] = useState<EventListenerWithFunctionInfo[]>([]);\n  const selectedDomNodeId = useAppSelector(getSelectedDomNodeId);\n  const dispatch = useAppDispatch();\n  const pauseId = useAppSelector(getPauseId);\n  const replayClient = useContext(ReplayClientContext);\n\n  useEffect(() => {\n    if (!selectedDomNodeId) {\n      return;\n    }\n\n    dispatch(getNodeEventListeners(selectedDomNodeId)).then(eventListeners =>\n      setListeners(eventListeners)\n    );\n  }, [selectedDomNodeId, dispatch]);\n\n  const groupedSortedListeners: [string, EventListenerWithFunctionInfo[]][] = useMemo(() => {\n    const groups: Record<string, EventListenerWithFunctionInfo[]> = {};\n    for (const listener of listeners) {\n      if (groups[listener.type] === undefined) {\n        groups[listener.type] = [];\n      }\n\n      groups[listener.type].push(listener);\n    }\n\n    // sort groups of listeners by event type name\n    return Object.entries(groups).sort(([eventA], [eventB]) => {\n      if (eventA < eventB) {\n        return -1;\n      }\n      if (eventA > eventB) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [listeners]);\n\n  if (!pauseId || !selectedDomNodeId) {\n    return null;\n  }\n\n  // Suspend until we have the data for the node, which we _should_\n  const nodeWithPreview = getObjectWithPreviewSuspense(\n    replayClient,\n    pauseId,\n    selectedDomNodeId\n  ) as NodeWithPreview;\n\n  return (\n    <div className=\"h-full overflow-auto\">\n      {listeners.length === 0 ? (\n        <div className=\"devtools-sidepanel-no-result\">No event listeners</div>\n      ) : (\n        groupedSortedListeners.map(([eventType, listeners]) => {\n          const framework = listeners.find(l => !!l.framework)?.framework;\n          // Add either a \"Framework\" icon (like the React logo) or a \"JS\" icon\n          // to the event name expanders in the treeview\n          const header = (\n            <div className=\"flex items-center text-sm\">\n              {eventType}\n              <span className={`img ml-1 ${framework ?? \"javascript\"}`}></span>\n            </div>\n          );\n          return (\n            <div key={eventType} className=\"devtools-monospace\">\n              <ExpandableItem header={header}>\n                {listeners.map(\n                  (\n                    {\n                      functionName,\n                      functionParameterNames,\n                      locationUrl,\n                      location,\n                      capture,\n                      framework,\n                    },\n                    i\n                  ) => {\n                    return (\n                      <ExpandableItem\n                        key={i}\n                        header={\n                          <div className=\"flex gap-2\">\n                            <XHTMLNode node={nodeWithPreview} />\n                            <span>\n                              {location && locationUrl ? (\n                                <span\n                                  className=\"cursor-pointer underline hover:text-gray-500\"\n                                  title=\"Open in Debugger\"\n                                  onClick={() => {\n                                    dispatch(\n                                      onViewSourceInDebugger(\n                                        {\n                                          ...location,\n                                          url: locationUrl,\n                                        },\n                                        true\n                                      )\n                                    );\n                                  }}\n                                >\n                                  {locationUrl.substring(locationUrl.lastIndexOf(\"/\") + 1)}:\n                                  {location.line}\n                                </span>\n                              ) : (\n                                \"[native code]\"\n                              )}\n                            </span>\n                          </div>\n                        }\n                      >\n                        <div className=\"pl-4\">\n                          <div className=\"theme-fg-color3\">\n                            useCapture:{\" \"}\n                            <span className=\"theme-fg-color1\">{capture ? \"true\" : \"false\"}</span>\n                          </div>\n                          <div>\n                            <span className=\"theme-fg-color3\">handler: </span>\n                            <span\n                              className=\"italic\"\n                              style={{\n                                color: \"var(--theme-highlight-lightorange)\",\n                              }}\n                            >\n                              f\n                            </span>{\" \"}\n                            <span className=\"italic\">\n                              {functionName}({functionParameterNames.join(\", \")})\n                            </span>\n                          </div>\n                        </div>\n                      </ExpandableItem>\n                    );\n                  }\n                )}\n              </ExpandableItem>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n","import \"ui/setup/dynamic/inspector\";\nimport classnames from \"classnames\";\nimport React, { FC, ReactNode, useMemo } from \"react\";\n\nimport ComputedApp from \"devtools/client/inspector/computed/components/ComputedApp\";\nimport LayoutApp from \"devtools/client/inspector/layout/components/LayoutApp\";\nimport MarkupApp from \"devtools/client/inspector/markup/components/MarkupApp\";\nimport { prefs } from \"devtools/client/inspector/prefs\";\nimport { RulesApp } from \"devtools/client/inspector/rules/components/RulesApp\";\nimport SplitBox from \"devtools/client/shared/components/splitter/SplitBox\";\nimport { assert } from \"protocol/utils\";\nimport { useAppDispatch, useAppSelector } from \"ui/setup/hooks\";\n\nimport { ResponsiveTabs } from \"../../shared/components/ResponsiveTabs\";\nimport { setActiveTab } from \"../actions\";\nimport { EventListenersApp } from \"../event-listeners/EventListenersApp\";\nimport { InspectorActiveTab } from \"../reducers\";\n\nconst INSPECTOR_TAB_TITLES: Record<InspectorActiveTab, string> = {\n  ruleview: \"Rules\",\n  computedview: \"Computed\",\n  layoutview: \"Layout\",\n  eventsview: \"Event Listeners\",\n} as const;\n\nconst availableTabs: readonly InspectorActiveTab[] = [\n  \"ruleview\",\n  \"layoutview\",\n  \"computedview\",\n  \"eventsview\",\n] as const;\n\nconst InspectorApp: FC = () => {\n  const dispatch = useAppDispatch();\n  const activeTab = useAppSelector(state => state.inspector.activeTab);\n\n  const onSplitboxResize = (width: number) => {\n    prefs.splitSidebarSize = width;\n  };\n\n  const markupView: JSX.Element | undefined = useMemo(() => {\n    return <MarkupApp />;\n  }, []);\n\n  const activePanel: ReactNode = useMemo(() => {\n    switch (activeTab) {\n      case \"ruleview\": {\n        return <RulesApp />;\n      }\n      case \"computedview\": {\n        return <ComputedApp />;\n      }\n      case \"layoutview\": {\n        return <LayoutApp showBoxModelProperties={true} />;\n      }\n      case \"eventsview\": {\n        return <EventListenersApp />;\n      }\n    }\n    assert(\n      false,\n      \"This code should be unreachable (handle all cases within the switch statement).\"\n    );\n  }, [activeTab]);\n\n  return (\n    <div className=\"inspector-responsive-container theme-body inspector\">\n      <div id=\"inspector-splitter-box\">\n        <SplitBox\n          className=\"inspector-sidebar-splitter\"\n          initialSize={`${prefs.splitSidebarSize}px`}\n          minSize=\"20%\"\n          maxSize=\"80%\"\n          onMove={onSplitboxResize}\n          splitterSize={4}\n          endPanelControl={true}\n          startPanel={markupView}\n          endPanel={\n            <div className=\"devtools-inspector-tab-panel\">\n              <div id=\"inspector-sidebar-container\">\n                <div id=\"inspector-sidebar\">\n                  <div className=\"devtools-sidebar-tabs\">\n                    <div className=\"tabs\">\n                      <nav\n                        className=\"tabs-navigation\"\n                        style={{\n                          borderBottom: \"1px solid var(--theme-splitter-color)\",\n                        }}\n                      >\n                        <ResponsiveTabs activeIdx={availableTabs.indexOf(activeTab)}>\n                          {availableTabs.map(panelId => {\n                            const isPanelSelected = activeTab === panelId;\n                            return (\n                              <span\n                                key={panelId}\n                                className={classnames(\"tabs-menu-item\", {\n                                  \"is-active\": isPanelSelected,\n                                })}\n                              >\n                                <span className=\"devtools-tab-line\"></span>\n                                <button\n                                  id={`${panelId}-tab`}\n                                  title={INSPECTOR_TAB_TITLES[panelId]}\n                                  role=\"tab\"\n                                  onClick={() => dispatch(setActiveTab(panelId))}\n                                >\n                                  {INSPECTOR_TAB_TITLES[panelId]}\n                                </button>\n                              </span>\n                            );\n                          })}\n                        </ResponsiveTabs>\n                      </nav>\n                      <div className=\"panels\">\n                        <div className=\"tab-panel-box\" role=\"tabpanel\">\n                          {activePanel}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default InspectorApp;\n","const React = require(\"react\");\nconst PropTypes = require(\"prop-types\");\nconst { COLOR, FONT_FAMILY, URI } = require(\"third-party/css/output-parser\");\n\nconst Color = require(\"devtools/client/inspector/rules/components/value/Color\");\nconst FontFamily = require(\"devtools/client/inspector/rules/components/value/FontFamily\");\nconst Url = require(\"devtools/client/inspector/rules/components/value/Url\");\n\nclass DeclarationValue extends React.PureComponent {\n  static get propTypes() {\n    return {\n      colorSpanClassName: PropTypes.string,\n      colorSwatchClassName: PropTypes.string,\n      fontFamilySpanClassName: PropTypes.string,\n      values: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object]))\n        .isRequired,\n    };\n  }\n\n  render() {\n    return this.props.values.map(v => {\n      if (typeof v === \"string\") {\n        return v;\n      }\n\n      const { type, value } = v;\n\n      switch (type) {\n        case COLOR:\n          return React.createElement(Color, {\n            colorSpanClassName: this.props.colorSpanClassName,\n            colorSwatchClassName: this.props.colorSwatchClassName,\n            key: value,\n            value,\n          });\n        case FONT_FAMILY:\n          return React.createElement(FontFamily, {\n            fontFamilySpanClassName: this.props.fontFamilySpanClassName,\n            key: value,\n            value,\n          });\n        case URI:\n          return React.createElement(Url, {\n            key: value,\n            href: v.href,\n            value,\n          });\n      }\n\n      return value;\n    });\n  }\n}\n\nmodule.exports = DeclarationValue;\n","const { PureComponent } = require(\"react\");\nconst dom = require(\"react-dom-factories\");\nconst PropTypes = require(\"prop-types\");\n\nclass Color extends PureComponent {\n  static get propTypes() {\n    return {\n      colorSpanClassName: PropTypes.string,\n      colorSwatchClassName: PropTypes.string,\n      value: PropTypes.string.isRequired,\n    };\n  }\n\n  render() {\n    const { colorSpanClassName, colorSwatchClassName, value } = this.props;\n\n    return dom.span(\n      { \"data-color\": value },\n      colorSwatchClassName\n        ? dom.span({\n            className: colorSwatchClassName,\n            style: { backgroundColor: value },\n          })\n        : null,\n      colorSpanClassName ? dom.span({ className: colorSpanClassName }, value) : value\n    );\n  }\n}\n\nmodule.exports = Color;\n","const { PureComponent } = require(\"react\");\nconst dom = require(\"react-dom-factories\");\nconst PropTypes = require(\"prop-types\");\n\nclass FontFamily extends PureComponent {\n  static get propTypes() {\n    return {\n      fontFamilySpanClassName: PropTypes.string,\n      value: PropTypes.string.isRequired,\n    };\n  }\n\n  render() {\n    const { fontFamilySpanClassName, value } = this.props;\n    return dom.span({ className: fontFamilySpanClassName }, value);\n  }\n}\n\nmodule.exports = FontFamily;\n","const { PureComponent } = require(\"react\");\nconst dom = require(\"react-dom-factories\");\nconst PropTypes = require(\"prop-types\");\n\nclass Url extends PureComponent {\n  static get propTypes() {\n    return {\n      href: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    };\n  }\n\n  render() {\n    return dom.a(\n      {\n        className: \"theme-link\",\n        href: this.props.href,\n        target: \"_blank\",\n      },\n      this.props.value\n    );\n  }\n}\n\nmodule.exports = Url;\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n\"use strict\";\n\nconst PropTypes = require(\"prop-types\");\n\n/**\n * A CSS class.\n */\nexport const classes = {\n  // The CSS class name.\n  name: PropTypes.string,\n\n  // Whether or not the CSS class is applied.\n  isApplied: PropTypes.bool,\n};\n\n/**\n * A CSS declaration.\n */\nexport const declaration = {\n  // Array of the computed properties for a CSS declaration.\n  computedProperties: PropTypes.arrayOf(\n    PropTypes.shape({\n      // Whether or not the computed property is overridden.\n      isOverridden: PropTypes.bool,\n      // The computed property name.\n      name: PropTypes.string,\n      // The computed priority (either \"important\" or an empty string).\n      priority: PropTypes.string,\n      // The computed property value.\n      value: PropTypes.string,\n    })\n  ),\n\n  // An unique CSS declaration id.\n  id: PropTypes.string,\n\n  // Whether or not the declaration is valid. (Does it make sense for this value\n  // to be assigned to this property name?)\n  isDeclarationValid: PropTypes.bool,\n\n  // Whether or not the declaration is enabled.\n  isEnabled: PropTypes.bool,\n\n  // Whether or not the declaration is invisible. In an inherited rule, only the\n  // inherited declarations are shown and the rest are considered invisible.\n  isInvisible: PropTypes.bool,\n\n  // Whether or not the declaration's property name is known.\n  isKnownProperty: PropTypes.bool,\n\n  // Whether or not the property name is valid.\n  isNameValid: PropTypes.bool,\n\n  // Whether or not the the declaration is overridden.\n  isOverridden: PropTypes.bool,\n\n  // Whether or not the declaration is changed by the user.\n  isPropertyChanged: PropTypes.bool,\n\n  // The declaration's property name.\n  name: PropTypes.string,\n\n  // The declaration's parsed property value.\n  parsedValue: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n\n  // The declaration's priority (either \"important\" or an empty string).\n  priority: PropTypes.string,\n\n  // The declaration's property value.\n  value: PropTypes.string,\n};\n\n/**\n * The pseudo classes redux structure.\n */\nexport const pseudoClasses = {\n  // An object containing the :active pseudo class toggle state.\n  \":active\": PropTypes.shape({\n    // Whether or not the :active pseudo class is checked.\n    isChecked: PropTypes.bool,\n    // Whether or not the :active pseudo class is disabled.\n    isDisabled: PropTypes.bool,\n  }),\n\n  // An object containing the :focus pseudo class toggle state.\n  \":focus\": PropTypes.shape({\n    // Whether or not the :focus pseudo class is checked\n    isChecked: PropTypes.bool,\n    // Whether or not the :focus pseudo class is disabled.\n    isDisabled: PropTypes.bool,\n  }),\n\n  // An object containing the :focus-within pseudo class toggle state.\n  \":focus-within\": PropTypes.shape({\n    // Whether or not the :focus-within pseudo class is checked\n    isChecked: PropTypes.bool,\n    // Whether or not the :focus-within pseudo class is disabled.\n    isDisabled: PropTypes.bool,\n  }),\n\n  // An object containing the :hover pseudo class toggle state.\n  \":hover\": PropTypes.shape({\n    // Whether or not the :hover pseudo class is checked.\n    isChecked: PropTypes.bool,\n    // Whether or not the :hover pseudo class is disabled.\n    isDisabled: PropTypes.bool,\n  }),\n};\n\n/**\n * A CSS selector.\n */\nexport const selector = {\n  // Function that returns a Promise containing an unique CSS selector.\n  getUniqueSelector: PropTypes.func,\n  // Array of the selectors that match the selected element.\n  matchedSelectors: PropTypes.arrayOf(PropTypes.string),\n  // The CSS rule's selector text content.\n  selectorText: PropTypes.string,\n  // Array of the CSS rule's selectors.\n  selectors: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport type Selector = {\n  // Function that returns a Promise containing an unique CSS selector.\n  getUniqueSelector: Function;\n  // Array of the selectors that match the selected element.\n  matchedSelectors: string[];\n  // The CSS rule's selector text content.\n  selectorText: string;\n  // Array of the CSS rule's selectors.\n  selectors: string[];\n};\n\n/**\n * A CSS Rule.\n */\nexport const rule = {\n  // Array of CSS declarations.\n  declarations: PropTypes.arrayOf(PropTypes.shape(declaration)),\n\n  // An unique CSS rule id.\n  id: PropTypes.string,\n\n  // An object containing information about the CSS rule's inheritance.\n  inheritance: PropTypes.shape({\n    // The object id of the NodeFront this rule was inherited from.\n    inheritedNodeId: PropTypes.string,\n    // A header label for where the element this rule was inherited from.\n    inheritedSource: PropTypes.string,\n  }),\n\n  // Whether or not the rule does not match the current selected element.\n  isUnmatched: PropTypes.bool,\n\n  // Whether or not the rule is an user agent style.\n  isUserAgentStyle: PropTypes.bool,\n\n  // // An object containing information about the CSS keyframes rules.\n  // keyframesRule: PropTypes.shape({\n  //   // The actor ID of the keyframes rule.\n  //   id: PropTypes.string,\n  //   // The keyframes rule name.\n  //   keyframesName: PropTypes.string,\n  // }),\n\n  // The pseudo-element keyword used in the rule.\n  pseudoElement: PropTypes.string,\n\n  // An object containing information about the CSS rule's selector.\n  selector: PropTypes.shape(selector),\n\n  // An object containing information about the CSS rule's stylesheet source.\n  sourceLink: PropTypes.shape({\n    // The label used for the stylesheet source\n    label: PropTypes.string,\n    // The title used for the stylesheet source.\n    title: PropTypes.string,\n  }),\n\n  // The type of CSS rule.\n  // See https://developer.mozilla.org/en-US/docs/Web/API/CSSRule#Type_constants\n  type: PropTypes.number,\n};\n\nexport const rules = {\n  highlightedSelector: PropTypes.string.isRequired,\n  rules: PropTypes.arrayOf(PropTypes.shape(rule)),\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at <http://mozilla.org/MPL/2.0/>. */\n\n\"use strict\";\n\nconst { Component, createElement } = require(\"react\");\nconst PropTypes = require(\"prop-types\");\nconst { ul, li, h2, div, span } = require(\"react-dom-factories\");\n\nclass Accordion extends Component {\n  static get propTypes() {\n    return {\n      style: PropTypes.object,\n      // A list of all items to be rendered using an Accordion component.\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          buttons: PropTypes.arrayOf(PropTypes.object),\n          className: PropTypes.string,\n          // Note: This used to only be PropTypes.object, but functions appear\n          // as well when the component is a factory, e.g. BoxModel in\n          // LayoutApp.js. So, this is relaxed, but maybe that's not the right\n          // thing to do. This react stuff is all rather mysterious.\n          component: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n          componentProps: PropTypes.object,\n          contentClassName: PropTypes.string,\n          header: PropTypes.string.isRequired,\n          id: PropTypes.string.isRequired,\n          onToggle: PropTypes.func,\n          opened: PropTypes.bool.isRequired,\n        })\n      ).isRequired,\n    };\n  }\n\n  /**\n   * Add initial data to the state.opened map, and inject new data\n   * when receiving updated props.\n   */\n  static getDerivedStateFromProps(props, state) {\n    const newItems = props.items.filter(({ id }) => typeof state.opened[id] !== \"boolean\");\n\n    if (newItems.length) {\n      const everOpened = { ...state.everOpened };\n      const opened = { ...state.opened };\n      for (const item of newItems) {\n        everOpened[item.id] = item.opened;\n        opened[item.id] = item.opened;\n      }\n      return { everOpened, opened };\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      opened: {},\n    };\n\n    this.onHeaderClick = this.onHeaderClick.bind(this);\n    this.onHeaderKeyDown = this.onHeaderKeyDown.bind(this);\n  }\n\n  /**\n   * @param {Event} event Click event.\n   */\n  onHeaderClick(event) {\n    event.preventDefault();\n    // In the Browser Toolbox's Inspector/Layout view, handleHeaderClick is\n    // called twice unless we call stopPropagation, making the accordion item\n    // open-and-close or close-and-open\n    event.stopPropagation();\n    this.toggleItem(event.currentTarget.parentElement.id);\n  }\n\n  /**\n   * @param {Event} event Keyboard event.\n   * @param {Object} item The item to be collapsed/expanded.\n   */\n  onHeaderKeyDown(event) {\n    if (event.key === \" \" || event.key === \"Enter\") {\n      event.preventDefault();\n      this.toggleItem(event.currentTarget.parentElement.id);\n    }\n  }\n\n  /**\n   * Expand or collapse an accordion list item.\n   * @param  {String} id Id of the item to be collapsed or expanded.\n   */\n  toggleItem(id) {\n    const item = this.props.items.find(x => x.id === id);\n    const opened = !this.state.opened[id];\n    // We could have no item if props just changed\n    if (!item) {\n      return;\n    }\n\n    this.setState({\n      everOpened: {\n        ...this.state.everOpened,\n        [id]: true,\n      },\n      opened: {\n        ...this.state.opened,\n        [id]: opened,\n      },\n    });\n\n    if (typeof item.onToggle === \"function\") {\n      item.onToggle(opened);\n    }\n  }\n\n  renderItem(item) {\n    const {\n      buttons,\n      className = \"\",\n      component,\n      componentProps = {},\n      contentClassName = \"\",\n      header,\n      id,\n    } = item;\n    const headerId = `${id}-header`;\n    const opened = this.state.opened[id];\n    let itemContent;\n\n    // Only render content if the accordion item is open or has been opened once\n    // before. This saves us rendering complex components when users are keeping\n    // them closed (e.g. in Inspector/Layout) or may not open them at all.\n    if (this.state.everOpened[id]) {\n      if (typeof component === \"function\") {\n        itemContent = createElement(component, componentProps);\n      } else if (typeof component === \"object\") {\n        itemContent = component;\n      }\n    }\n\n    return li(\n      {\n        key: id,\n        id,\n        className: `accordion-item ${className}`.trim(),\n        \"aria-labelledby\": headerId,\n      },\n      h2(\n        {\n          id: headerId,\n          className: \"accordion-header\",\n          tabIndex: 0,\n          \"aria-expanded\": opened,\n          // If the header contains buttons, make sure the heading name only\n          // contains the \"header\" text and not the button text\n          \"aria-label\": header,\n          onKeyDown: this.onHeaderKeyDown,\n          onClick: this.onHeaderClick,\n        },\n        span({\n          className: `theme-twisty${opened ? \" open\" : \"\"}`,\n          role: \"presentation\",\n        }),\n        span(\n          {\n            className: \"accordion-header-label\",\n          },\n          header\n        ),\n        buttons &&\n          span(\n            {\n              className: \"accordion-header-buttons\",\n              role: \"presentation\",\n            },\n            buttons\n          )\n      ),\n      div(\n        {\n          className: `accordion-content ${contentClassName}`.trim(),\n          hidden: !opened,\n          role: \"presentation\",\n        },\n        itemContent\n      )\n    );\n  }\n\n  render() {\n    return ul(\n      {\n        className: \"accordion\",\n        style: this.props.style,\n        tabIndex: -1,\n      },\n      this.props.items.map(item => this.renderItem(item))\n    );\n  }\n}\n\nmodule.exports = Accordion;\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n\"use strict\";\n\n/**\n * Truncate the string and add ellipsis to the middle of the string.\n */\nfunction truncateString(str, maxLength) {\n  if (!str || str.length <= maxLength) {\n    return str;\n  }\n\n  return (\n    str.substring(0, Math.ceil(maxLength / 2)) +\n    \"…\" +\n    str.substring(str.length - Math.floor(maxLength / 2))\n  );\n}\n\nexports.truncateString = truncateString;\n"],"names":["TYPE_STRING","TYPE_URI","TYPE_URI_LIST","TYPE_IDREF","TYPE_IDREF_LIST","TYPE_JS_RESOURCE_URI","TYPE_CSS_RESOURCE_URI","HTML_NS","WILDCARD","Symbol","ATTRIBUTE_TYPES","Map","form","namespaceURI","type","body","blockquote","q","del","ins","object","applet","menuitem","label","output","button","fieldset","input","keygen","select","textarea","td","th","a","area","link","isValid","attributes","attributeName","attribute","find","x","name","value","getAttribute","base","img","frame","iframe","html","video","head","script","audio","embed","source","track","parsers","attributeValue","data","splitBy","token","splitChar","buffer","i","length","push","exports","parseAttribute","tagName","attributeType","get","lcTagName","toLowerCase","typeData","Array","isArray","hasNamespace","getType","DeclarationValue","require","MatchedSelector","props","selector","className","overridden","ExternalLink","title","stylesheetURL","tabIndex","stylesheet","dir","colorSpanClassName","colorSwatchClassName","fontFamilySpanClassName","values","parsedValue","classnames","ComputedProperty","property","hidden","dark","isExpanded","toggleExpanded","headerClassName","getHeaderClassName","contentClassName","getContentClassName","twistyClassName","selectors","undefined","getTwistyClassName","onDoubleClick","onClick","map","index","mapDispatchToProps","setComputedPropertyExpanded","connect","state","properties","computed","expandedProperties","search","showBrowserStyles","allPropertiesHidden","renderedProperties","trim","includes","isHidden","has","id","setComputedPropertySearch","setShowBrowserStyles","searchFieldRef","useRef","setSearch","debounce","current","autoComplete","placeholder","ref","onInput","Checkbox","onChange","event","currentTarget","checked","htmlFor","ComputedApp","BoxModelSideLabel","box","direction","textContent","rotate","toString","paraClassnames","connector","selectedNodeId","getSelectedNodeId","highlightNode","unhighlightNode","BoxModelMain","React","layout","this","parseFloat","position","toPrecision","autoMargins","Number","isNaN","target","region","el","parentNode","onHideBoxModelHighlighter","onShowBoxModelHighlighter","preventDefault","render","height","width","sides","borderValues","side","getBorderOrPaddingValue","paddingValues","positionValues","getPositionValue","marginValues","getMarginValue","displayPosition","getDisplayPosition","renderValueLabels","boxName","finalHeight","getHeightValue","finalWidth","getWidthValue","dimensions","contentBox","onMouseOver","onHighlightMouseOver","onMouseOut","layoutInfo","BoxModelProperties","isOpen","setIsOpen","useState","onToggleExpander","stopPropagation","info","style","transform","BoxModelInfo","BoxModel","boxModel","showBoxModelProperties","boxModelProperties","Services","Accordion","BOXMODEL_OPENED_PREF","LayoutApp","getBoxModelSection","component","componentProps","header","opened","prefs","getBoolPref","onToggle","setBoolPref","items","overflow","HTMLBreadcrumbs","dispatch","useAppDispatch","markupNodes","useAppSelector","getMarkupNodes","rootNodeId","getRootNodeId","containerRef","breadcrumbsContent","ids","currentNodeId","nodeHierarchy","node","entities","parentNodeId","reverse","buttonClassnames","selectedBreadcrumb","nodeIdAttribute","attr","nodeClassNames","split","nodeTagLabel","pseudoType","displayName","nodeIdLabel","nodeClassLabel","concat","join","titleText","selectNode","onMouseLeave","useEffect","buttons","querySelectorAll","lastButton","slice","rect","getBoundingClientRect","scroll","left","right","behavior","activeDescendant","role","InspectorSearch","selectedDomNodeId","getSelectedDomNodeId","searchText","setSearchText","activeSearchText","setActiveSearchText","results","setResults","latestSearchTextRef","startFullTextSearch","async","query","reverseSearchDirection","queryBefore","queryRef","getState","ThreadFront","replayClient","protocolClient","pauseIdBefore","pause","searchDOM","stateAfter","pauseIdAfter","currentSelectedNode","markup","selectedNode","currentIndex","findIndex","objectId","nodeSelected","useLayoutEffect","labelText","labelHidden","onKeyDown","e","key","shiftKey","modifierKey","appinfo","OS","metaKey","ctrlKey","setActiveTab","activeTab","trackEvent","tab","truncateString","COLLAPSE_DATA_URL_REGEX","NodeAttribute","PureComponent","truncateValue","match","collapseAttributes","collapseAttributeLength","parsedLinksData","HTML_VOID_ELEMENTS","DISPLAY_TYPES","flex","grid","subgrid","contents","ElementNode","constructor","super","onExpandBadgeClick","bind","onToggleNodeExpanded","renderAttributes","sort","compareAttributeNames","renderCloseTag","renderDisplayBadge","displayType","renderOpenTag","b","nameA","nameB","isDocType","TextNode","assert","isComment","NodeConstants","isWhiteSpace","exec","display","whiteSpace","replace","_Node","toggleNodeExpanded","isSelectedNode","onSelectNode","top","bottom","container","document","getElementById","containerTop","containerBottom","setTimeout","scrollIntoView","block","renderChildren","children","isLoadingChildren","hasChildren","nodeId","Node","renderClosingTag","renderComponent","renderEventBadge","hasEventListeners","isScrollIntoViewNode","showExpander","collapsed","isDisplayed","expandable","onSelectNodeClick","onMouseEnter","onExpanderToggle","getNode","getScrollIntoViewNodeId","expandNode","collapseNode","onUpKey","onDownKey","onLeftKey","onRightKey","onPageUpKey","onPageDownKey","initialShortcuts","memoizedShortcutsRef","KeyShortcuts","prevTargetRef","attach","detach","destroy","useKeyShortcuts","Up","cancelBubbling","Down","Left","focus","Right","PageUp","PageDown","LoadingProgressBar","markupRootNode","getNodeInfo","rootNode","isMarkupEmpty","contentRef","searchBoxShortcutsRef","window","defaultView","listener","searchBoxInput","querySelector","on","off","Declaration","declaration","isComputedListExpanded","setIsComputedListExpanded","hasComputed","computedProperties","some","c","every","computedPropertyList","isOverridden","overriddenComputedProperties","filter","prop","shorthandOverriddenList","warning","isDeclarationValid","isNameValid","isEnabled","isKnownProperty","isPropertyChanged","declarationClassName","open","Declarations","declarations","createRef","dom","PropTypes","PSEUDO_CLASSES","parsePseudoClassesAndAttributes","SELECTOR_ATTRIBUTE","SELECTOR_ELEMENT","SELECTOR_PSEUDO_CLASS","Types","Selector","propTypes","string","isRequired","isUserAgentStyle","bool","shape","number","selectorRef","componentDidMount","ELEMENT_STYLE","CSSRule","KEYFRAME_RULE","renderSelector","selectorText","matchedSelectors","span","indexOf","selectorSpanClass","p","SourceLink","sourceLink","Rule","rule","isUnmatched","classNames","unmatched","uneditable","Rules","rules","rest","SearchBox","onQueryChange","Toolbar","rulesQuery","onRulesQueryChange","SHOW_PSEUDO_ELEMENTS_PREF","NO_RULES_AVAILABLE","RulesApp","setRulesQuery","renderInheritedRules","useCallback","lastInheritedNodeId","inheritedNodeId","inheritedSource","inheritance","renderStyleRules","renderPseudoElementRules","rulesElements","useMemo","nonEmptyRules","isInvisible","filteredRules","inheritedRules","pseudoElementRules","styleRules","pseudoElement","ResponsiveTabs","dropdownButton","dropdownClassName","dropdownStyle","activeIdx","tabsRef","dropdownRef","tabs","visibleItemsCount","setVisibleItemsCount","indicesOrder","setIndicesOrder","from","_","idx","dropdownOpen","setDropdownOpen","calcTabsVisibilityAndOrder","containerWidth","clientWidth","totalTabsWidth","dropdownButtonWidth","activeTabWidth","visibleCount","tabIndices","runningWidth","splice","ro","ResizeObserver","observe","unobserve","handleClick","contains","addEventListener","removeEventListener","orderedTabs","hasDropdown","cx","pointerEvents","opacity","formatEventListener","fnPreview","sourcesById","framework","functionLocation","functionName","functionParameterNames","preview","location","locationUrl","getPreferredLocation","sources","sourceId","url","eventListenersCacheByPause","ExpandableItem","setIsExpanded","XHTMLNode","nodeName","classList","Boolean","tagText","idText","classesText","color","EventListenersApp","listeners","setListeners","pauseId","getPauseId","useContext","ReplayClientContext","objectCache","currentPause","set","eventListenersCache","cachedListeners","getSourceDetailsEntities","sendMessage","DOM","getEventListeners","formattedListenerEntries","listenerHandler","getObjectThrows","handler","domNodeObject","getObjectWithPreviewHelper","reactEventListenerProperty","startsWith","objectProperties","formattedFrameworkListeners","Promise","all","obj","capture","then","eventListeners","groupedSortedListeners","groups","Object","entries","eventA","eventB","nodeWithPreview","getObjectWithPreviewSuspense","eventType","l","onViewSourceInDebugger","substring","lastIndexOf","line","INSPECTOR_TAB_TITLES","ruleview","computedview","layoutview","eventsview","availableTabs","inspector","markupView","activePanel","SplitBox","initialSize","minSize","maxSize","onMove","splitterSize","endPanelControl","startPanel","endPanel","borderBottom","panelId","isPanelSelected","COLOR","FONT_FAMILY","URI","Color","FontFamily","Url","arrayOf","oneOfType","v","createElement","href","module","backgroundColor","classes","isApplied","priority","pseudoClasses","isChecked","isDisabled","getUniqueSelector","func","highlightedSelector","Component","ul","li","h2","div","newItems","everOpened","item","onHeaderClick","onHeaderKeyDown","toggleItem","parentElement","setState","renderItem","headerId","itemContent","str","maxLength","Math","ceil","floor"],"sourceRoot":""}