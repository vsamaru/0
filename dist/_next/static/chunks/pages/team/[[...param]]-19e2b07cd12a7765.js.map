{"version":3,"file":"static/chunks/pages/team/[[...param]]-19e2b07cd12a7765.js","mappings":"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","sources":["webpack://_N_E/./src/ui/components/Library/LibraryNags.tsx","webpack://_N_E/./src/ui/components/Library/LibrarySpinner.tsx","webpack://_N_E/./src/ui/components/Library/Team/TeamContextRoot.tsx","webpack://_N_E/./src/ui/components/Library/Navigation/TeamButton.tsx","webpack://_N_E/./src/ui/components/Library/Navigation/Invitations.tsx","webpack://_N_E/./src/ui/components/Library/Navigation/NewTeamButton.tsx","webpack://_N_E/./src/ui/components/Library/Navigation/Profile.tsx","webpack://_N_E/./src/ui/components/Library/Navigation/Navigation.tsx","webpack://_N_E/./src/ui/components/Library/Team/ParamHandlers/SettingsHandler.tsx","webpack://_N_E/./src/ui/components/Library/Team/ParamHandlers/ParamHandler.tsx","webpack://_N_E/./src/ui/components/shared/LaunchButton.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/FilterContext.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/useFilters.ts","webpack://_N_E/./src/ui/components/Library/Team/View/ViewContextRoot.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/FilterDropdown.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/FilterBar.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/FilterBarContainer.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/Recordings/RecordingListItem/MoveRecordingMenu.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/Recordings/Header/BatchActionDropdown.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/Recordings/Header/TeamTrialEnd.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/Recordings/Header/RecordingsPageViewerHeader.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/Recordings/RecordingListItem/RecordingOptionsDropdown.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/Recordings/RecordingListItem/TestResult.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/Recordings/RecordingListItem/RecordingListItem.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/Recordings/RecordingsError.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/Recordings/Recordings.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/Recordings/RecordingsPageViewer.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/Recordings/NonPendingTeam.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/Recordings/PendingTeam/PendingTeamPrompt.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/Recordings/PendingTeam/PendingTeamScreen.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/Recordings/RecordingsPage.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestRuns/AttributeContainer.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestResults/TestResultRow.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestResults/TestResults.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestResults/TestResultsPage.tsx","webpack://_N_E/./src/ui/hooks/tests.ts","webpack://_N_E/./src/ui/components/Library/Team/View/TestRuns/TestRunsContextRoot.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestRuns/Overview/TestRunOverviewContainerContextType.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestRuns/Overview/TestResultListItem.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestRuns/Overview/RunResults.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestRuns/RunStats.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestRuns/Overview/RunSummary.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestRuns/utils.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestRuns/Overview/TestRunOverviewContent.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestRuns/Overview/TestRunOverviewContextRoot.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestRuns/TestRunListItem.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestRuns/TestRunList.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/TestRuns/TestRunsPage.tsx","webpack://_N_E/./src/ui/components/Library/Team/View/ViewPage.tsx","webpack://_N_E/./src/ui/components/Library/Team/TeamPage.tsx","webpack://_N_E/./src/ui/components/Library/Library.tsx","webpack://_N_E/./src/ui/components/Library/index.tsx","webpack://_N_E/./pages/team/[[...param]].tsx","webpack://_N_E/./src/ui/components/Avatar.tsx","webpack://_N_E/./src/ui/components/Library/LibraryDropdown.tsx","webpack://_N_E/./src/ui/components/Redacted.tsx","webpack://_N_E/./src/ui/components/shared/Base64Image.tsx","webpack://_N_E/./src/ui/components/shared/Icon.tsx","webpack://_N_E/./src/ui/components/shared/Login/Login.tsx","webpack://_N_E/./src/ui/components/shared/Onboarding/index.tsx","webpack://_N_E/./src/ui/components/shared/PortalDropdown.tsx","webpack://_N_E/./src/ui/components/shared/Spinner.tsx","webpack://_N_E/./src/ui/components/shared/TrialEnd.tsx","webpack://_N_E/./src/ui/utils/onboarding.ts","webpack://_N_E/./src/ui/utils/org.ts","webpack://_N_E/?21cc","webpack://_N_E/./src/ui/components/Avatar.module.css","webpack://_N_E/./src/ui/components/Library/Library.module.css"],"sourcesContent":["import { useEffect } from \"react\";\n\nimport { setModal } from \"ui/actions/app\";\nimport hooks from \"ui/hooks\";\nimport { UserInfo } from \"ui/hooks/users\";\nimport { useAppDispatch } from \"ui/setup/hooks\";\nimport { Workspace } from \"ui/types\";\nimport { downloadReplay, firstReplay, singleInvitation } from \"ui/utils/onboarding\";\nimport { trackEvent } from \"ui/utils/telemetry\";\n\nfunction useGetNagPreRequisites() {\n  const { loading: userInfoLoading, ...userInfo } = hooks.useGetUserInfo();\n  const { pendingWorkspaces, loading: pendingWorkspacesLoading } = hooks.useGetPendingWorkspaces();\n  const { workspaces, loading: workspacesLoading } = hooks.useGetNonPendingWorkspaces();\n\n  if (userInfoLoading || pendingWorkspacesLoading || workspacesLoading) {\n    return { loading: true };\n  }\n\n  return { userInfo, pendingWorkspaces, workspaces, loading: false };\n}\n\nfunction NagSwitcher({\n  userInfo,\n  pendingWorkspaces,\n  workspaces,\n}: {\n  userInfo: UserInfo;\n  pendingWorkspaces?: Workspace[];\n  workspaces: Workspace[];\n}) {\n  const dispatch = useAppDispatch();\n  const dismissNag = hooks.useDismissNag();\n\n  useEffect(function handleOnboardingModals() {\n    if (singleInvitation(pendingWorkspaces?.length || 0, workspaces.length)) {\n      trackEvent(\"onboarding.team_invite\");\n      dispatch(setModal(\"single-invite\"));\n    } else if (downloadReplay(userInfo.nags, dismissNag)) {\n      trackEvent(\"onboarding.download_replay_prompt\");\n      dispatch(setModal(\"download-replay\"));\n    } else if (firstReplay(userInfo.nags)) {\n      trackEvent(\"onboarding.demo_replay_prompt\");\n      dispatch(setModal(\"first-replay\"));\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return null;\n}\n\n// The way Nags are done here are _very_ janky and should probably be rewritten. For now,\n// I just carved it off into its own component so that it's isolated from the rest of the\n// Library code.\nexport function LibraryNags() {\n  const { userInfo, pendingWorkspaces, workspaces, loading } = useGetNagPreRequisites();\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <NagSwitcher\n      userInfo={userInfo!}\n      pendingWorkspaces={pendingWorkspaces}\n      workspaces={workspaces!}\n    />\n  );\n}\n","import Spinner from \"../shared/Spinner\";\n\n// This is not the final way for us to indicate that we're loading some data.\n// But for now, I'm using this for all of the Library's loading states so that\n// it's easier to 1) identify them visually, and 2) search for where in the code\n// they all are.\nexport function LibrarySpinner() {\n  return (\n    <div className=\"flex justify-center p-4\">\n      <Spinner className=\"h-4 w-4 animate-spin text-gray-500\" />\n    </div>\n  );\n}\n","import { ReactNode, createContext } from \"react\";\n\nimport { useGetTeamRouteParams } from \"ui/components/Library/Team/utils\";\nimport hooks from \"ui/hooks\";\nimport { useGetWorkspace } from \"ui/hooks/workspaces\";\nimport { Workspace } from \"ui/types\";\n\nimport { LibrarySpinner } from \"../LibrarySpinner\";\n\nexport const MY_LIBRARY_TEAM = { name: \"Your Library\", isTest: false, id: \"me\", databaseId: null };\ntype TeamContainerContextType = {\n  teamId: string;\n  team?: Workspace | typeof MY_LIBRARY_TEAM | null;\n  isPendingTeam?: boolean;\n};\n\nexport const TeamContext = createContext<TeamContainerContextType>(null as any);\n\nexport function TeamContextRoot({ children }: { children: ReactNode }) {\n  const { teamId } = useGetTeamRouteParams();\n  const { workspace, loading: workspaceLoading } = useGetWorkspace(teamId);\n  const { pendingWorkspaces, loading: pendingWorkspacesLoading } = hooks.useGetPendingWorkspaces();\n\n  if (workspaceLoading || pendingWorkspacesLoading || !pendingWorkspaces) {\n    return <LibrarySpinner />;\n  }\n\n  const isPendingTeam = pendingWorkspaces?.some(w => w.id === teamId);\n\n  return (\n    <TeamContext.Provider value={{ teamId, team: workspace, isPendingTeam }}>\n      {children}\n    </TeamContext.Provider>\n  );\n}\n\nexport function MyLibraryContextRoot({ children }: { children: ReactNode }) {\n  const { teamId } = useGetTeamRouteParams();\n\n  return (\n    <TeamContext.Provider value={{ teamId, team: MY_LIBRARY_TEAM, isPendingTeam: false }}>\n      {children}\n    </TeamContext.Provider>\n  );\n}\n","import classNames from \"classnames\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { MouseEvent } from \"react\";\n\nimport { setModal } from \"ui/actions/app\";\nimport { MY_LIBRARY_TEAM } from \"ui/components/Library/Team/TeamContextRoot\";\nimport Icon from \"ui/components/shared/Icon\";\nimport { MY_LIBRARY } from \"ui/components/UploadScreen/libraryConstants\";\nimport { useUpdateDefaultWorkspace } from \"ui/hooks/settings\";\nimport { useAppDispatch } from \"ui/setup/hooks\";\nimport { trackEvent } from \"ui/utils/telemetry\";\n\nimport styles from \"../Library.module.css\";\n\nexport function TeamButton({\n  label,\n  id,\n  isTest,\n  isNew,\n}: {\n  label?: string;\n  id: string | null;\n  isNew?: boolean;\n  isTest?: boolean;\n}) {\n  const router = useRouter();\n  const basePath = `/team/${id}`;\n  const url = `${basePath}/${isTest ? \"runs\" : \"recordings\"}`;\n  const isSelected = router.asPath.includes(basePath);\n  const showSettingsButton = isSelected && id && id !== MY_LIBRARY_TEAM.id && !isNew;\n  const updateDefaultWorkspace = useUpdateDefaultWorkspace();\n\n  const onClick = async () => {\n    if (isNew) {\n      return;\n    }\n\n    await updateDefaultWorkspace({\n      variables: { workspaceId: id === MY_LIBRARY_TEAM.id ? MY_LIBRARY_TEAM.databaseId : id },\n    });\n    await trackEvent(\"team_change\", { workspaceId: id });\n  };\n\n  return (\n    <Link href={url}>\n      <a\n        className={classNames(\n          `${styles.teamRow} group flex flex-row justify-between space-x-2 px-4 py-2 text-left transition duration-200 hover:text-white focus:outline-none`,\n          isSelected ? `${styles.teamRowActive} cursor-auto font-bold` : \"cursor-pointer\"\n        )}\n        onClick={onClick}\n      >\n        <span className=\"overflow-hidden overflow-ellipsis whitespace-pre\">\n          <div className=\"flex\">\n            <LibraryIcon teamType={isTest ? \"tests\" : \"team\"} />\n            {label}\n          </div>\n        </span>\n        {isNew ? (\n          <div className={\"rounded-md bg-primaryAccent px-3 py-0.5 text-xs text-white\"}>New</div>\n        ) : null}\n        {showSettingsButton ? <SettingsButton /> : null}\n      </a>\n    </Link>\n  );\n}\n\nexport function LibraryIcon({ teamType }: { teamType: string }) {\n  return <Icon filename={teamType} size=\"medium\" className=\"mr-1 bg-gray-200\" />;\n}\n\nexport function SettingsButton() {\n  const dispatch = useAppDispatch();\n\n  const onClick = (e: MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    dispatch(setModal(\"workspace-settings\"));\n  };\n\n  return (\n    <button\n      onClick={onClick}\n      className=\"material-icons w-5 text-sm text-gray-200 transition duration-200\"\n    >\n      settings\n    </button>\n  );\n}\n","import sortBy from \"lodash/sortBy\";\n\nimport hooks from \"ui/hooks\";\n\nimport { TeamButton } from \"./TeamButton\";\n\nexport function Invitations() {\n  const { pendingWorkspaces, loading } = hooks.useGetPendingWorkspaces();\n\n  if (loading || !pendingWorkspaces || !pendingWorkspaces.length) {\n    return null;\n  }\n\n  return (\n    <>\n      {sortBy(pendingWorkspaces, \"name\").map(workspace => (\n        <TeamButton id={workspace.id} label={workspace.name} key={workspace.id} isNew />\n      ))}\n    </>\n  );\n}\n","import classNames from \"classnames\";\n\nimport { setModal } from \"ui/actions/app\";\nimport { useAppDispatch } from \"ui/setup/hooks\";\n\nimport styles from \"../Library.module.css\";\n\nexport function NewTeamButton() {\n  const dispatch = useAppDispatch();\n  const onClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch(setModal(\"new-workspace\"));\n  };\n\n  return (\n    <a\n      className={classNames(\n        `${styles.teamRow} group flex flex-row justify-between space-x-2 px-4 py-2 text-left underline transition duration-200 hover:cursor-pointer focus:outline-none`\n      )}\n      onClick={onClick}\n    >\n      Create new team\n    </a>\n  );\n}\n","import React from \"react\";\n\nimport { setModal } from \"ui/actions/app\";\nimport { AvatarImage } from \"ui/components/Avatar\";\nimport { useGetUserInfo } from \"ui/hooks/users\";\nimport { useAppDispatch } from \"ui/setup/hooks\";\n\nexport default function Profile() {\n  const dispatch = useAppDispatch();\n  const { name, picture } = useGetUserInfo();\n\n  const handleSettingsClick = () => {\n    dispatch(setModal(\"settings\"));\n  };\n\n  return (\n    <button className=\"flex flex-row space-x-2 bg-black/20 p-4\" onClick={handleSettingsClick}>\n      <AvatarImage src={picture} className=\"avatar h-8 w-8 rounded-full hover:cursor-pointer\" />\n      <div className=\"flex flex-col\">\n        <div className=\"overflow-hidden overflow-ellipsis whitespace-pre text-left text-sm text-white\">\n          {name}\n        </div>\n        <span className=\"text-left text-xs\">View settings</span>\n      </div>\n    </button>\n  );\n}\n","import hooks from \"ui/hooks\";\nimport { Workspace } from \"ui/types\";\n\nimport { LibrarySpinner } from \"../LibrarySpinner\";\nimport { MY_LIBRARY_TEAM } from \"../Team/TeamContextRoot\";\nimport { Invitations } from \"./Invitations\";\nimport { NewTeamButton } from \"./NewTeamButton\";\nimport Profile from \"./Profile\";\nimport { TeamButton } from \"./TeamButton\";\nimport styles from \"../Library.module.css\";\n\nfunction Teams() {\n  const { workspaces, loading } = hooks.useGetNonPendingWorkspaces();\n\n  if (loading) {\n    return <LibrarySpinner />;\n  }\n\n  return (\n    <>\n      {workspaces.map(w => (\n        <TeamButton label={w.name} key={w.id} id={w.id} isTest={w.isTest} />\n      ))}\n    </>\n  );\n}\n\nexport default function Navigation() {\n  // This corresponds with tailwind colors: thumb is gray-500 and track is gray-800\n  const scrollbarStyle = { scrollbarColor: \"#6B7280 #1F2937\" };\n\n  return (\n    <div className={`flex w-64 flex-shrink-0 flex-col ${styles.navigation}`}>\n      <div className=\"p-4\">\n        <img className=\"h-8 w-8\" src=\"/images/logo.svg\" />\n      </div>\n      <div\n        className=\"library-sidebar flex flex-grow flex-col overflow-auto text-sm\"\n        style={scrollbarStyle}\n      >\n        <div className=\"flex flex-col\">\n          <TeamButton label={MY_LIBRARY_TEAM.name} id={MY_LIBRARY_TEAM.id} />\n          <Invitations />\n          <Teams />\n          <NewTeamButton />\n        </div>\n      </div>\n      <Profile />\n    </div>\n  );\n}\n","import { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\n\nimport { setModal } from \"ui/actions/app\";\nimport { useAppDispatch } from \"ui/setup/hooks\";\n\nexport function SettingsHandler() {\n  const dispatch = useAppDispatch();\n  const router = useRouter();\n\n  useEffect(() => {\n    const {\n      query: { settings },\n    } = router;\n\n    if (settings) {\n      dispatch(setModal(\"workspace-settings\", settings ? { view: settings as string } : null));\n    }\n  }, [dispatch, router]);\n\n  return null;\n}\n","import { useRouter } from \"next/router\";\n\nimport { SettingsHandler } from \"./SettingsHandler\";\n\nexport function ParamHandler() {\n  const { settings } = useRouter().query;\n  return <>{settings ? <SettingsHandler /> : null}</>;\n}\n","import React from \"react\";\nimport { ConnectedProps, connect } from \"react-redux\";\n\nimport * as actions from \"ui/actions/app\";\nimport { trackEvent } from \"ui/utils/telemetry\";\n\nimport { PrimaryButton } from \"../shared/Button\";\n\nfunction ShareButton({ setModal }: PropsFromRedux) {\n  const onClick = () => {\n    trackEvent(\"onboarding.launch_replay\");\n    setModal(\"browser-launch\");\n  };\n\n  if (window.__IS_RECORD_REPLAY_RUNTIME__) {\n    return null;\n  }\n\n  return (\n    <PrimaryButton color=\"blue\" onClick={onClick}>\n      <div className=\"flex flex-row items-center space-x-2\">\n        <div className=\"material-icons\" style={{ fontSize: \"1rem\" }}>\n          open_in_new\n        </div>\n        <div>Launch Replay</div>\n      </div>\n    </PrimaryButton>\n  );\n}\n\nconst connector = connect(null, {\n  setModal: actions.setModal,\n});\ntype PropsFromRedux = ConnectedProps<typeof connector>;\nexport default connector(ShareButton);\n","import { createContext } from \"react\";\n\nexport const FilterContext = createContext<FilterContextType>(null as any);\ntype FilterContextType = {\n  filter: string;\n  displayedString: string;\n  setAppliedText: (str: string) => void;\n  setDisplayedText: (str: string) => void;\n};\n","import { useEffect, useState } from \"react\";\n\nimport { getParams, updateUrlWithParams } from \"ui/utils/environment\";\n\nimport { View } from \"./ViewContextRoot\";\n\ntype Surrounder = {\n  [open: string]: string;\n};\n\nconst SURROUNDERS: Surrounder = {\n  \"'\": \"'\",\n  '\"': '\"',\n  \"[\": \"]\",\n};\n\nconst peekUntil = (input: string, until: string): string | void => {\n  return input.match(new RegExp(`^(.*?${until})`))?.[0];\n};\n\nconst peekNextWord = (input: string): string => {\n  return input.match(new RegExp(`^(\\S+)`))?.[0] ?? \"\";\n};\n\nexport function encodeFilter(str: string) {\n  let encodedStr = \"\";\n  while (str.length > 0) {\n    const [match] = str.match(/^(.*?:)/) || [];\n    if (match) {\n      encodedStr += match;\n      str = str.substring(match.length);\n\n      const nextChar = str.substring(0, 1);\n      if (Object.keys(SURROUNDERS).includes(nextChar)) {\n        const closingChar = SURROUNDERS[nextChar];\n        const valueMatch = peekUntil(str.substring(1), closingChar);\n\n        if (valueMatch) {\n          encodedStr += encodeURIComponent(`${nextChar}${valueMatch}`);\n          str = str.substring(valueMatch.length + 1);\n        } else {\n          encodedStr += str.substring(1);\n          str = \"\";\n        }\n      } else {\n        const nextWord = peekNextWord(str);\n        // const [nextWord] = str.match(/^(\\w+)/) || [];\n        console.log(`nw`, str, nextWord);\n        encodedStr += nextWord;\n        str = str.substring(nextWord.length);\n      }\n    } else {\n      encodedStr += str;\n      str = \"\";\n    }\n  }\n\n  return encodedStr;\n}\n\nconst useFilterString = (str: string, view: View) => {\n  const [appliedString, setAppliedString] = useState(str);\n  const [displayedString, setDisplayedString] = useState(str);\n\n  // Reset the initial string whenever the view changes.\n  useEffect(() => {\n    setAppliedString(str);\n    setDisplayedString(str);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [view]);\n\n  const setDisplayedText = (newStr: string) => {\n    setDisplayedString(newStr);\n  };\n  const setAppliedText = (newStr: string) => {\n    setAppliedString(newStr);\n    setDisplayedString(newStr);\n    updateUrlWithParams({ q: encodeFilter(newStr) });\n  };\n\n  return {\n    appliedString,\n    displayedString,\n    setDisplayedText,\n    setAppliedText,\n  };\n};\n\nexport function useFilters(view: View) {\n  const initialString = decodeURIComponent(getParams().q || \"\");\n  const { appliedString, displayedString, setDisplayedText, setAppliedText } = useFilterString(\n    initialString,\n    view\n  );\n\n  return {\n    displayedString,\n    setDisplayedText,\n    setAppliedText,\n    filter: appliedString,\n  };\n}\n","import { useRouter } from \"next/router\";\nimport { ReactNode, createContext, useContext, useEffect } from \"react\";\n\nimport { useGetTeamRouteParams } from \"ui/components/Library/Team/utils\";\n\nimport { TeamContext } from \"../TeamContextRoot\";\nimport { FilterContext } from \"./FilterContext\";\nimport { useFilters } from \"./useFilters\";\n\ntype ViewContainerContextType = {\n  view: View;\n  setView: (view: View) => void;\n};\n\nexport type View = \"recordings\" | \"results\" | \"runs\";\n\nexport const ViewContext = createContext<ViewContainerContextType>(null as any);\nexport function ViewContextRoot({\n  children,\n  defaultView,\n}: {\n  children: ReactNode;\n  defaultView: string;\n}) {\n  const view = useGetTeamRouteParams().view;\n  const filters = useFilters(view);\n  const router = useRouter();\n  const { teamId } = useContext(TeamContext);\n\n  // Initialize the view to whatever the appropriate default view is for that team.\n  useEffect(() => {\n    if (!view) {\n      router.push(`${router.asPath}/${defaultView}`);\n    }\n  }, [view, router, defaultView]);\n\n  const setView = (view: View) => {\n    router.push(`/team/${teamId}/${view}`);\n  };\n\n  return (\n    <FilterContext.Provider value={filters}>\n      <ViewContext.Provider value={{ view, setView }}>{children}</ViewContext.Provider>\n    </FilterContext.Provider>\n  );\n}\n","import { useContext, useState } from \"react\";\n\nimport { useGetTeamIdFromRoute } from \"ui/components/Library/Team/utils\";\nimport { useGetWorkspace } from \"ui/hooks/workspaces\";\n\nimport PortalDropdown from \"../../../shared/PortalDropdown\";\nimport { Dropdown, DropdownDivider, DropdownItem } from \"../../LibraryDropdown\";\nimport { View, ViewContext } from \"./ViewContextRoot\";\n\nconst daysInSeconds = (days: number) => 1000 * 60 * 60 * 24 * days;\n\nconst viewLabels = {\n  recordings: \"Recordings\",\n  runs: \"Test Runs\",\n  results: \"Test Results\",\n};\n\nexport function ViewOptions({ collapseDropdown }: { collapseDropdown: () => void }) {\n  const workspaceId = useGetTeamIdFromRoute();\n  const { setView, view } = useContext(ViewContext);\n  const { workspace } = useGetWorkspace(workspaceId);\n\n  const handleSetView = (view: View) => {\n    collapseDropdown();\n    setView(view);\n  };\n\n  // Don't show the options if the workspace is not a test workspace.\n  if (!workspace?.isTest) {\n    return null;\n  }\n\n  return (\n    <>\n      <DropdownDivider />\n      {view === \"results\" ? (\n        <DropdownItem onClick={() => handleSetView(\"runs\")}>Show Test Runs</DropdownItem>\n      ) : (\n        <DropdownItem onClick={() => handleSetView(\"results\")}>Show Test Results</DropdownItem>\n      )}\n    </>\n  );\n}\nexport function FilterDropdown() {\n  const [expanded, setExpanded] = useState(false);\n  const { view } = useContext(ViewContext);\n  const buttonLabel = viewLabels[view];\n  const setStringAndCollapseDropdown = (str: string) => {\n    setExpanded(false);\n  };\n  const handleCreatedSince = (days: number) => {\n    const secondsAgo = daysInSeconds(days);\n    const isoString = new Date(new Date().getTime() - secondsAgo).toISOString().substr(0, 10);\n\n    return setStringAndCollapseDropdown(`created:${isoString}`);\n  };\n\n  const button = (\n    <div className=\"flex space-x-2 rounded-md border border-textFieldBorder bg-themeTextFieldBgcolor px-2.5 py-1.5 text-sm text-themeTextFieldColor\">\n      <div className=\"text-sm\">{buttonLabel}</div>\n      <div className=\"material-icons text-sm\">expand_more</div>\n    </div>\n  );\n\n  return (\n    <PortalDropdown\n      buttonContent={button}\n      setExpanded={setExpanded}\n      expanded={expanded}\n      position=\"bottom-right\"\n      distance={0}\n    >\n      <Dropdown menuItemsClassName=\"z-50\">\n        {view === \"recordings\" ? (\n          <>\n            <DropdownItem onClick={() => setStringAndCollapseDropdown(\"\")}>\n              All Replays\n            </DropdownItem>\n            <DropdownItem onClick={() => handleCreatedSince(7)}>Last 7 days</DropdownItem>\n            <DropdownItem onClick={() => setStringAndCollapseDropdown(\"target:node\")}>\n              Node replays\n            </DropdownItem>\n          </>\n        ) : null}\n        <ViewOptions collapseDropdown={() => setExpanded(false)} />\n      </Dropdown>\n    </PortalDropdown>\n  );\n}\n","import React, { ChangeEvent, KeyboardEvent, useContext } from \"react\";\n\nimport { TextInput } from \"../../../shared/Forms\";\nimport { FilterContext } from \"./FilterContext\";\nimport { FilterDropdown } from \"./FilterDropdown\";\nimport { ViewContext } from \"./ViewContextRoot\";\n\nexport function FilterBar() {\n  const { displayedString, setDisplayedText, setAppliedText } = useContext(FilterContext);\n  const { view } = useContext(ViewContext);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setDisplayedText(e.target.value);\n  };\n  const onKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      setAppliedText(e.currentTarget.value);\n    }\n  };\n\n  const showFilterInput = [\"recordings\", \"results\"].includes(view);\n\n  return (\n    <div className=\"relative flex flex-grow items-center space-x-3\">\n      <FilterDropdown />\n      {showFilterInput ? (\n        <div className=\"flex flex-grow\">\n          <TextInput\n            value={displayedString}\n            onChange={onChange}\n            placeholder=\"Search\"\n            onKeyDown={onKeyPress}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import LaunchButton from \"ui/components/shared/LaunchButton\";\n\nimport { FilterBar } from \"./FilterBar\";\nimport styles from \"../../Library.module.css\";\n\nexport function FilterBarContainer() {\n  return (\n    <div className={`flex h-16 flex-row items-center space-x-3 p-4 ${styles.libraryHeader}`}>\n      <FilterBar />\n      <LaunchButton />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { useGetTeamIdFromRoute } from \"ui/components/Library/Team/utils\";\nimport hooks from \"ui/hooks\";\nimport { WorkspaceId } from \"ui/state/app\";\nimport { Workspace } from \"ui/types\";\nimport { subscriptionExpired } from \"ui/utils/workspace\";\n\nimport { DropdownDivider, DropdownItem } from \"../../../../LibraryDropdown\";\n\ntype RecordingOptionsDropdownProps = {\n  onMoveRecording: (targetWorkspaceId: WorkspaceId | null) => void;\n  workspaces: Workspace[];\n  disableLibrary: boolean;\n};\n\nexport default function MoveRecordingMenu({\n  onMoveRecording,\n  workspaces,\n  disableLibrary,\n}: RecordingOptionsDropdownProps) {\n  const currentWorkspaceId = useGetTeamIdFromRoute();\n  const { workspace, loading } = hooks.useGetWorkspace(currentWorkspaceId || \"\");\n\n  const availableWorkspaces = workspaces.filter(w => w.id !== currentWorkspaceId);\n\n  if (\n    availableWorkspaces.length === 0 ||\n    loading ||\n    (workspace && (!workspace?.subscription || subscriptionExpired(workspace)))\n  ) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"px-4 py-2 text-xs font-bold uppercase\">Move to:</div>\n      <DropdownDivider />\n      <div className=\"max-h-48 overflow-y-auto\">\n        {!(currentWorkspaceId === null || disableLibrary) ? (\n          <DropdownItem onClick={() => onMoveRecording(null)}>Your library</DropdownItem>\n        ) : null}\n        {availableWorkspaces.map(({ id, name }) => (\n          <DropdownItem onClick={() => onMoveRecording(id)} key={id}>\n            {name || \"\"}\n          </DropdownItem>\n        ))}\n      </div>\n    </>\n  );\n}\n","import { RecordingId } from \"@replayio/protocol\";\nimport classNames from \"classnames\";\nimport React, { useState } from \"react\";\n\nimport { useGetTeamIdFromRoute } from \"ui/components/Library/Team/utils\";\nimport hooks from \"ui/hooks\";\nimport { WorkspaceId } from \"ui/state/app\";\nimport { Recording } from \"ui/types\";\nimport { useIsPublicEnabled } from \"ui/utils/org\";\n\nimport { DisabledButton, getButtonClasses } from \"../../../../../shared/Button\";\nimport { useConfirm } from \"../../../../../shared/Confirm\";\nimport MaterialIcon from \"../../../../../shared/MaterialIcon\";\nimport PortalDropdown from \"../../../../../shared/PortalDropdown\";\nimport { Dropdown, DropdownItem } from \"../../../../LibraryDropdown\";\nimport MoveRecordingMenu from \"../RecordingListItem/MoveRecordingMenu\";\n\nconst getConfirmOptions = (\n  count: number,\n  firstTitle: string | null | undefined = \"this replay\"\n) => {\n  if (count === 1) {\n    return {\n      message: \"Delete replay?\",\n      description: `This action will permanently delete ${firstTitle}.`,\n      acceptLabel: \"Delete replay\",\n    };\n  }\n\n  return {\n    message: `Delete ${count} replays?`,\n    description: `This action will permanently delete ${count} replays.`,\n    acceptLabel: \"Delete replays\",\n  };\n};\n\ntype BatchActionDropdownProps = {\n  selectedIds: RecordingId[];\n  setSelectedIds: any;\n  recordings: Recording[];\n};\n\nexport default function BatchActionDropdown({\n  selectedIds,\n  setSelectedIds,\n  recordings,\n}: BatchActionDropdownProps) {\n  const currentWorkspaceId = useGetTeamIdFromRoute();\n  const { userId, loading: userIdLoading } = hooks.useGetUserId();\n  const { workspaces, loading: workspacesLoading } = hooks.useGetNonPendingWorkspaces();\n  const [expanded, setExpanded] = useState(false);\n  const isPublicEnabled = useIsPublicEnabled();\n  const updateRecordingWorkspace = hooks.useUpdateRecordingWorkspace();\n  const updateIsPrivate = hooks.useUpdateIsPrivate();\n  const deleteRecording = hooks.useDeleteRecordingFromLibrary();\n  const { confirmDestructive } = useConfirm();\n\n  if (workspacesLoading || userIdLoading) {\n    return null;\n  }\n\n  const setSelectedIdsIsPrivate = (isPrivate: boolean) => {\n    selectedIds.forEach(recordingId => {\n      const recording = recordings.find(recording => recording.id === recordingId);\n      if (recording) {\n        updateIsPrivate(recording.id, isPrivate);\n      }\n    });\n    setSelectedIds([]);\n    setExpanded(false);\n  };\n\n  const deleteSelectedIds = () => {\n    const firstSelectedRecordingTitle = recordings.find(\n      recording => selectedIds[0] === recording.id\n    )?.title;\n\n    confirmDestructive(getConfirmOptions(selectedIds.length, firstSelectedRecordingTitle)).then(\n      confirmed => {\n        if (confirmed) {\n          selectedIds.forEach(recordingId => deleteRecording(recordingId, currentWorkspaceId));\n          setSelectedIds([]);\n        }\n        setExpanded(false);\n      }\n    );\n  };\n\n  const updateRecordings = (targetWorkspaceId: WorkspaceId | null) => {\n    selectedIds.forEach(recordingId =>\n      updateRecordingWorkspace(recordingId, currentWorkspaceId, targetWorkspaceId)\n    );\n    setSelectedIds([]);\n    setExpanded(false);\n  };\n\n  if (!selectedIds.length) {\n    return (\n      <DisabledButton className=\"space-x-1 leading-4\">\n        <MaterialIcon outlined className=\"font-bold\" iconSize=\"sm\">\n          expand_more\n        </MaterialIcon>\n        <span>{`${selectedIds.length} item${selectedIds.length > 1 ? \"s\" : \"\"} selected`}</span>\n      </DisabledButton>\n    );\n  }\n\n  const buttonClasses = classNames(\"bg-white\", getButtonClasses(\"blue\", \"secondary\", \"md\"));\n  const button = (\n    <span className={\"flex flex-row items-center space-x-1 leading-4 text-primaryAccent\"}>\n      <MaterialIcon outlined className=\"font-bold\" iconSize=\"sm\">\n        expand_more\n      </MaterialIcon>\n      <span>{`${selectedIds.length} item${selectedIds.length > 1 ? \"s\" : \"\"} selected`}</span>\n    </span>\n  );\n  // Disable moving the selected recordings to the library if the user is not the author of\n  // all the selected recordings.\n  const enableLibrary = selectedIds\n    .map(id => recordings.find(r => r.id === id))\n    .every(recording => userId === recording?.user?.id);\n\n  return (\n    <PortalDropdown\n      buttonContent={button}\n      buttonStyle={buttonClasses}\n      setExpanded={setExpanded}\n      expanded={expanded}\n      distance={0}\n    >\n      <Dropdown menuItemsClassName=\"z-50\">\n        {isPublicEnabled ? (\n          <>\n            <DropdownItem onClick={() => setSelectedIdsIsPrivate(true)}>Make private</DropdownItem>\n            <DropdownItem onClick={() => setSelectedIdsIsPrivate(false)}>Make public</DropdownItem>\n          </>\n        ) : null}\n        <DropdownItem onClick={deleteSelectedIds}>{`Delete ${selectedIds.length} item${\n          selectedIds.length > 1 ? \"s\" : \"\"\n        }`}</DropdownItem>\n        <MoveRecordingMenu\n          workspaces={workspaces}\n          onMoveRecording={updateRecordings}\n          disableLibrary={!enableLibrary}\n        />\n      </Dropdown>\n    </PortalDropdown>\n  );\n}\n","import { useRouter } from \"next/router\";\nimport React from \"react\";\n\nimport { setModal } from \"ui/actions/app\";\nimport hooks from \"ui/hooks\";\nimport { useAppDispatch } from \"ui/setup/hooks\";\nimport { subscriptionEndsIn } from \"ui/utils/workspace\";\n\nimport { TrialEnd } from \"../../../../../shared/TrialEnd\";\n\nexport default function TeamTrialEnd({ currentWorkspaceId }: { currentWorkspaceId: string }) {\n  const { workspaces, loading } = hooks.useGetNonPendingWorkspaces();\n  const dispatch = useAppDispatch();\n  const { members } = hooks.useGetWorkspaceMembers(currentWorkspaceId);\n  const router = useRouter();\n  const { userId: localUserId } = hooks.useGetUserId();\n\n  if (loading) {\n    return null;\n  }\n\n  const workspace = workspaces.find(w => w.id === currentWorkspaceId);\n\n  if (!workspace?.subscription?.trialEnds) {\n    return null;\n  }\n\n  const roles = members?.find(m => m.userId === localUserId)?.roles;\n  const isAdmin = roles?.includes(\"admin\") || false;\n  const onClick = isAdmin\n    ? () => {\n        router.push(`/team/${currentWorkspaceId}/settings/billing`);\n        dispatch(setModal(\"workspace-settings\"));\n      }\n    : undefined;\n\n  const expiresIn = subscriptionEndsIn(workspace);\n\n  return (\n    <TrialEnd\n      expiresIn={expiresIn}\n      color=\"yellow\"\n      className=\"cursor-pointer py-2\"\n      onClick={onClick}\n    />\n  );\n}\n","import { useRouter } from \"next/router\";\nimport React from \"react\";\n\nimport { setModal } from \"ui/actions/app\";\nimport { MY_LIBRARY_TEAM } from \"ui/components/Library/Team/TeamContextRoot\";\nimport { useGetTeamIdFromRoute } from \"ui/components/Library/Team/utils\";\nimport hooks from \"ui/hooks\";\nimport { useAppDispatch } from \"ui/setup/hooks\";\nimport { Recording } from \"ui/types\";\nimport { Workspace } from \"ui/types\";\n\nimport { PrimaryButton, SecondaryButton } from \"../../../../../shared/Button\";\nimport BatchActionDropdown from \"./BatchActionDropdown\";\nimport TeamTrialEnd from \"./TeamTrialEnd\";\nimport styles from \"../../../../Library.module.css\";\n\nfunction ViewerHeaderActions({\n  isEditing,\n  setIsEditing,\n  setSelectedIds,\n  selectedIds,\n  recordings,\n  handleDoneEditing,\n}: {\n  recordings: Recording[];\n  selectedIds: string[];\n  setSelectedIds: (ids: string[]) => void;\n  isEditing: boolean;\n  setIsEditing: (value: boolean) => void;\n  handleDoneEditing: () => void;\n}) {\n  const dispatch = useAppDispatch();\n  const router = useRouter();\n\n  if (isEditing) {\n    return (\n      <>\n        <BatchActionDropdown\n          setSelectedIds={setSelectedIds}\n          selectedIds={selectedIds}\n          recordings={recordings}\n        />\n        <PrimaryButton color=\"blue\" onClick={handleDoneEditing}>\n          Done\n        </PrimaryButton>\n      </>\n    );\n  }\n\n  const launchWorkspaceSettings = () => {\n    dispatch(setModal(\"workspace-settings\"));\n  };\n\n  const isLibrary = router.asPath.includes(`/team/${MY_LIBRARY_TEAM.id}`);\n\n  return (\n    <>\n      {!isLibrary ? (\n        <SecondaryButton\n          className={styles.editButton}\n          color=\"blue\"\n          onClick={() => launchWorkspaceSettings()}\n        >\n          Add team member\n        </SecondaryButton>\n      ) : (\n        <></>\n      )}\n\n      {recordings.length != 0 ? (\n        <>\n          <SecondaryButton\n            className={styles.editButton}\n            color=\"blue\"\n            onClick={() => setIsEditing(true)}\n          >\n            Edit\n          </SecondaryButton>\n        </>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default function ViewerHeader({\n  recordings,\n  selectedIds,\n  setSelectedIds,\n  handleDoneEditing,\n  workspaceName,\n  isEditing,\n  setIsEditing,\n}: {\n  recordings: Recording[];\n  selectedIds: string[];\n  setSelectedIds: (ids: string[]) => void;\n  handleDoneEditing: () => void;\n  workspaceName: string | React.ReactNode;\n  isEditing: boolean;\n  setIsEditing: (value: boolean) => void;\n}) {\n  const currentWorkspaceId = useGetTeamIdFromRoute();\n\n  const HeaderLeft = (\n    <ViewerHeaderLeft>\n      <span className={styles.workspaceName}>{workspaceName}</span>\n      <span className={styles.workspaceName}>\n        {recordings.length != 0 ? <>({recordings.length})</> : <></>}\n      </span>\n    </ViewerHeaderLeft>\n  );\n\n  return (\n    <div className={`flex flex-row items-center justify-between ${styles.libraryHeaderButton}`}>\n      {HeaderLeft}\n      <div className=\"flex flex-row items-center space-x-3\">\n        {currentWorkspaceId ? <TeamTrialEnd currentWorkspaceId={currentWorkspaceId} /> : null}\n        <ViewerHeaderActions\n          recordings={recordings}\n          selectedIds={selectedIds}\n          setSelectedIds={setSelectedIds}\n          handleDoneEditing={handleDoneEditing}\n          isEditing={isEditing}\n          setIsEditing={setIsEditing}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport function ViewerHeaderLeft({ children }: { children: React.ReactNode }) {\n  return (\n    <div\n      className={`flex flex-row items-center space-x-2 text-2xl font-semibold ${styles.libraryHeaderText}`}\n    >\n      {children}\n    </div>\n  );\n}\n","import { RecordingId } from \"@replayio/protocol\";\nimport classNames from \"classnames\";\nimport React, { useState } from \"react\";\n\nimport { setModal } from \"ui/actions/app\";\nimport { useGetTeamIdFromRoute } from \"ui/components/Library/Team/utils\";\nimport hooks from \"ui/hooks\";\nimport { useGetUserPermissions } from \"ui/hooks/users\";\nimport { useAppDispatch } from \"ui/setup/hooks\";\nimport { WorkspaceId } from \"ui/state/app\";\nimport { Recording } from \"ui/types\";\nimport { useIsPublicEnabled } from \"ui/utils/org\";\n\nimport { useConfirm } from \"../../../../../shared/Confirm\";\nimport MaterialIcon from \"../../../../../shared/MaterialIcon\";\nimport PortalDropdown from \"../../../../../shared/PortalDropdown\";\nimport { Dropdown, DropdownItem } from \"../../../../LibraryDropdown\";\nimport MoveRecordingMenu from \"./MoveRecordingMenu\";\n\nfunction DeleteOption({\n  onOptionClick,\n  recording,\n}: {\n  onOptionClick: () => void;\n  recording: Recording;\n}) {\n  const currentWorkspaceId = useGetTeamIdFromRoute();\n  const { confirmDestructive } = useConfirm();\n  const deleteRecording = hooks.useDeleteRecordingFromLibrary();\n\n  const onDeleteRecording = (recordingId: RecordingId) => {\n    onOptionClick();\n\n    confirmDestructive({\n      message: `Delete ${recording.title}?`,\n      description:\n        \"This action will permanently delete this replay. \\n\\nAre you sure you want to proceed?\",\n      acceptLabel: \"Delete replay\",\n    }).then(confirmed => {\n      if (confirmed) {\n        deleteRecording(recordingId, currentWorkspaceId);\n      }\n    });\n  };\n\n  return <DropdownItem onClick={() => onDeleteRecording(recording.id)}>Delete</DropdownItem>;\n}\nfunction RenameOption({\n  onOptionClick,\n  recording,\n}: {\n  onOptionClick: () => void;\n  recording: Recording;\n}) {\n  const dispatch = useAppDispatch();\n  const isPublicEnabled = useIsPublicEnabled();\n\n  if (!isPublicEnabled) {\n    return null;\n  }\n\n  const onRename = () => {\n    const modalOptions = { recordingId: recording.id, title: recording.title || \"\" };\n    dispatch(setModal(\"rename-replay\", modalOptions));\n    onOptionClick();\n  };\n\n  return <DropdownItem onClick={() => onRename()}>Rename</DropdownItem>;\n}\nfunction TogglePrivacyOption({\n  onOptionClick,\n  recording,\n}: {\n  onOptionClick: () => void;\n  recording: Recording;\n}) {\n  const [isPrivate, setIsPrivate] = useState(recording.private);\n  const isPublicEnabled = useIsPublicEnabled();\n  const updateIsPrivate = hooks.useUpdateIsPrivate();\n\n  const toggleIsPrivate = () => {\n    setIsPrivate(!isPrivate);\n    updateIsPrivate(recording.id, !isPrivate);\n    onOptionClick();\n  };\n\n  if (!isPublicEnabled) {\n    return null;\n  }\n\n  return (\n    <DropdownItem onClick={toggleIsPrivate}>{`Make ${\n      isPrivate ? \"public\" : \"private\"\n    }`}</DropdownItem>\n  );\n}\nfunction ShareOption({\n  onOptionClick,\n  recording,\n}: {\n  onOptionClick: () => void;\n  recording: Recording;\n}) {\n  const dispatch = useAppDispatch();\n  const handleShareClick = () => {\n    dispatch(setModal(\"sharing\", { recordingId: recording.id }));\n    onOptionClick();\n  };\n\n  return <DropdownItem onClick={handleShareClick}>Share</DropdownItem>;\n}\nfunction MoveRecordingOption({\n  onOptionClick,\n  recording,\n}: {\n  onOptionClick: () => void;\n  recording: Recording;\n}) {\n  const { permissions } = useGetUserPermissions(recording);\n  const { workspaces, loading } = hooks.useGetNonPendingWorkspaces();\n  const updateRecordingWorkspace = hooks.useUpdateRecordingWorkspace();\n  const currentWorkspaceId = useGetTeamIdFromRoute();\n\n  const updateRecording = (targetWorkspaceId: WorkspaceId | null) => {\n    updateRecordingWorkspace(recording.id, currentWorkspaceId, targetWorkspaceId);\n    onOptionClick();\n  };\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <MoveRecordingMenu\n      workspaces={workspaces}\n      onMoveRecording={updateRecording}\n      disableLibrary={!permissions.moveToLibrary}\n    />\n  );\n}\n\nexport default function RecordingOptionsDropdown({ recording }: { recording: Recording }) {\n  const [expanded, setExpanded] = useState(false);\n  const { loading, permissions } = useGetUserPermissions(recording);\n\n  if (loading) {\n    return null;\n  }\n\n  const button = (\n    <MaterialIcon\n      outlined\n      className={classNames(\n        expanded ? \"opacity-100\" : \"\",\n        \"h-4 w-4 text-gray-400 opacity-0 hover:text-primaryAccentHover group-hover:opacity-100\"\n      )}\n    >\n      more_vert\n    </MaterialIcon>\n  );\n  const onOptionClick = () => setExpanded(false);\n\n  return (\n    <PortalDropdown\n      buttonContent={button}\n      setExpanded={setExpanded}\n      expanded={expanded}\n      buttonStyle=\"\"\n      distance={0}\n    >\n      <Dropdown>\n        {permissions.rename && <RenameOption onOptionClick={onOptionClick} recording={recording} />}\n        {permissions.delete && <DeleteOption onOptionClick={onOptionClick} recording={recording} />}\n        {permissions.privacy && (\n          <TogglePrivacyOption onOptionClick={onOptionClick} recording={recording} />\n        )}\n        <ShareOption onOptionClick={onOptionClick} recording={recording} />\n        {permissions.move && (\n          <MoveRecordingOption onOptionClick={onOptionClick} recording={recording} />\n        )}\n      </Dropdown>\n    </PortalDropdown>\n  );\n}\n","import MaterialIcon from \"../../../../../shared/MaterialIcon\";\n\nexport function TestResult({ result }: { result?: \"passed\" | \"failed\" | \"timedOut\" }) {\n  if (result === \"passed\") {\n    return (\n      <div className=\"flex text-green-500\">\n        <MaterialIcon>check_circle</MaterialIcon>\n      </div>\n    );\n  } else if (result === \"failed\") {\n    return (\n      <div className=\"flex text-red-500\">\n        <MaterialIcon>error</MaterialIcon>\n      </div>\n    );\n  } else if (result === \"timedOut\") {\n    // TODO: Add a timeout icon\n    return null;\n  }\n\n  return null;\n}\n","import { RecordingId } from \"@replayio/protocol\";\nimport formatDate from \"date-fns/format\";\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\nimport React from \"react\";\nimport LazyLoad from \"react-lazyload\";\n\nimport hooks from \"ui/hooks\";\nimport { useGetUserPermissions } from \"ui/hooks/users\";\nimport { Recording } from \"ui/types\";\nimport { getDisplayedUrl } from \"ui/utils/environment\";\nimport { getRecordingURL } from \"ui/utils/recording\";\n\nimport { Redacted } from \"../../../../../Redacted\";\nimport RecordingOptionsDropdown from \"./RecordingOptionsDropdown\";\nimport { TestResult } from \"./TestResult\";\nimport styles from \"../../../../Library.module.css\";\n\nexport function getDurationString(durationMs: number | null | undefined) {\n  if (typeof durationMs !== \"number\") {\n    return \"\";\n  }\n  const seconds = Math.round(durationMs / 1000);\n  return `${seconds} sec`;\n}\n\nfunction shortenRelativeDate(date: string) {\n  return date\n    .replace(\"about\", \"\")\n    .replace(\" hours\", \"h\")\n    .replace(\" hour\", \"h\")\n    .replace(\" days\", \"d\")\n    .replace(\" day\", \"d\")\n    .replace(\" minutes\", \"m\")\n    .replace(\" minute\", \"m\")\n    .replace(\" seconds\", \"s\")\n    .replace(\" second\", \"s\")\n    .replace(\"less than am\", \"1m\");\n}\n\nexport function getTruncatedRelativeDate(date: string) {\n  return getRelativeDate(date, true);\n}\n\nexport function getRelativeDate(date: string, truncate: boolean = false) {\n  let content = formatDistanceToNow(new Date(date), { addSuffix: true });\n\n  if (truncate) {\n    content = shortenRelativeDate(content);\n  }\n\n  const daysSince = (new Date().getTime() - new Date(date).getTime()) / (1000 * 3600 * 24);\n\n  // Show relative time if under 2 weeks, otherwise, use the template below.\n  if (daysSince > 14) {\n    content = formatDate(new Date(date), \"M/d/yyyy\");\n  }\n\n  return content;\n}\n\nfunction ReplayTitle({ title }: { title?: string | null }) {\n  return (\n    <div className={`${styles.replayTitle} overflow-hidden overflow-ellipsis whitespace-pre`}>\n      {title || <span className=\"italic\">Untitled</span>}\n    </div>\n  );\n}\n\nfunction RowWrapper({\n  children,\n  isEditing,\n  recording,\n  onClick,\n}: {\n  children: React.ReactNode;\n  isEditing: boolean;\n  recording: Recording;\n  onClick: () => void;\n}) {\n  return isEditing ? (\n    <div onClick={onClick}> {children}</div>\n  ) : (\n    <a href={getRecordingURL(recording)} style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n      {children}\n    </a>\n  );\n}\n\ntype RecordingRowProps = {\n  addSelectedId: (recordingId: RecordingId) => void;\n  isEditing: boolean;\n  recording: Recording;\n  removeSelectedId: (recordingId: RecordingId) => void;\n  selected: boolean;\n};\n\nfunction RecordingRow({\n  addSelectedId,\n  isEditing,\n  recording,\n  removeSelectedId,\n  selected,\n}: RecordingRowProps) {\n  const { permissions, loading: permissionsLoading } = useGetUserPermissions(recording);\n  const allowSelecting =\n    isEditing && (permissions.moveToLibrary || permissions.move || permissions.delete);\n\n  const toggleChecked = () => {\n    if (!allowSelecting) {\n      return;\n    }\n\n    if (selected) {\n      removeSelectedId(recording.id);\n    } else {\n      addSelectedId(recording.id);\n    }\n  };\n\n  if (permissionsLoading) {\n    return null;\n  }\n\n  return (\n    <RowWrapper recording={recording} isEditing={isEditing} onClick={toggleChecked}>\n      <div\n        className={`group flex cursor-pointer flex-row border-b border-chrome ${styles.libraryRow}`}\n      >\n        <div className=\"flex w-12 flex-shrink-0 flex-row items-center overflow-hidden overflow-ellipsis whitespace-pre px-4 py-3\">\n          {allowSelecting ? (\n            <input\n              type=\"checkbox\"\n              onClick={e => e.stopPropagation()}\n              onChange={toggleChecked}\n              checked={selected}\n              className=\"focus:primaryAccentHover h-4 w-4 rounded border-themeBorder text-primaryAccent\"\n            />\n          ) : null}\n        </div>\n        <div className=\"flex-grow overflow-hidden overflow-ellipsis whitespace-pre px-1 py-3\">\n          <div className=\"flex flex-row items-center space-x-4 overflow-hidden\">\n            <div className=\"h-9 w-16 flex-shrink-0 overflow-hidden rounded-sm bg-chrome\">\n              <LazyLoad height={36} scrollContainer=\"#recording-list\" once>\n                <ItemScreenshot recordingId={recording.id} />\n              </LazyLoad>\n            </div>\n\n            <div className={`flex flex-col space-y-0.5 overflow-hidden ${styles.recordingTitle}`}>\n              <div className=\"flex items-center space-x-1\">\n                {recording.metadata?.test ? (\n                  <TestResult result={recording.metadata.test.result} />\n                ) : null}\n                <ReplayTitle title={recording.title} />\n              </div>\n              <div className=\"flex flex-row space-x-4 font-light text-gray-400\">\n                <div\n                  className=\"flex flex-row items-center space-x-1 overflow-hidden overflow-ellipsis whitespace-pre\"\n                  style={{ minWidth: \"5rem\" }}\n                >\n                  <img src=\"/images/timer.svg\" className=\"w-3\" />\n                  <span>{getDurationString(recording.duration)}</span>\n                </div>\n                <div\n                  className=\"flex flex-row items-center space-x-1 overflow-hidden overflow-ellipsis whitespace-pre\"\n                  style={{ minWidth: \"6rem\" }}\n                >\n                  <img src=\"/images/today.svg\" className=\"w-3\" />\n                  <span>{getRelativeDate(recording.date)}</span>\n                </div>\n                <div className=\"overflow-hidden overflow-ellipsis whitespace-pre font-light text-gray-400\">\n                  {getDisplayedUrl(recording.url)}\n                </div>\n                {recording.metadata?.test?.file ? (\n                  <div className=\"overflow-hidden overflow-ellipsis whitespace-pre font-light text-gray-400\">\n                    {recording.metadata.test.file}\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"my-auto w-20 min-w-min flex-shrink-0 overflow-hidden overflow-ellipsis whitespace-nowrap px-3 py-3 text-right\">\n          {recording.private ? \"Private\" : \"Public\"}\n        </div>\n        <div className=\"my-auto w-36 min-w-0 flex-shrink-0 overflow-hidden overflow-ellipsis whitespace-nowrap px-3 py-3\">\n          {recording.user ? recording.user.name : \"Unknown\"}\n        </div>\n        <div className=\"flex w-12 flex-shrink-0 flex-row items-center overflow-hidden whitespace-pre px-3 py-3\">\n          {recording.comments.length ? (\n            <div className=\"inline-block\">\n              <div className=\"flex flex-row space-x-1\">\n                <span>{recording.comments.length}</span>\n                <img src=\"/images/comment-outline.svg\" className=\"w-3\" />\n              </div>\n            </div>\n          ) : (\n            <div className=\"flex w-12 flex-shrink-0 flex-row items-center overflow-hidden overflow-ellipsis whitespace-nowrap px-3 py-3\" />\n          )}\n        </div>\n        <div\n          className=\"relative flex w-6 flex-shrink-0 flex-row items-center justify-center py-3 pr-4\"\n          onClick={e => e.stopPropagation()}\n        >\n          {!isEditing ? <RecordingOptionsDropdown {...{ recording }} /> : null}\n        </div>\n      </div>\n    </RowWrapper>\n  );\n}\n\nexport function ItemScreenshot({ recordingId }: { recordingId: RecordingId }) {\n  const { screenData } = hooks.useGetRecordingPhoto(recordingId);\n  return (\n    <Redacted>\n      <div>{screenData && <img className=\"h-9 w-full object-contain\" src={screenData} />}</div>\n    </Redacted>\n  );\n}\n\nexport default RecordingRow;\n","import { ReactNode, useContext } from \"react\";\n\nimport { isReplayBrowser } from \"ui/utils/environment\";\n\nimport { FilterContext } from \"../FilterContext\";\nimport styles from \"../../../Library.module.css\";\n\nexport function RecordingsError() {\n  const { filter, setAppliedText } = useContext(FilterContext);\n  let msg: string | ReactNode;\n\n  if (filter) {\n    msg = (\n      <>\n        <div>\n          No results found.\n          <span onClick={() => setAppliedText(\"\")} className=\"cursor-pointer pl-2 underline\">\n            Show all replays?\n          </span>\n        </div>\n      </>\n    );\n  } else if (isReplayBrowser()) {\n    msg = \"Please open a new tab and press the blue record button to record a Replay\";\n  } else {\n    msg = \"👋 This is where your replays will go!\";\n  }\n\n  return (\n    <section\n      className={`flex h-3/4 flex-grow flex-col items-center justify-center space-y-1 text-lg ${styles.recordingsBackground}`}\n    >\n      <div className=\"m-24 p-6 text-bodyColor\">{msg}</div>\n    </section>\n  );\n}\n","import { RecordingId } from \"@replayio/protocol\";\nimport sortBy from \"lodash/sortBy\";\nimport { useMemo, useState } from \"react\";\n\nimport { SecondaryButton } from \"ui/components/shared/Button\";\nimport { Recording } from \"ui/types\";\n\nimport RecordingRow from \"./RecordingListItem/RecordingListItem\";\nimport { RecordingsError } from \"./RecordingsError\";\nimport styles from \"../../../Library.module.css\";\n\nexport function Recordings({\n  recordings,\n  selectedIds,\n  setSelectedIds,\n  isEditing,\n}: {\n  recordings: Recording[];\n  selectedIds: string[];\n  setSelectedIds: (ids: string[]) => void;\n  isEditing: boolean;\n}) {\n  const [showMore, toggleShowMore] = useState(false);\n\n  const shownRecordings = useMemo(() => {\n    const sortedRecordings = sortBy(recordings, recording => {\n      const ascOrder = false;\n      const order = ascOrder ? 1 : -1;\n      return order * new Date(recording.date).getTime();\n    });\n    return showMore ? sortedRecordings : sortedRecordings.slice(0, 100);\n  }, [recordings, showMore]);\n\n  const addSelectedId = (recordingId: RecordingId) => setSelectedIds([...selectedIds, recordingId]);\n  const removeSelectedId = (recordingId: RecordingId) =>\n    setSelectedIds(selectedIds.filter(id => id !== recordingId));\n\n  if (!recordings.length) {\n    return <RecordingsError />;\n  }\n\n  return (\n    <div\n      className={`flex flex-col space-y-0 overflow-y-auto rounded-md text-sm shadow-md ${styles.recordingList}`}\n    >\n      {shownRecordings.map((r, i) => (\n        <RecordingRow\n          key={i}\n          recording={r}\n          selected={selectedIds.includes(r.id)}\n          {...{ addSelectedId, removeSelectedId, isEditing }}\n        />\n      ))}\n      {!showMore && recordings.length > 100 && (\n        <div className=\"flex justify-center p-4\">\n          <SecondaryButton className=\"\" color=\"blue\" onClick={() => toggleShowMore(!showMore)}>\n            Show More\n          </SecondaryButton>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { Recording } from \"ui/types\";\n\nimport ViewerHeader from \"./Header/RecordingsPageViewerHeader\";\nimport { Recordings } from \"./Recordings\";\nimport styles from \"../../../Library.module.css\";\n\nexport function RecordingsPageViewer({\n  recordings,\n  workspaceName,\n}: {\n  recordings: Recording[];\n  workspaceName: string | React.ReactNode;\n}) {\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const handleDoneEditing = () => {\n    setSelectedIds([]);\n    setIsEditing(false);\n  };\n\n  return (\n    <div className={`flex flex-grow flex-col overflow-hidden p-4 ${styles.libraryWrapper}`}>\n      <div className=\"flex h-full space-x-2 overflow-y-auto\">\n        <div className=\"flex w-full flex-grow flex-col space-y-5\">\n          <ViewerHeader\n            recordings={recordings}\n            selectedIds={selectedIds}\n            setSelectedIds={setSelectedIds}\n            handleDoneEditing={handleDoneEditing}\n            workspaceName={workspaceName}\n            isEditing={isEditing}\n            setIsEditing={setIsEditing}\n          />\n          <div id=\"recording-list\" className=\"no-scrollbar flex-grow overflow-y-auto\">\n            <Recordings\n              isEditing={isEditing}\n              recordings={recordings}\n              selectedIds={selectedIds}\n              setSelectedIds={setSelectedIds}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\n\nimport { LibrarySpinner } from \"ui/components/Library/LibrarySpinner\";\nimport Base64Image from \"ui/components/shared/Base64Image\";\nimport hooks from \"ui/hooks\";\nimport { Workspace } from \"ui/types\";\n\nimport { TeamContext } from \"../../TeamContextRoot\";\nimport { FilterContext } from \"../FilterContext\";\nimport { RecordingsPageViewer } from \"./RecordingsPageViewer\";\n\nexport function NonPendingTeamScreen({ team }: { team: Workspace }) {\n  const { teamId } = useContext(TeamContext);\n  const { filter } = useContext(FilterContext);\n  const { recordings, loading } = hooks.useGetWorkspaceRecordings(teamId, filter);\n\n  if (!team || loading) {\n    return (\n      <div className=\"flex flex-grow flex-col overflow-hidden p-4\">\n        <LibrarySpinner />\n      </div>\n    );\n  }\n\n  return (\n    <RecordingsPageViewer\n      recordings={recordings}\n      workspaceName={team?.logo ? <Base64Image src={team.logo} className=\"max-h-12\" /> : team.name}\n    />\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { PrimaryButton, SecondaryButton } from \"ui/components/shared/Button\";\nimport { useConfirm } from \"ui/components/shared/Confirm\";\nimport hooks from \"ui/hooks\";\nimport { PendingWorkspaceInvitation } from \"ui/types\";\n\nimport { useRedirectToTeam } from \"../../../utils\";\n\nexport default function PendingTeamPrompt({\n  workspace,\n}: {\n  workspace: PendingWorkspaceInvitation;\n}) {\n  const redirectToTeam = useRedirectToTeam(true);\n  const [loading, setLoading] = useState<boolean>(false);\n  const { id, name, inviterEmail } = workspace;\n\n  const acceptPendingInvitation = hooks.useAcceptPendingInvitation(() => {});\n  const declinePendingInvitation = hooks.useRejectPendingInvitation(onDeclineCompleted);\n\n  const { confirmDestructive } = useConfirm();\n\n  const handleAccept = () => {\n    acceptPendingInvitation({ variables: { workspaceId: id } });\n    setLoading(true);\n  };\n  const handleDecline = () => {\n    confirmDestructive({\n      message: \"Are you sure you want to decline this invitation?\",\n      acceptLabel: \"Decline invitation\",\n    }).then(confirmed => {\n      if (confirmed) {\n        declinePendingInvitation({ variables: { workspaceId: id } });\n        setLoading(true);\n      }\n    });\n  };\n  function onDeclineCompleted() {\n    redirectToTeam();\n  }\n\n  return (\n    <div className=\"absolute top-0 left-0 grid h-full w-full items-center\">\n      <div className=\"mx-auto flex max-w-lg flex-col space-y-4 rounded-md bg-modalBgcolor px-12 py-8 shadow-lg\">\n        <div className=\"flex flex-col space-y-1\">\n          <div className=\"text-lg\">\n            You were invited to <strong>{name}</strong>\n          </div>\n          {inviterEmail ? (\n            <div className=\"text-xs\">\n              Invited by <strong>{inviterEmail}</strong>\n            </div>\n          ) : null}\n        </div>\n        <div className=\"flex flex-row space-x-2 text-base\">\n          {loading ? (\n            \"Loading…\"\n          ) : (\n            <>\n              <PrimaryButton color=\"blue\" onClick={handleAccept}>\n                Accept\n              </PrimaryButton>\n              <SecondaryButton color=\"blue\" onClick={handleDecline}>\n                Decline\n              </SecondaryButton>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { PendingWorkspaceInvitation } from \"ui/types\";\nimport { getDisplayedUrl } from \"ui/utils/environment\";\n\nimport { getDurationString, getRelativeDate } from \"../RecordingListItem/RecordingListItem\";\nimport PendingTeamPrompt from \"./PendingTeamPrompt\";\n\nconst MOCK_DATA = [\n  { date: \"2021-12-01T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-12-01T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-09-12T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-09-12T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-09-01T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-09-01T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-06-12T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-06-12T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-06-01T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-06-01T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-02-12T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-02-12T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-01-12T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-01-12T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-01-01T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-01-01T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-01-01T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-01-01T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-01-01T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-01-01T18:37:44.077Z\", user: { name: \"Jaril\" } },\n  { date: \"2021-01-01T18:37:44.077Z\", user: { name: \"Jaril\" } },\n];\n\nfunction MockRecordingRow({ date, name }: { date: string; name: string }) {\n  return (\n    <div className=\"group flex cursor-pointer flex-row border-b border-gray-200 transition duration-200 hover:bg-gray-50\">\n      <div className=\"w-8 flex-shrink-0 overflow-hidden overflow-ellipsis whitespace-pre px-1 py-3\" />\n      <div className=\"flex-grow overflow-hidden overflow-ellipsis whitespace-pre px-1 py-3\">\n        <div className=\"flex flex-row items-center space-x-4 overflow-hidden\">\n          <div className=\"h-9 w-16 flex-shrink-0 overflow-hidden rounded-sm bg-gray-100\" />\n          <div className=\"flex flex-col space-y-0.5 overflow-hidden\">\n            <div className=\"overflow-hidden overflow-ellipsis whitespace-pre text-gray-900\">\n              jQuery - TodoMVC\n            </div>\n            <div className=\"flex flex-row space-x-4 text-gray-500\">\n              <div\n                className=\"flex flex-row items-center space-x-1 overflow-hidden overflow-ellipsis whitespace-pre\"\n                style={{ minWidth: \"5rem\" }}\n              >\n                <img src=\"/images/timer.svg\" className=\"w-3\" />\n                <span>{getDurationString(Math.floor(Math.random() * 120000))}</span>\n              </div>\n              <div\n                className=\"flex flex-row items-center space-x-1 overflow-hidden overflow-ellipsis whitespace-pre\"\n                style={{ minWidth: \"6rem\" }}\n              >\n                <img src=\"/images/today.svg\" className=\"w-3\" />\n                <span>{getRelativeDate(date)}</span>\n              </div>\n              <div className=\"overflow-hidden overflow-ellipsis whitespace-pre text-gray-400\">\n                {getDisplayedUrl(\"https://todomvc.com/examples/jquery/#/all\")}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"my-auto w-16 flex-shrink-0 overflow-hidden overflow-ellipsis whitespace-pre px-1 py-3\">\n        {Math.random() > 0.5 ? \"Private\" : \"Public\"}\n      </div>\n      <div className=\"my-auto w-36 flex-shrink-0 overflow-hidden overflow-ellipsis whitespace-pre px-1 py-3\">\n        {name}\n      </div>\n      <div className=\"flex w-16 flex-shrink-0 flex-row items-center overflow-hidden overflow-ellipsis whitespace-pre px-1 py-3\">\n        <div className=\"inline-block\">\n          <div className=\"flex flex-row space-x-1\">\n            <span>{Math.floor(Math.random() * 20)}</span>\n            <img src=\"/images/comment-outline.svg\" className=\"w-3\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"flex w-8 flex-shrink-0 flex-row items-center justify-center px-1 py-3\" />\n    </div>\n  );\n}\n\nexport function PendingTeamScreen({ workspace }: { workspace: PendingWorkspaceInvitation }) {\n  if (!workspace) {\n    return null;\n  }\n  const { name } = workspace;\n\n  return (\n    <div className=\"-5 flex w-full flex-col space-y-5 overflow-auto px-8 py-6\">\n      <div className=\"flex flex-row items-center justify-between\">\n        <div className=\"flex flex-row items-center space-x-2 text-2xl font-semibold\">\n          <span>{name}</span>\n          <div\n            className=\"rounded-lg bg-blue-500 px-2 py-0.5 text-xs text-white\"\n            style={{ height: \"fit-content\" }}\n          >\n            New\n          </div>\n        </div>\n      </div>\n      <div className=\"relative overflow-hidden\">\n        <div className=\"flex flex-col overflow-y-auto rounded-md bg-bodyBgcolor text-sm shadow-md blur-sm filter\">\n          {MOCK_DATA.map((r, i) => (\n            <MockRecordingRow date={r.date} key={i} name={r.user.name} />\n          ))}\n        </div>\n        <PendingTeamPrompt {...{ workspace }} />\n      </div>\n    </div>\n  );\n}\n","import { useContext } from \"react\";\n\nimport { LibrarySpinner } from \"ui/components/Library/LibrarySpinner\";\nimport { NonPendingTeamScreen } from \"ui/components/Library/Team/View/Recordings/NonPendingTeam\";\nimport hooks from \"ui/hooks\";\nimport { Workspace } from \"ui/types\";\n\nimport { MY_LIBRARY_TEAM, TeamContext } from \"../../TeamContextRoot\";\nimport { FilterContext } from \"../FilterContext\";\nimport { PendingTeamScreen } from \"./PendingTeam/PendingTeamScreen\";\nimport { RecordingsPageViewer } from \"./RecordingsPageViewer\";\n\nexport function RecordingsPage() {\n  const { teamId, team } = useContext(TeamContext);\n\n  return teamId === MY_LIBRARY_TEAM.id ? (\n    <MyRecordingsPage team={team as typeof MY_LIBRARY_TEAM} />\n  ) : (\n    <TeamRecordingsPage team={team as Workspace} />\n  );\n}\n\nfunction MyRecordingsPage({ team }: { team: typeof MY_LIBRARY_TEAM }) {\n  const { filter } = useContext(FilterContext);\n  const { recordings, loading } = hooks.useGetPersonalRecordings(filter);\n\n  if (loading || !recordings) {\n    return (\n      <div className=\"flex flex-grow flex-col overflow-hidden p-4\">\n        <LibrarySpinner />\n      </div>\n    );\n  }\n\n  return <RecordingsPageViewer recordings={recordings} workspaceName={team.name} />;\n}\n\n// Not a big fan of how we handle pending teams here, but we're hoisted by\n// our own petard. The complexity is coming from the fact that we're trying\n// to display a non-workspace as a workspace.\n// TODO: Think of an alternative way to display pending workspaces that doesn't\n// require us having to display them like an actual workspace. I named this\n// atrociously so that it's easier to find all the references to it when we file\n// a follow up.\nfunction TeamRecordingsPage({ team }: { team: Workspace }) {\n  const { teamId, isPendingTeam } = useContext(TeamContext);\n  const { pendingWorkspaces, loading } = hooks.useGetPendingWorkspaces();\n\n  if (loading || !pendingWorkspaces) {\n    return null;\n  }\n\n  if (isPendingTeam) {\n    const workspace = pendingWorkspaces.find(w => w.id === teamId);\n    return <PendingTeamScreen workspace={workspace!} />;\n  } else {\n    return <NonPendingTeamScreen team={team} />;\n  }\n}\n","import MaterialIcon from \"ui/components/shared/MaterialIcon\";\n\nexport function AttributeContainer({\n  children,\n  icon,\n  maxWidth = \"none\",\n  title,\n}: {\n  children: string;\n  icon?: string;\n  title?: string | null;\n  maxWidth?: string;\n}) {\n  return (\n    <div\n      className={`mr-4 flex items-start space-x-1 overflow-hidden text-ellipsis`}\n      title={title || children}\n    >\n      <div className=\"w-4\">{icon ? <MaterialIcon>{icon}</MaterialIcon> : null}</div>\n      <span style={{ maxWidth }} className=\"block overflow-hidden text-ellipsis whitespace-pre\">\n        {children}\n      </span>\n    </div>\n  );\n}\n","import MaterialIcon from \"ui/components/shared/MaterialIcon\";\nimport { Recording, RecordingMetadata, TestMetadata } from \"ui/types\";\nimport { getRecordingURL } from \"ui/utils/recording\";\n\nimport { getTruncatedRelativeDate } from \"../Recordings/RecordingListItem/RecordingListItem\";\nimport { AttributeContainer } from \"../TestRuns/AttributeContainer\";\nimport styles from \"../../../Library.module.css\";\n\nfunction Title({ metadata }: { metadata: RecordingMetadata }) {\n  const title =\n    metadata?.source?.merge?.title || metadata?.source?.commit.title || metadata?.test?.title || \"\";\n  const formatted = title.length > 80 ? title.slice(0, 80) + \"...\" : title;\n  return (\n    <div className=\"wrap flex shrink grow-0 flex-nowrap overflow-hidden text-ellipsis pr-2 font-medium\">\n      {formatted}\n    </div>\n  );\n}\n\nfunction Status({ test }: { test: TestMetadata }) {\n  return (\n    <MaterialIcon\n      iconSize=\"2xl\"\n      outlined\n      className={\n        test.result === \"passed\"\n          ? \"text-green-500 group-hover:text-green-400\"\n          : \"text-red-500 group-hover:text-red-700\"\n      }\n    >\n      {test.result === \"passed\" ? \"play_circle_filled\" : \"play_circle\"}\n    </MaterialIcon>\n  );\n}\n\nfunction Attributes({ recording }: { recording: Recording }) {\n  const user = recording.metadata?.source?.trigger?.user;\n  const branch = recording.metadata?.source?.branch;\n  const merge = recording.metadata?.source?.merge;\n  const date = recording.date;\n\n  return (\n    <div className=\"flex flex-row items-center text-xs font-light\">\n      <AttributeContainer icon=\"schedule\">{getTruncatedRelativeDate(date)}</AttributeContainer>\n      <AttributeContainer icon=\"person\">{user!}</AttributeContainer>\n\n      {branch && !merge && (\n        <AttributeContainer maxWidth=\"160px\" icon=\"fork_right\">\n          {branch}\n        </AttributeContainer>\n      )}\n      {merge && (\n        <AttributeContainer maxWidth=\"160px\" icon=\"fork_right\">\n          {merge.id}\n        </AttributeContainer>\n      )}\n    </div>\n  );\n}\n\nexport default function TestResultRow({ recording }: { recording: Recording }) {\n  if (!recording?.metadata?.test) {\n    return null;\n  }\n\n  return (\n    <a\n      href={getRecordingURL(recording)}\n      className=\"group\"\n      style={{ color: \"inherit\", textDecoration: \"inherit\" }}\n      rel=\"noreferrer noopener\"\n      target=\"_blank\"\n    >\n      <div\n        className={`flex cursor-pointer flex-row items-center space-x-3 overflow-hidden rounded-sm border-b border-b-chrome px-3 py-3 ${styles.libraryRow}`}\n      >\n        <Status test={recording.metadata.test} />\n        <div className=\"flex flex-grow flex-col space-y-2\">\n          <div className=\"flex flex-row justify-between\">\n            <Title metadata={recording.metadata} />\n          </div>\n          <Attributes recording={recording} />\n        </div>\n      </div>\n    </a>\n  );\n}\n","import sortBy from \"lodash/sortBy\";\nimport { useMemo, useState } from \"react\";\n\nimport { SecondaryButton } from \"ui/components/shared/Button\";\nimport { Recording } from \"ui/types\";\n\nimport { RecordingsError } from \"../Recordings/RecordingsError\";\nimport TestResultRow from \"./TestResultRow\";\nimport styles from \"../../../Library.module.css\";\n\nexport function TestResults({ recordings }: { recordings: Recording[] }) {\n  const [showMore, toggleShowMore] = useState(false);\n\n  const shownRecordings = useMemo(() => {\n    const sortedRecordings = sortBy(recordings, recording => {\n      const ascOrder = false;\n      const order = ascOrder ? 1 : -1;\n      return order * new Date(recording.date).getTime();\n    });\n    return showMore ? sortedRecordings : sortedRecordings.slice(0, 100);\n  }, [recordings, showMore]);\n\n  if (!recordings.length) {\n    return <RecordingsError />;\n  }\n\n  return (\n    <div\n      className={`no-scrollbar mb-1 flex flex-col overflow-y-auto rounded-t-xl border-b border-chrome text-sm ${styles.recordingList}`}\n    >\n      {shownRecordings.map((r, i) => (\n        <TestResultRow key={i} recording={r} />\n      ))}\n      {!showMore && recordings.length > 100 && (\n        <div className=\"flex justify-center p-4\">\n          <SecondaryButton className=\"\" color=\"blue\" onClick={() => toggleShowMore(!showMore)}>\n            Show More\n          </SecondaryButton>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useContext } from \"react\";\n\nimport { LibrarySpinner } from \"ui/components/Library/LibrarySpinner\";\nimport hooks from \"ui/hooks\";\n\nimport { TeamContext } from \"../../TeamContextRoot\";\nimport { FilterContext } from \"../FilterContext\";\nimport { TestResults } from \"./TestResults\";\n\nexport function TestResultsPage() {\n  return (\n    <div className=\"flex flex-grow flex-col space-y-2 overflow-auto p-4\">\n      <TestResultsContent />\n    </div>\n  );\n}\n\n// This is currently mostly derived from the existing Recordings component(s).\n// We should reconsider exactly how we want to think about displaying test results.\nfunction TestResultsContent() {\n  const { teamId } = useContext(TeamContext);\n  const { filter } = useContext(FilterContext);\n  const { recordings, loading } = hooks.useGetWorkspaceRecordings(teamId, filter);\n\n  if (loading) {\n    return (\n      <div className=\"flex flex-grow flex-col overflow-hidden p-4\">\n        <LibrarySpinner />\n      </div>\n    );\n  }\n\n  return <TestResults recordings={recordings} />;\n}\n","import { gql, useQuery } from \"@apollo/client\";\nimport orderBy from \"lodash/orderBy\";\n\nimport {\n  GetTest,\n  GetTestVariables,\n  GetTest_node_Workspace_tests,\n  GetTest_node_Workspace_tests_recordings,\n} from \"graphql/GetTest\";\nimport { GetTestsForWorkspace, GetTestsForWorkspaceVariables } from \"graphql/GetTestsForWorkspace\";\nimport {\n  GetTestsRun,\n  GetTestsRunVariables,\n  GetTestsRun_node_Workspace_testRuns,\n  GetTestsRun_node_Workspace_testRuns_recordings,\n} from \"graphql/GetTestsRun\";\nimport {\n  GetTestsRunsForWorkspace,\n  GetTestsRunsForWorkspaceVariables,\n  GetTestsRunsForWorkspace_node_Workspace_testRuns,\n} from \"graphql/GetTestsRunsForWorkspace\";\nimport { assert } from \"protocol/utils\";\nimport { WorkspaceId } from \"ui/state/app\";\nimport { Recording } from \"ui/types\";\n\nexport interface Test {\n  title: string | null;\n  path: string[] | null;\n  date: string;\n  recordings: Recording[];\n}\n\nexport interface TestRunStats {\n  passed: number | null;\n  failed: number | null;\n}\nexport interface TestRun {\n  id: string | null;\n  title: string | null;\n  commitTitle: string | null;\n  commitId: string | null;\n  mergeTitle: string | null;\n  mergeId: string | null;\n  user: string | null;\n  date: string;\n  branch: string | null;\n  stats: TestRunStats | null;\n  recordings?: Recording[];\n  triggerUrl?: string;\n}\n\nconst GET_TESTS_FOR_WORKSPACE = gql`\n  query GetTestsForWorkspace($workspaceId: ID!) {\n    node(id: $workspaceId) {\n      ... on Workspace {\n        id\n        tests {\n          title\n          path\n          recordings {\n            edges {\n              node {\n                uuid\n                duration\n                createdAt\n                metadata\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst GET_TEST_RUNS_FOR_WORKSPACE = gql`\n  query GetTestsRunsForWorkspace($workspaceId: ID!) {\n    node(id: $workspaceId) {\n      ... on Workspace {\n        id\n        testRuns {\n          id\n          title\n          branch\n          commitId\n          commitTitle\n          mergeId\n          mergeTitle\n          user\n          date\n          stats {\n            passed\n            failed\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst GET_TEST = gql`\n  query GetTest($workspaceId: ID!, $path: String!) {\n    node(id: $workspaceId) {\n      ... on Workspace {\n        id\n        tests(path: $path) {\n          title\n          path\n          recordings {\n            edges {\n              node {\n                uuid\n                duration\n                createdAt\n                metadata\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst GET_TEST_RUN = gql`\n  query GetTestsRun($workspaceId: ID!, $id: String!) {\n    node(id: $workspaceId) {\n      ... on Workspace {\n        id\n        testRuns(id: $id) {\n          id\n          title\n          branch\n          commitId\n          commitTitle\n          mergeId\n          mergeTitle\n          user\n          date\n          stats {\n            passed\n            failed\n          }\n          recordings {\n            edges {\n              node {\n                uuid\n                duration\n                createdAt\n                metadata\n                comments {\n                  user {\n                    id\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction unwrapRecordingsData(\n  recordings:\n    | GetTest_node_Workspace_tests_recordings\n    | GetTestsRun_node_Workspace_testRuns_recordings\n    | null\n): Recording[] | undefined {\n  if (!recordings) {\n    return undefined;\n  }\n  return recordings.edges.map(e => ({\n    ...e.node,\n    id: e.node.uuid,\n    date: e.node.createdAt,\n  }));\n}\n\nexport function useGetTestForWorkspace(\n  path: string[],\n  workspaceId: string\n): { test: Test | null; loading: boolean } {\n  const serializedPath = encodeURIComponent(JSON.stringify(path));\n  const { data, loading } = useQuery<GetTest, GetTestVariables>(GET_TEST, {\n    variables: { path: serializedPath, workspaceId },\n  });\n\n  if (loading || !data?.node) {\n    return { test: null, loading };\n  }\n  assert(\"tests\" in data.node, \"No tests in GetTest response\");\n\n  return {\n    test: convertTest(data.node.tests?.[0]),\n    loading,\n  };\n}\n\nexport function useGetTestRunForWorkspace(\n  workspaceId: string,\n  testRunId: string\n): {\n  testRun: TestRun | null;\n  loading: boolean;\n} {\n  const { data, loading } = useQuery<GetTestsRun, GetTestsRunVariables>(GET_TEST_RUN, {\n    variables: { id: testRunId, workspaceId },\n  });\n\n  if (loading || !data?.node) {\n    return { testRun: null, loading };\n  }\n  assert(\"testRuns\" in data.node, \"No testRuns in GetTestsRun response\");\n\n  const testRun = data.node.testRuns?.[0];\n\n  return {\n    testRun: convertTestRun(testRun),\n    loading,\n  };\n}\n\nexport function useGetTestsForWorkspace(workspaceId: WorkspaceId): {\n  tests: Test[] | null;\n  loading: boolean;\n} {\n  const { data, loading } = useQuery<GetTestsForWorkspace, GetTestsForWorkspaceVariables>(\n    GET_TESTS_FOR_WORKSPACE,\n    {\n      variables: { workspaceId },\n    }\n  );\n\n  if (loading || !data?.node || !(\"tests\" in data.node) || !data.node.tests) {\n    return { tests: null, loading };\n  }\n\n  const tests = data.node.tests.map(test => convertTest(test)!);\n  const sortedTests = orderBy(tests, [\"date\"], [\"desc\"]);\n\n  return {\n    tests: sortedTests,\n    loading,\n  };\n}\n\nfunction convertTest(test: GetTest_node_Workspace_tests | undefined) {\n  if (!test) {\n    return null;\n  }\n  const recordings = unwrapRecordingsData(test.recordings);\n  const sortedRecordings = orderBy(recordings, \"date\", \"desc\");\n  const firstRecording = sortedRecordings[0];\n\n  return {\n    ...test,\n    date: firstRecording.date,\n    recordings: sortedRecordings,\n  };\n}\n\nexport function useGetTestRunsForWorkspace(workspaceId: WorkspaceId): {\n  testRuns: TestRun[] | null;\n  loading: boolean;\n} {\n  const { data, loading } = useQuery<GetTestsRunsForWorkspace, GetTestsRunsForWorkspaceVariables>(\n    GET_TEST_RUNS_FOR_WORKSPACE,\n    {\n      variables: { workspaceId },\n    }\n  );\n\n  if (loading || !data?.node) {\n    return { testRuns: null, loading };\n  }\n  assert(\"testRuns\" in data.node, \"No testRuns in GetTestsRun response\");\n\n  const testRuns = data.node.testRuns?.map(testRun => convertTestRun(testRun)!);\n  const sortedTestRuns = orderBy(testRuns, \"date\", \"desc\");\n\n  return {\n    testRuns: sortedTestRuns,\n    loading,\n  };\n}\n\nfunction convertTestRun(\n  testRun:\n    | GetTestsRun_node_Workspace_testRuns\n    | GetTestsRunsForWorkspace_node_Workspace_testRuns\n    | undefined\n): TestRun | null {\n  if (!testRun) {\n    return null;\n  }\n  const recordings = \"recordings\" in testRun ? unwrapRecordingsData(testRun.recordings) : [];\n  const sortedRecordings = orderBy(recordings, \"date\", \"desc\");\n  const firstRecording = sortedRecordings[0];\n\n  return {\n    ...testRun,\n    recordings,\n    triggerUrl: firstRecording?.metadata?.source?.trigger?.url,\n  };\n}\n","import { useRouter } from \"next/router\";\nimport { ReactNode, createContext, useContext, useEffect } from \"react\";\n\nimport { useGetTeamRouteParams } from \"ui/components/Library/Team/utils\";\nimport { TestRun, useGetTestRunsForWorkspace } from \"ui/hooks/tests\";\n\nimport { TeamContext } from \"../../TeamContextRoot\";\n\ntype TestRunsContextType = {\n  focusId: string;\n  testRuns: TestRun[] | null;\n};\n\nexport const TestRunsContext = createContext<TestRunsContextType>(null as any);\n\nexport function TestRunsContainer({ children }: { children: ReactNode }) {\n  const router = useRouter();\n  const { focusId } = useGetTeamRouteParams();\n  const { teamId } = useContext(TeamContext);\n  const { testRuns } = useGetTestRunsForWorkspace(teamId);\n\n  // Initialize the focused test run to the first/most recent test run in the list\n  useEffect(() => {\n    if (testRuns?.length && !focusId) {\n      router.push(`/team/${teamId}/runs/${testRuns[0]?.id}`);\n    }\n  }, [router, testRuns, focusId, teamId]);\n\n  return (\n    <TestRunsContext.Provider value={{ focusId, testRuns }}>{children}</TestRunsContext.Provider>\n  );\n}\n","import { ReactNode, createContext, useContext } from \"react\";\n\nimport { useGetTeamRouteParams } from \"ui/components/Library/Team/utils\";\nimport { TestRun, useGetTestRunForWorkspace } from \"ui/hooks/tests\";\n\nimport { TeamContext } from \"../../../TeamContextRoot\";\nimport { TestRunsContext } from \"../TestRunsContextRoot\";\n\ntype TestRunOverviewContainerContextType = {\n  view: string;\n  testRun: TestRun | null;\n};\n\nexport const TestRunOverviewContext = createContext<TestRunOverviewContainerContextType>(\n  null as any\n);\n\nexport function TestRunOverviewContainer({ children }: { children: ReactNode }) {\n  const { view } = useGetTeamRouteParams();\n  const { teamId } = useContext(TeamContext);\n  const { focusId } = useContext(TestRunsContext);\n  const { testRun } = useGetTestRunForWorkspace(teamId, focusId);\n\n  return (\n    <TestRunOverviewContext.Provider value={{ view, testRun }}>\n      {children}\n    </TestRunOverviewContext.Provider>\n  );\n}\n","import { RecordingId } from \"@replayio/protocol\";\nimport Link from \"next/link\";\nimport { useContext } from \"react\";\n\nimport MaterialIcon from \"ui/components/shared/MaterialIcon\";\nimport { Recording } from \"ui/types\";\n\nimport { TeamContext } from \"../../../TeamContextRoot\";\nimport styles from \"../../../../Library.module.css\";\n\nfunction ViewReplay({ passed, recordingId }: { passed: boolean; recordingId: RecordingId }) {\n  return (\n    <Link href={`/recording/${recordingId}`}>\n      <a\n        className=\"group flex cursor-pointer items-center justify-center p-2 transition\"\n        onClick={e => e.stopPropagation()}\n      >\n        <MaterialIcon\n          iconSize=\"2xl\"\n          outlined\n          className={\n            passed\n              ? \"text-green-500 group-hover:text-green-400\"\n              : \"text-red-500 group-hover:text-red-400\"\n          }\n        >\n          {passed ? \"play_circle_filled\" : \"play_circle\"}\n        </MaterialIcon>\n      </a>\n    </Link>\n  );\n}\n\nfunction Title({ recording }: { recording: Recording }) {\n  return (\n    <div className=\"flex flex-grow flex-row items-center space-x-2 overflow-hidden hover:cursor-pointer\">\n      <div className=\"flex flex-grow flex-col overflow-hidden py-2\">\n        {recording.metadata?.test?.title}\n        <div className=\"text-xs text-gray-500\">{recording.metadata?.test?.file}</div>\n      </div>\n    </div>\n  );\n}\n\nfunction Comments({ recording }: { recording: Recording }) {\n  const numComments = recording?.comments?.length;\n  if (numComments == 0) {\n    return null;\n  }\n  return (\n    <div className=\"align-items-center flex flex-row space-x-1 text-gray-600\">\n      <img src=\"/images/comment-outline.svg\" className=\"w-3\" />\n      <span>{numComments}</span>\n    </div>\n  );\n}\n\nfunction FilterByTestButton({ recording }: { recording: Recording }) {\n  const { teamId } = useContext(TeamContext);\n  const path = JSON.stringify(recording.metadata?.test?.path || []);\n\n  return (\n    <Link href={`/team/${teamId}/results?q=test-path:${path}`}>\n      <a className=\"max-w-min overflow-hidden overflow-ellipsis whitespace-pre p-2 text-left opacity-0 hover:bg-gray-200 hover:underline group-hover:opacity-100\">\n        <MaterialIcon>filter_alt</MaterialIcon>\n      </a>\n    </Link>\n  );\n}\n\nexport function TestResultListItem({ recording }: { recording: Recording }) {\n  const { metadata } = recording;\n  const passed = metadata?.test?.result === \"passed\";\n  const recordingId = recording.id;\n\n  return (\n    <div\n      className={`group flex grow flex-row items-center px-2 transition duration-150 ${styles.libraryRow}`}\n    >\n      <Link href={`/recording/${recordingId}`}>\n        <a\n          className=\"group flex flex-grow cursor-pointer items-center justify-center space-x-2 p-2 transition\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <ViewReplay passed={passed} recordingId={recordingId} />\n          <Title recording={recording} />\n        </a>\n      </Link>\n      <Comments recording={recording} />\n      <FilterByTestButton recording={recording} />\n    </div>\n  );\n}\n","import orderBy from \"lodash/orderBy\";\nimport { useContext, useState } from \"react\";\n\nimport Icon from \"ui/components/shared/Icon\";\nimport { Recording } from \"ui/types\";\n\nimport { TestResultListItem } from \"./TestResultListItem\";\nimport { TestRunOverviewContext } from \"./TestRunOverviewContainerContextType\";\nimport styles from \"../../../../Library.module.css\";\n\nexport function RunResults() {\n  const testRun = useContext(TestRunOverviewContext).testRun!;\n\n  const sortedRecordings = orderBy(testRun.recordings, \"date\", \"desc\");\n  const passedRecordings = sortedRecordings.filter(r => r.metadata?.test?.result === \"passed\");\n  const failedRecordings = sortedRecordings.filter(r => r.metadata?.test?.result !== \"passed\");\n\n  return (\n    <div className=\"no-scrollbar flex flex-col overflow-y-auto\">\n      <TestStatusGroup recordings={failedRecordings} label=\"Failed\" />\n      <TestStatusGroup recordings={passedRecordings} label=\"Passed\" />\n    </div>\n  );\n}\n\nfunction TestStatusGroup({ recordings, label }: { recordings: Recording[]; label: string }) {\n  const [expanded, setExpanded] = useState(true);\n  const count = recordings.length;\n  if (count == 0) {\n    return null;\n  }\n\n  const sortedRecordings = recordings.sort((a, b) =>\n    (a.metadata?.test?.file || 0) > (b.metadata?.test?.file || 0) ? 1 : -1\n  );\n\n  return (\n    <div className=\"flex flex-col\">\n      <div\n        className={` top-0 flex grow flex-row p-2 pl-4 font-medium hover:cursor-pointer ${styles.libraryRowHeader}`}\n        onClick={() => setExpanded(!expanded)}\n      >\n        <div className=\"grow\">\n          {count} {label} Test{count > 1 ? \"s\" : \"\"}\n        </div>\n        <div className=\"flex\">\n          <Icon\n            filename=\"chevron\"\n            className={`${\n              expanded ? \"bg-iconColor\" : \"rotate-90\"\n            } rotate duration-140 bg-iconColor transition ease-out`}\n            size=\"small\"\n          />\n        </div>\n      </div>\n      {expanded && sortedRecordings.map((r, i) => <TestResultListItem recording={r} key={i} />)}\n    </div>\n  );\n}\n","import { TestRun } from \"ui/hooks/tests\";\n\nfunction Pill({ styles, value }: { styles: string; value: number }) {\n  return (\n    <div\n      className={`flex h-[1.5rem] min-w-[1.5rem] items-center justify-center rounded-md px-1 text-xs font-bold ${styles}`}\n    >\n      {value}\n    </div>\n  );\n}\nexport function RunStats({ testRun }: { testRun: TestRun }) {\n  let passed = 0;\n  let failed = 0;\n  if (testRun.stats) {\n    passed = testRun.stats.passed || 0;\n    failed = testRun.stats.failed || 0;\n  }\n\n  return (\n    <div className=\"flex shrink space-x-2\">\n      {failed > 0 && <Pill styles=\"text-red-500 border border-red-500 border-3\" value={failed} />}\n      {failed == 0 && passed > 0 && <Pill styles=\"bg-green-500 text-chrome\" value={passed} />}\n    </div>\n  );\n}\n","import Link from \"next/link\";\nimport { useContext } from \"react\";\n\nimport MaterialIcon from \"ui/components/shared/MaterialIcon\";\nimport { TestRun } from \"ui/hooks/tests\";\n\nimport {\n  getDurationString,\n  getTruncatedRelativeDate,\n} from \"../../Recordings/RecordingListItem/RecordingListItem\";\nimport { AttributeContainer } from \"../AttributeContainer\";\nimport { RunStats } from \"../RunStats\";\nimport { getDuration } from \"../utils\";\nimport { TestRunOverviewContext } from \"./TestRunOverviewContainerContextType\";\n\nfunction Title({ testRun }: { testRun: TestRun }) {\n  const title = testRun?.commitTitle;\n\n  return (\n    <div className=\"flex flex-row items-center space-x-2 overflow-hidden\">\n      <div className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-xl font-medium\">\n        {title}\n      </div>\n    </div>\n  );\n}\n\nfunction Attributes({ testRun }: { testRun: TestRun }) {\n  const duration = getDuration(testRun.recordings!);\n  const durationString = getDurationString(duration);\n  const { user, date, mergeId, mergeTitle, branch } = testRun;\n\n  return (\n    <div className=\"flex flex-row flex-wrap items-center\">\n      <AttributeContainer icon=\"schedule\">{getTruncatedRelativeDate(date)}</AttributeContainer>\n      <AttributeContainer icon=\"person\">{user!}</AttributeContainer>\n      {mergeId && (\n        <AttributeContainer title={mergeTitle} icon=\"merge_type\">\n          {mergeId}\n        </AttributeContainer>\n      )}\n\n      {!mergeId && branch && <AttributeContainer icon=\"fork_right\">{branch}</AttributeContainer>}\n      <AttributeContainer icon=\"timer\">{durationString}</AttributeContainer>\n    </div>\n  );\n}\n\nfunction RunnerLink({ testRun }: { testRun: TestRun }) {\n  const { triggerUrl } = testRun;\n\n  if (!triggerUrl) {\n    return null;\n  }\n\n  return (\n    <Link href={triggerUrl}>\n      <a target=\"_blank\" rel=\"noreferrer noopener\" className=\"hover:underline\">\n        <span>View run in GitHub</span>\n      </a>\n    </Link>\n  );\n}\n\nexport function RunSummary() {\n  const testRun = useContext(TestRunOverviewContext).testRun!;\n\n  return (\n    <div className=\"mb-2 flex flex-col space-y-2 border-b border-themeBorder p-4\">\n      <div className=\"flex flex-row justify-between\">\n        <Title testRun={testRun} />\n        <RunStats testRun={testRun} />\n      </div>\n      <div className=\"flex flex-row items-center justify-between text-xs\">\n        <Attributes testRun={testRun} />\n        <RunnerLink testRun={testRun} />\n      </div>\n      {testRun.title ? (\n        <div className=\"flex flex-row items-center justify-between text-xs\">{testRun.title}</div>\n      ) : null}\n    </div>\n  );\n}\n","import { Recording } from \"ui/types\";\n\nexport function getDuration(recordings: Recording[]) {\n  const sortedRecordings = recordings.map(r => new Date(r.date).getTime()).sort((a, b) => a - b);\n  return sortedRecordings[sortedRecordings.length - 1] - sortedRecordings[0];\n}\nexport const getDurationString = (duration: number) => {\n  const date = new Date(duration);\n  const minutes = date.getMinutes() + \"\";\n  const seconds = date.getSeconds() + \"\";\n\n  return `${minutes.padStart(2, \"0\")}:${seconds.padStart(2, \"0\")}`;\n};\n","import { useContext } from \"react\";\n\nimport { LibrarySpinner } from \"ui/components/Library/LibrarySpinner\";\nimport { RunResults } from \"ui/components/Library/Team/View/TestRuns/Overview/RunResults\";\n\nimport { RunSummary } from \"./RunSummary\";\nimport { TestRunOverviewContext } from \"./TestRunOverviewContainerContextType\";\nimport styles from \"../../../../Library.module.css\";\n\nexport function TestRunOverviewContent() {\n  const { testRun } = useContext(TestRunOverviewContext);\n\n  return (\n    <div\n      className={`m-4 ml-0 flex flex-col overflow-hidden rounded-xl text-sm shadow-lg ${styles.runOverview}`}\n      style={{ width: \"50rem\" }}\n    >\n      {testRun ? (\n        <>\n          <RunSummary />\n          <RunResults />\n        </>\n      ) : (\n        <LibrarySpinner />\n      )}\n    </div>\n  );\n}\n","import { TestRunOverviewContainer } from \"./TestRunOverviewContainerContextType\";\nimport { TestRunOverviewContent } from \"./TestRunOverviewContent\";\n\nexport function TestRunOverviewPage() {\n  return (\n    <TestRunOverviewContainer>\n      <TestRunOverviewContent />\n    </TestRunOverviewContainer>\n  );\n}\n","import Link from \"next/link\";\nimport { useContext } from \"react\";\n\nimport MaterialIcon from \"ui/components/shared/MaterialIcon\";\nimport { TestRun } from \"ui/hooks/tests\";\n\nimport { TeamContext } from \"../../TeamContextRoot\";\nimport { getTruncatedRelativeDate } from \"../Recordings/RecordingListItem/RecordingListItem\";\nimport { AttributeContainer } from \"./AttributeContainer\";\nimport { RunStats } from \"./RunStats\";\nimport { TestRunsContext } from \"./TestRunsContextRoot\";\nimport styles from \"../../../Library.module.css\";\n\nfunction Title({ testRun }: { testRun: TestRun }) {\n  const title = testRun.commitTitle || \"Unknown\";\n  // TODO: This should be done in CSS.\n  const formatted = title.length > 80 ? title.slice(0, 80) + \"...\" : title;\n\n  return (\n    <div className=\"wrap flex shrink grow-0 overflow-hidden text-ellipsis whitespace-nowrap pr-2 font-medium\">\n      {formatted}\n    </div>\n  );\n}\n\nfunction Attributes({ testRun }: { testRun: TestRun }) {\n  const { mergeId, mergeTitle, user, date, branch } = testRun;\n\n  return (\n    <div className={`flex flex-row items-center text-xs font-light`}>\n      <AttributeContainer icon=\"schedule\">{getTruncatedRelativeDate(date)}</AttributeContainer>\n      <AttributeContainer icon=\"person\">{user || \"\"}</AttributeContainer>\n      {mergeId && (\n        <AttributeContainer title={mergeTitle} icon=\"merge_type\">\n          {mergeId}\n        </AttributeContainer>\n      )}\n      {!mergeId && (\n        <AttributeContainer maxWidth=\"160px\" icon=\"fork_right\">\n          {branch || \"\"}\n        </AttributeContainer>\n      )}\n    </div>\n  );\n}\n\nfunction Status({ failCount }: { failCount: number }) {\n  return (\n    <div className={`flex items-center  ${failCount > 0 ? \"text-red-500\" : \"text-green-500\"} `}>\n      <MaterialIcon iconSize=\"2xl\">{`${\n        failCount > 0 ? \"highlight_off\" : \"check_circle\"\n      } `}</MaterialIcon>\n    </div>\n  );\n}\n\nexport function TestRunListItem({ testRun, onClick }: { testRun: TestRun; onClick: () => void }) {\n  const { focusId } = useContext(TestRunsContext);\n  const { teamId } = useContext(TeamContext);\n  const failCount = testRun.stats?.failed || 0;\n  const isSelected = focusId === testRun.id;\n\n  return (\n    <Link href={`/team/${teamId}/runs/${testRun.id}`}>\n      <a\n        className={`flex cursor-pointer flex-row items-center space-x-3 rounded-sm border-b border-chrome bg-themeBase-100 px-3 py-3 ${\n          styles.libraryRow\n        }     \n      ${isSelected ? styles.libraryRowSelected : \"\"}\n      `}\n        onClick={onClick}\n      >\n        <Status failCount={failCount} />\n        <div className=\"flex flex-grow flex-col space-y-1 overflow-hidden\">\n          <div className=\"flex flex-row justify-between space-x-3\">\n            <Title testRun={testRun} />\n            <RunStats testRun={testRun} />\n          </div>\n          <Attributes testRun={testRun} />\n          {testRun.title ? (\n            <div className=\"flex flex-row items-center justify-between text-xs\">\n              {testRun.title}\n            </div>\n          ) : null}\n        </div>\n      </a>\n    </Link>\n  );\n}\n","import { useContext } from \"react\";\n\nimport { LibrarySpinner } from \"ui/components/Library/LibrarySpinner\";\nimport { TestRunListItem } from \"ui/components/Library/Team/View/TestRuns/TestRunListItem\";\n\nimport { TestRunsContext } from \"./TestRunsContextRoot\";\n\nexport function TestRunList() {\n  const { testRuns } = useContext(TestRunsContext);\n\n  return (\n    <div className=\"no-scrollbar m-4 flex flex-grow flex-col space-y-0 overflow-auto rounded-t-xl text-sm\">\n      {testRuns ? (\n        testRuns.map((t, i) => <TestRunListItem key={i} testRun={t} onClick={() => ({})} />)\n      ) : (\n        <LibrarySpinner />\n      )}\n    </div>\n  );\n}\n","import { useContext } from \"react\";\n\nimport { TestRunOverviewPage } from \"./Overview/TestRunOverviewContextRoot\";\nimport { TestRunList } from \"./TestRunList\";\nimport { TestRunsContainer, TestRunsContext } from \"./TestRunsContextRoot\";\n\nexport function TestRunsPage() {\n  return (\n    <TestRunsContainer>\n      <TestRunsContent />\n    </TestRunsContainer>\n  );\n}\n\nfunction TestRunsContent() {\n  const { focusId } = useContext(TestRunsContext);\n\n  return (\n    <div className=\"flex flex-grow flex-row overflow-hidden\">\n      <TestRunList />\n      {focusId ? <TestRunOverviewPage /> : null}\n    </div>\n  );\n}\n","import { useContext } from \"react\";\n\nimport { FilterBarContainer } from \"./FilterBarContainer\";\nimport { RecordingsPage } from \"./Recordings/RecordingsPage\";\nimport { TestResultsPage } from \"./TestResults/TestResultsPage\";\nimport { TestRunsPage } from \"./TestRuns/TestRunsPage\";\nimport { ViewContext, ViewContextRoot } from \"./ViewContextRoot\";\n\nexport function ViewPage({ defaultView }: { defaultView: string }) {\n  return (\n    <ViewContextRoot defaultView={defaultView}>\n      <ViewPageContent />\n    </ViewContextRoot>\n  );\n}\n\nexport function ViewPageContent() {\n  const { view } = useContext(ViewContext);\n\n  return (\n    <div className=\"flex flex-grow flex-col overflow-hidden\">\n      <FilterBarContainer />\n      <div className=\"flex flex-grow flex-row overflow-hidden\">\n        {view === \"recordings\" ? (\n          <RecordingsPage />\n        ) : view === \"runs\" ? (\n          <TestRunsPage />\n        ) : (\n          <TestResultsPage />\n        )}\n      </div>\n    </div>\n  );\n}\n","import { useContext } from \"react\";\n\nimport { useGetTeamRouteParams } from \"ui/components/Library/Team/utils\";\n\nimport { ParamHandler } from \"./ParamHandlers/ParamHandler\";\nimport {\n  MY_LIBRARY_TEAM,\n  MyLibraryContextRoot,\n  TeamContext,\n  TeamContextRoot,\n} from \"./TeamContextRoot\";\nimport { ViewPage } from \"./View/ViewPage\";\n\nexport function TeamPage() {\n  const { teamId } = useGetTeamRouteParams();\n\n  if (teamId === MY_LIBRARY_TEAM.id) {\n    return (\n      <MyLibraryContextRoot>\n        <TeamContent />\n      </MyLibraryContextRoot>\n    );\n  }\n\n  return (\n    <TeamContextRoot>\n      <TeamContent />\n    </TeamContextRoot>\n  );\n}\n\nfunction TeamContent() {\n  const { team, isPendingTeam } = useContext(TeamContext);\n\n  return (\n    <>\n      <ViewPage defaultView={team?.isTest && !isPendingTeam ? \"runs\" : \"recordings\"} />\n      <ParamHandler />\n    </>\n  );\n}\n","import { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\n\nimport { useGetTeamRouteParams, useRedirectToTeam } from \"ui/components/Library/Team/utils\";\nimport hooks from \"ui/hooks\";\nimport { useUpdateDefaultWorkspace } from \"ui/hooks/settings\";\nimport { UserInfo } from \"ui/hooks/users\";\nimport { ExperimentalUserSettings } from \"ui/types\";\nimport logrocket from \"ui/utils/logrocket\";\nimport useAuth0 from \"ui/utils/useAuth0\";\n\nimport LoadingScreen from \"../shared/LoadingScreen\";\nimport { LibraryNags } from \"./LibraryNags\";\nimport Navigation from \"./Navigation/Navigation\";\nimport { MY_LIBRARY_TEAM } from \"./Team/TeamContextRoot\";\nimport { TeamPage } from \"./Team/TeamPage\";\n\n// This acts like a wrapper for useGetTeamRouteParams. In case the user does not specify a team,\n// this hook initializes a team based on their default workspace.\nconst useGetTeamId = (defaultTeamId: string | null) => {\n  const router = useRouter();\n  const { teamId } = useGetTeamRouteParams();\n\n  useEffect(() => {\n    // If there's not already a teamId, initialize the teamId (based on the user's default team)\n    // by pushing a new route.\n    if (teamId === undefined) {\n      if (defaultTeamId) {\n        router.push(`/team/${defaultTeamId}`);\n      } else {\n        router.push(`/team/me/recordings`);\n      }\n    }\n  }, [router, defaultTeamId, teamId]);\n\n  return teamId || null;\n};\n\nfunction useGetIsValidTeamId(teamId: string | null) {\n  const { workspaces, loading: loading1 } = hooks.useGetNonPendingWorkspaces();\n  const { pendingWorkspaces, loading: loading2 } = hooks.useGetPendingWorkspaces();\n\n  if (loading1 || loading2) {\n    return null;\n  }\n\n  if (teamId === MY_LIBRARY_TEAM.id) {\n    return true;\n  }\n\n  return !!(workspaces.find(w => w.id === teamId) || pendingWorkspaces?.find(w => w.id === teamId));\n}\n\nexport default function LibraryLoader() {\n  const { userSettings, loading: userSettingsLoading } = hooks.useGetUserSettings();\n  const { loading: userInfoLoading, ...userInfo } = hooks.useGetUserInfo();\n\n  if (userSettingsLoading || userInfoLoading) {\n    return <LoadingScreen fallbackMessage=\"Reloading team details...\" />;\n  }\n\n  return <Library userSettings={userSettings} userInfo={userInfo} />;\n}\n\nfunction Library({\n  userSettings,\n  userInfo,\n}: {\n  userSettings: ExperimentalUserSettings;\n  userInfo: UserInfo;\n}) {\n  const teamId = useGetTeamId(userSettings.defaultWorkspaceId);\n  const isValidTeamId = useGetIsValidTeamId(teamId);\n  const updateDefaultWorkspace = useUpdateDefaultWorkspace();\n  const redirectToTeam = useRedirectToTeam();\n  const auth = useAuth0();\n\n  useEffect(() => {\n    logrocket.createSession({ userInfo, auth0User: auth.user, userSettings });\n  }, [auth, userInfo, userSettings]);\n  useEffect(() => {\n    if (teamId && isValidTeamId === false) {\n      redirectToTeam(\"me\");\n      updateDefaultWorkspace({ variables: { workspaceId: MY_LIBRARY_TEAM.databaseId } });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [teamId, isValidTeamId, redirectToTeam]);\n\n  if (!teamId) {\n    return <LoadingScreen fallbackMessage=\"Loading team information...\" />;\n  }\n\n  return (\n    <div className=\"flex h-screen w-screen flex-row\">\n      <Navigation />\n      <TeamPage />\n      <LibraryNags />\n    </div>\n  );\n}\n","import Library from \"./Library\";\n\nexport default Library;\n","import React, { useEffect } from \"react\";\n\nimport { setLoadingFinished } from \"ui/actions/app\";\nimport Library from \"ui/components/Library\";\nimport Login from \"ui/components/shared/Login/Login\";\nimport { useAppDispatch } from \"ui/setup/hooks\";\nimport useAuth0 from \"ui/utils/useAuth0\";\n\nexport default function TeamIndex() {\n  const dispatch = useAppDispatch();\n  const { isAuthenticated } = useAuth0();\n\n  useEffect(() => {\n    dispatch(setLoadingFinished(true));\n  }, [dispatch]);\n\n  if (!isAuthenticated) {\n    return <Login returnToPath={window.location.pathname + window.location.search} />;\n  }\n\n  return <Library />;\n}\n","import classNames from \"classnames/bind\";\nimport React from \"react\";\n\nimport { User } from \"ui/types\";\nimport useAuth0 from \"ui/utils/useAuth0\";\nimport { getAvatarColor } from \"ui/utils/user\";\n\nimport css from \"./Avatar.module.css\";\n\nconst cx = classNames.bind(css);\n\n// The user image URLs that we get from Google sometimes fail to load, in that case\n// we fall back to a transparent image (instead of showing the browser's icon for broken images)\ntype AvatarImageProps = Omit<React.ImgHTMLAttributes<HTMLImageElement>, \"src\"> & {\n  src: string | null | undefined;\n};\nexport const AvatarImage = (props: AvatarImageProps) => (\n  <img\n    data-private\n    {...props}\n    src={props.src || undefined}\n    onError={e => (e.currentTarget.src = \"/images/clear.png\")}\n  />\n);\n\nexport const AuthAvatar = ({ user }: { user: User }) => {\n  return (\n    <div className={cx(\"avatar authenticated firstPlayer\")}>\n      <AvatarImage src={user.picture} />\n    </div>\n  );\n};\n\nexport interface AvatarProps {\n  player: any;\n  isFirstPlayer: boolean;\n  index?: number;\n}\n\nexport default function Avatar({ player, isFirstPlayer, index }: AvatarProps) {\n  let auth = useAuth0();\n\n  if (auth.isAuthenticated && isFirstPlayer) {\n    return <AuthAvatar user={auth.user} />;\n  }\n\n  if (player.name) {\n    return (\n      <div className={cx(\"avatar\")} title={player.name}>\n        <AvatarImage src={player.picture} />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={cx(\"avatar\")}\n      title={\"Anonymous User\"}\n      style={{ background: getAvatarColor(index) }}\n    />\n  );\n}\n","import { Menu } from \"@headlessui/react\";\nimport classNames from \"classnames\";\nimport React from \"react\";\n\nimport Icon from \"../shared/Icon\";\nimport styles from \"./Library.module.css\";\n\n// This should be the standard dropdown component for the Library\n// but then we should slowly make it even more general purpose\n// so that all dropdowns look the same.\n\nexport function DropdownButton({\n  className,\n  children,\n  disabled,\n}: {\n  className?: string;\n  children: React.ReactElement;\n  disabled?: boolean;\n}) {\n  return (\n    <Menu.Button\n      className={classNames(className, \"flex items-center px-1 py-2 text-sm\")}\n      disabled={disabled}\n    >\n      {children}\n    </Menu.Button>\n  );\n}\n\nexport function Dropdown({\n  children,\n  menuItemsClassName,\n  widthClass = \"w-56\",\n  fontSizeClass = \"text-sm\",\n}: {\n  children: React.ReactNode;\n  menuItemsClassName?: string;\n  widthClass?: \"\" | \"w-56\" | \"w-64\" | \"w-80\";\n  fontSizeClass?: \"text-sm\" | \"text-base\";\n}) {\n  return (\n    <Menu as=\"div\" className=\"recording-options inline-block text-left shadow-lg\">\n      {({ open }) => (\n        <Menu.Items\n          static\n          className={classNames(\n            menuItemsClassName,\n            widthClass,\n            fontSizeClass,\n            \"right-0 origin-top-right rounded-md border-modalBorder bg-menuBgcolor shadow-lg ring-1 ring-black ring-opacity-5 backdrop-blur-sm focus:outline-none\"\n          )}\n        >\n          <div className=\"py-1\">{children}</div>\n        </Menu.Items>\n      )}\n    </Menu>\n  );\n}\n\nexport function DropdownItem({\n  children,\n  onClick,\n}: {\n  children: string | React.ReactElement;\n  onClick: (e: React.MouseEvent) => void;\n}) {\n  return (\n    <Menu.Item>\n      {({ active }) => (\n        <a\n          href=\"#\"\n          className={classNames(\n            active ? \"bg-menuHoverBgcolor text-menuHoverColor\" : \"text-menuColor\",\n            \"block px-4 py-2\"\n          )}\n          onClick={onClick}\n        >\n          {children}\n        </a>\n      )}\n    </Menu.Item>\n  );\n}\n\nexport function DropdownItemContent({\n  children,\n  icon,\n  selected,\n}: {\n  children: string | React.ReactElement;\n  icon: string;\n  selected: boolean;\n}) {\n  return (\n    <div className=\"flex flex-row space-x-4\">\n      <div className={classNames(\"flex w-4 flex-row items-center\")}>\n        <Icon\n          filename={icon}\n          className={classNames(\n            \"group-hover:bg-primaryAccent\",\n            selected ? \"bg-primaryAccent\" : \"bg-gray-400\"\n          )}\n        />\n      </div>\n      <span className=\"overflow-hidden overflow-ellipsis whitespace-pre\">{children}</span>\n    </div>\n  );\n}\n\nexport function DropdownDivider() {\n  return <div className={`w-full ${styles.dropdownDivider}`} />;\n}\n","import classnames from \"classnames\";\nimport React from \"react\";\n\nimport { prefs } from \"ui/utils/prefs\";\n\nexport function Redacted({ className, ...rest }: React.HTMLProps<HTMLDivElement>) {\n  const showRedactions = prefs.showRedactions;\n  return (\n    <div {...rest} data-private={true} className={classnames(className, { showRedactions })} />\n  );\n}\n\nexport function RedactedSpan({ className, ...rest }: React.HTMLProps<HTMLSpanElement>) {\n  const showRedactions = prefs.showRedactions;\n  return (\n    <span {...rest} data-private={true} className={classnames(className, { showRedactions })} />\n  );\n}\n","import React from \"react\";\n\nexport default function Base64Image({ src, ...rest }: React.ImgHTMLAttributes<HTMLImageElement>) {\n  if (!src) {\n    return null;\n  }\n\n  return <img {...rest} src={`data:image/png;base64,${src}`} />;\n}\n","import React from \"react\";\n\nconst SIZES = {\n  custom: {},\n  small: { height: \"1rem\", width: \"1rem\" },\n  medium: { height: \"1.25rem\", width: \"1.25rem\" },\n  large: { height: \"1.5rem\", width: \"1.5rem\" },\n  \"extra-large\": { height: \"2rem\", width: \"2rem\" },\n};\nexport default function Icon({\n  filename,\n  className = \"bg-gray-800\",\n  size = \"medium\",\n  style = {},\n}: {\n  size?: \"small\" | \"medium\" | \"large\" | \"extra-large\" | \"custom\";\n  filename: string;\n  className?: string;\n  style?: object;\n}) {\n  const sizeStyles = SIZES[size];\n  return <div className={`icon ${filename} ${className}`} style={{ ...sizeStyles, ...style }} />;\n}\n","import { gql } from \"@apollo/client\";\nimport { ExclamationIcon } from \"@heroicons/react/outline\";\nimport Link from \"next/link\";\nimport React, { ReactNode, useEffect, useState } from \"react\";\n\nimport Services from \"devtools/shared/services\";\nimport { GetConnection, GetConnectionVariables } from \"graphql/GetConnection\";\nimport { query } from \"ui/utils/apolloClient\";\nimport { getAuthClientId, getAuthHost } from \"ui/utils/auth\";\nimport { requestBrowserLogin, setUserInBrowserPrefs } from \"ui/utils/browser\";\nimport { getLoginReferrerParam } from \"ui/utils/environment\";\nimport { isTeamMemberInvite } from \"ui/utils/onboarding\";\nimport { sendTelemetryEvent } from \"ui/utils/telemetry\";\nimport useAuth0 from \"ui/utils/useAuth0\";\n\nimport { PrimaryLgButton } from \"../Button\";\nimport { OnboardingContentWrapper, OnboardingModalContainer } from \"../Onboarding\";\n\nconst isOSX = Services.appinfo.OS === \"Darwin\";\n\nenum LoginReferrer {\n  default = \"default\",\n  firstBrowserOpen = \"first-browser-open\",\n}\n\nconst GET_CONNECTION = gql`\n  query GetConnection($email: String!) {\n    auth {\n      connection(email: $email)\n    }\n  }\n`;\n\nfunction SSOLogin({ onLogin }: { onLogin: (connection: string) => void }) {\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState<string | boolean>(false);\n\n  const onEnterpriseLogin = async () => {\n    const resp = await query<GetConnection, GetConnectionVariables>({\n      query: GET_CONNECTION,\n      variables: {\n        email,\n      },\n    });\n\n    if (resp.data?.auth?.connection) {\n      onLogin(resp.data.auth.connection);\n    } else {\n      setError(resp.errors?.find(e => e.message)?.message || true);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <p className=\"text-center text-base\">\n        Enter your email to be redirected to your SSO provider.\n      </p>\n      {error ? (\n        <p className=\"text-center text-base text-red-500\">\n          {typeof error === \"string\"\n            ? \"We were unable to find your SSO provider right now. Please try again later.\"\n            : \"We couldn't find an SSO provider for your email.\"}\n        </p>\n      ) : null}\n      <div className=\"flex flex-row space-x-3\">\n        <input\n          type=\"email\"\n          className=\"w-48 flex-grow rounded-md text-black\"\n          placeholder=\"user@company.com\"\n          value={email}\n          onKeyPress={e => (e.key === \"Enter\" ? onEnterpriseLogin() : null)}\n          onChange={e => setEmail(e.currentTarget.value)}\n        />\n\n        <PrimaryLgButton color=\"blue\" onClick={onEnterpriseLogin} className=\"justify-center\">\n          Sign in\n        </PrimaryLgButton>\n      </div>\n      <button\n        className=\"w-full justify-center text-sm font-bold text-primaryAccent underline\"\n        onClick={() => onLogin(\"google-oauth2\")}\n      >\n        Sign in with Google\n      </button>\n    </div>\n  );\n}\n\nfunction LoginMessaging() {\n  const referrer = getLoginReferrerParam();\n\n  // Custom screen for when the user is seeing the login screen and this is the first\n  // time that they have opened the browser.\n  if (referrer === LoginReferrer.firstBrowserOpen) {\n    return (\n      <div className=\"text-center text-base\">\n        <p>Replay captures everything you need for the perfect bug report, all in one link!</p>\n        <a href=\"https://replay.io\" className=\"pointer-hand underline\">\n          Learn more\n        </a>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {isTeamMemberInvite() ? <h1 className=\"text-2xl font-extrabold\">Almost there!</h1> : null}\n      <div className=\"space-y-4 self-start text-base\">\n        {isTeamMemberInvite() ? (\n          <p>In order to join your team, we first need you to sign in.</p>\n        ) : (\n          <>\n            <div className=\"text-center\">\n              <p>Replay captures everything you need for the perfect bug report, all in one link</p>\n              <a href=\"https://replay.io\" className=\"pointer-hand underline\">\n                Learn more\n              </a>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nfunction SocialLogin({\n  onShowSSOLogin,\n  onLogin,\n}: {\n  onShowSSOLogin: () => void;\n  onLogin: (connection: string) => void;\n}) {\n  return (\n    <div className=\"space-y-6\">\n      <LoginMessaging />\n      <PrimaryLgButton\n        color=\"blue\"\n        onClick={() => onLogin(\"google-oauth2\")}\n        className=\"w-full justify-center\"\n      >\n        Sign in with Google\n      </PrimaryLgButton>\n      <button\n        className=\"w-full justify-center text-sm font-bold text-primaryAccent underline\"\n        onClick={onShowSSOLogin}\n      >\n        Enterprise Users: Sign in with SSO\n      </button>\n    </div>\n  );\n}\n\nfunction ReplayBrowserLogin() {\n  const onLogin = () => {\n    requestBrowserLogin();\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <LoginMessaging />\n      <PrimaryLgButton color=\"blue\" onClick={onLogin} className=\"w-full justify-center\">\n        Sign in\n      </PrimaryLgButton>\n    </div>\n  );\n}\n\nfunction AuthError({ error }: { error: any }) {\n  let message = error && \"message\" in error ? error.message : null;\n\n  if (!message) {\n    return null;\n  }\n\n  if (message === \"Invalid state\") {\n    // This is usually caused by waiting too long to go through the auth process\n    // and can be fixed by trying again.\n    message = \"Your login session expired. Please try logging in again.\";\n  } else {\n    // We want to capture any other error so we can investigate further.\n    sendTelemetryEvent(\"devtools-auth-error-login\", {\n      errorMessage: message,\n    });\n\n    if (message === \"Unable to authenticate user\") {\n      // This usually occurs because our auth hook threw an error but the\n      // message itself isn't very useful so we show a more friendly message\n      message = \"We're sorry but we had a problem authenticating you. We're looking into it now!\";\n    }\n  }\n\n  return (\n    <OnboardingContentWrapper overlay noLogo>\n      <div className=\"flex flex-row items-center space-x-4\">\n        <ExclamationIcon className=\"h-12 w-12 flex-shrink-0 text-red-500\" />\n        <span className=\"align-left text-base font-bold\">{message}</span>\n      </div>\n    </OnboardingContentWrapper>\n  );\n}\n\nexport function LoginLink({\n  children,\n  referrer,\n}: {\n  children: ReactNode;\n  referrer?: LoginReferrer;\n}) {\n  const href = `/${referrer ? `?login-referrer=${referrer}` : \"\"}`;\n  return <Link href={href}>{children}</Link>;\n}\n\nexport default function Login({\n  returnToPath = \"\",\n  challenge,\n  state,\n}: {\n  returnToPath?: string;\n  challenge?: string;\n  state?: string;\n}) {\n  const { loginWithRedirect, error } = useAuth0();\n  const [sso, setSSO] = useState(false);\n\n  if (returnToPath.startsWith(\"/login\")) {\n    returnToPath = \"/\";\n  }\n\n  const onLogin = async (connection: string) => {\n    // browser auth will redirect through this UX to select the connection\n    if (challenge && state) {\n      const authHost = getAuthHost();\n      const clientId = getAuthClientId();\n      window.location.href = `https://${authHost}/authorize?response_type=code&code_challenge_method=S256&code_challenge=${challenge}&client_id=${clientId}&redirect_uri=${returnToPath}&scope=openid profile offline_access&state=${state}&audience=https://api.replay.io&connection=${connection}`;\n\n      return;\n    }\n\n    await loginWithRedirect({\n      appState: { returnTo: returnToPath },\n      connection,\n    });\n  };\n\n  useEffect(() => {\n    setUserInBrowserPrefs(null);\n  }, []);\n\n  return (\n    <OnboardingModalContainer theme=\"light\">\n      <OnboardingContentWrapper overlay>\n        {global.__IS_RECORD_REPLAY_RUNTIME__ && isOSX ? (\n          <ReplayBrowserLogin />\n        ) : sso ? (\n          <SSOLogin onLogin={onLogin} />\n        ) : (\n          <SocialLogin onShowSSOLogin={() => setSSO(true)} onLogin={onLogin} />\n        )}\n      </OnboardingContentWrapper>\n      <AuthError error={error} />\n    </OnboardingModalContainer>\n  );\n}\n","import classNames from \"classnames\";\nimport React, {\n  Dispatch,\n  MouseEventHandler,\n  ReactNode,\n  SetStateAction,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { actions } from \"ui/actions\";\n\nimport { PrimaryLgButton } from \"../Button\";\nimport Modal from \"../NewModal\";\nimport ReplayLogo from \"../ReplayLogo\";\nimport BubbleBackground from \"./BubbleBackground\";\n\nconst OnboardingContext = React.createContext({ theme: \"dark\" });\n\nexport function OnboardingContentWrapper({\n  children,\n  overlay,\n  noLogo,\n}: {\n  children: React.ReactChild | (React.ReactChild | null)[];\n  overlay?: boolean;\n  noLogo?: boolean;\n}) {\n  const ctx = useContext(OnboardingContext);\n\n  return (\n    <div\n      className={classNames(\n        \"relative m-4 flex flex-col items-center rounded-xl bg-loadingBoxes p-9 text-xl text-bodyColor shadow-md\",\n        overlay ? \"max-w-sm space-y-8\" : \"max-w-2xl space-y-12\",\n        {\n          \"rounded-lg bg-opacity-80\": overlay,\n        }\n      )}\n    >\n      {noLogo ? null : <img src=\"/images/logo.svg\" className=\"h-24 w-full\" />}\n      {children}\n    </div>\n  );\n}\n\nexport function OnboardingContent({\n  children,\n}: {\n  children: React.ReactChild | (React.ReactChild | null)[];\n}) {\n  return (\n    <div className=\"relative flex flex-col items-center space-y-4 text-bodyColor\">{children}</div>\n  );\n}\n\nexport function OnboardingHeader({ children }: { children: string }) {\n  return <div className=\"text-3xl font-extrabold\">{children}</div>;\n}\n\nexport function OnboardingBody({ children }: { children: string | ReactNode }) {\n  return <div className=\"mx-10 text-center\">{children}</div>;\n}\n\nexport function OnboardingActions({\n  children,\n}: {\n  children: string | React.ReactChild | React.ReactChild[];\n}) {\n  return <div className=\"space-x-6\">{children}</div>;\n}\n\nexport function NextButton({\n  current,\n  text,\n  setCurrent,\n  onNext,\n  allowNext,\n}: {\n  current: number;\n  text?: string;\n  setCurrent: Dispatch<SetStateAction<number>>;\n  hideModal: typeof actions.hideModal;\n  onNext: () => void;\n  allowNext: boolean;\n}) {\n  const [nextClicked, setNextClicked] = useState<boolean>(false);\n\n  const onClick = () => {\n    if (onNext) {\n      onNext();\n    }\n    setNextClicked(true);\n  };\n\n  useEffect(() => {\n    // Only navigate to the next slide the work that eventually turns\n    // allowNext to true is finished. This allows us to do mutations\n    // in between navigations.\n    if (allowNext && nextClicked) {\n      setCurrent(current => current + 1);\n    }\n  }, [allowNext, nextClicked, setCurrent]);\n\n  const inferLoading = nextClicked && !allowNext;\n  const buttonText = inferLoading ? \"Loading\" : text || \"Next\";\n\n  return (\n    <PrimaryLgButton color=\"blue\" onClick={onClick}>\n      {buttonText}\n    </PrimaryLgButton>\n  );\n}\n\nexport function OnboardingButton({\n  children,\n  onClick = () => {},\n  className,\n  disabled = false,\n}: {\n  children: React.ReactElement | string;\n  className?: string;\n  onClick?: MouseEventHandler;\n  disabled?: boolean;\n}) {\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      disabled={disabled}\n      className={classNames(\n        className,\n        \"max-w-max items-center rounded-md border border-transparent bg-primaryAccent px-3 py-1.5 font-medium text-white shadow-sm hover:bg-primaryAccentHover focus:outline-none focus:ring-2 focus:ring-primaryAccent focus:ring-offset-2\"\n      )}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport function OnboardingModalContainer({\n  children,\n  theme = \"dark\",\n}: {\n  children: React.ReactNode;\n  // For randomizing some background elements as controlled by progress\n  // on the parent component, e.g. circles/bubbles that change on click\n  randomNumber?: number;\n  theme?: \"dark\" | \"light\";\n}) {\n  return (\n    <OnboardingContext.Provider value={{ theme }}>\n      <div className={classNames(\"fixed z-50 grid h-full w-full bg-black text-white\")}>\n        <BubbleBackground />\n        <Modal options={{ maskTransparency: \"transparent\" }} blurMask={false}>\n          {children}\n        </Modal>\n      </div>\n    </OnboardingContext.Provider>\n  );\n}\n","import React, { CSSProperties, RefObject, useCallback, useRef, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { getToolboxLayout } from \"ui/reducers/layout\";\nimport { useAppSelector } from \"ui/setup/hooks\";\n\nimport { DropdownProps } from \"./Dropdown\";\n\ninterface PortalDropdownProps extends DropdownProps {\n  disabled?: boolean;\n  distance?: number;\n  style?: CSSProperties;\n}\n\ntype Direction = \"top\" | \"bottom\";\ntype Position = \"top-right\" | \"bottom-right\" | \"top-left\" | \"bottom-left\";\n\ntype ViewportOverflows = Direction[];\n\nexport default function PortalDropdown(props: PortalDropdownProps) {\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const [dropdownNode, setDropdownNode] = useState<HTMLDivElement | null>(null);\n\n  const expand = (e: React.MouseEvent) => {\n    if (e.button === 0) {\n      e.stopPropagation();\n      e.preventDefault();\n      props.setExpanded(true);\n    }\n  };\n  const collapse = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    props.setExpanded(false);\n  };\n\n  const {\n    buttonContent,\n    children,\n    position = \"bottom-left\",\n    buttonStyle = \"primary\",\n    style,\n    expanded,\n  } = props;\n\n  const contentPosition = getContentPosition(props, buttonRef, dropdownNode);\n  const toolboxLayout = useAppSelector(getToolboxLayout);\n\n  return (\n    <div className=\"portal-dropdown-wrapper\">\n      <button\n        type=\"button\"\n        className={`expand-dropdown flex w-full ${buttonStyle}`}\n        disabled={props.disabled}\n        id=\"portal-dropdown-button\"\n        data-test-id=\"consoleDockButton\"\n        data-test-state={toolboxLayout}\n        onMouseDown={expand}\n        ref={buttonRef}\n      >\n        {buttonContent}\n      </button>\n      {expanded\n        ? createPortal(\n            <div className=\"portal-dropdown-container\">\n              <div className=\"mask\" onClick={collapse} />\n              <div\n                className={`content ${position}`}\n                style={{ ...style, ...contentPosition }}\n                ref={setDropdownNode}\n              >\n                {children}\n              </div>\n            </div>,\n            document.body\n          )\n        : null}\n    </div>\n  );\n}\n\nfunction getContentPosition(\n  props: PortalDropdownProps,\n  buttonRef: RefObject<HTMLButtonElement>,\n  dropdownNode: HTMLDivElement | null\n): CSSProperties {\n  if (props.expanded && buttonRef.current) {\n    const buttonRect = buttonRef.current.getBoundingClientRect();\n    const docRect = document.body.getBoundingClientRect();\n    const dropdownRect = dropdownNode?.getBoundingClientRect();\n\n    const { left, right, top, bottom } = buttonRect;\n    const { width, height } = docRect;\n    const distance = props.distance || 5;\n\n    let position = props.position || \"bottom-left\";\n    const viewportOverflows = getViewportOverflows(docRect, dropdownRect);\n\n    viewportOverflows.forEach(overflow => {\n      if (position.includes(overflow)) {\n        position = adjustPosition(position, overflow);\n      }\n    });\n\n    switch (position) {\n      case \"top-right\":\n        return { bottom: height - top + distance + \"px\", left: left + \"px\" };\n      case \"bottom-right\":\n        return { top: bottom + distance + \"px\", left: left + \"px\" };\n      case \"top-left\":\n        return { bottom: height - top + distance + \"px\", right: width - right + \"px\" };\n      case \"bottom-left\":\n        return { top: bottom + distance + \"px\", right: width - right + \"px\" };\n    }\n  }\n\n  return {};\n}\n\nfunction getViewportOverflows(doc: ClientRect, dropdown?: ClientRect): ViewportOverflows {\n  const overflows: ViewportOverflows = [];\n\n  if (!dropdown) {\n    return [];\n  }\n\n  if (doc.bottom < dropdown.bottom) {\n    overflows.push(\"bottom\");\n  }\n\n  if (doc.top > dropdown.top) {\n    overflows.push(\"top\");\n  }\n\n  return overflows;\n}\n\nfunction adjustPosition(position: Position, overflow: Direction) {\n  const oppositeMap = { top: \"bottom\", bottom: \"top\" };\n\n  return position.replace(overflow, oppositeMap[overflow]) as Position;\n}\n","import React from \"react\";\n\nexport default function Spinner({ className }: { className?: string }) {\n  return (\n    <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n      <circle\n        className=\"opacity-25\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n      ></circle>\n      <path\n        className=\"opacity-75\"\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      ></path>\n    </svg>\n  );\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport MaterialIcon from \"./MaterialIcon\";\n\nexport function TrialEnd({\n  expiresIn,\n  color = \"gray\",\n  className,\n  onClick,\n}: {\n  expiresIn: number;\n  color?: \"yellow\" | \"gray\";\n  className?: string;\n  onClick?: () => void;\n}) {\n  const style = {\n    backgroundColor: color === \"yellow\" ? \"#FFFB96\" : \"#E9E9EB\",\n    cursor: onClick ? \"pointer\" : \"default\",\n  };\n\n  if (expiresIn >= 21) {\n    return null;\n  }\n\n  return (\n    <div\n      className={classNames(\"flex flex-row items-center space-x-2 rounded-lg p-4 py-1\", className)}\n      style={style}\n      onClick={onClick}\n    >\n      <MaterialIcon iconSize=\"xl\" className=\"text-gray-700\">\n        timer\n      </MaterialIcon>\n      <span className=\"overflow-hidden overflow-ellipsis whitespace-pre text-gray-500\">\n        {expiresIn > 1 ? (\n          <span>Trial expires in {expiresIn} days</span>\n        ) : expiresIn == 1 ? (\n          <span>Trial expires in 1 day</span>\n        ) : (\n          <span>Trial expired</span>\n        )}\n      </span>\n    </div>\n  );\n}\n","import { Nag } from \"ui/hooks/users\";\nimport { isReplayBrowser } from \"ui/utils/environment\";\n\nimport { shouldShowNag } from \"./user\";\n\nfunction queryParams() {\n  return new URL(window.location.href).searchParams;\n}\n\n// We use this to show a custom login message for when new users are sent\n// to the login screen through a link they got from an email notification\n// i.e. Replay User invites Non-User to a team via their email, Non-User\n// opens that link and is shown a customized login screen\nexport const isTeamMemberInvite = () => queryParams().get(\"teaminvite\");\n\n// This is for the user onboarding flow where the user signs up for Replay using\n// a Replay team invite that they received in their email.\nexport const singleInvitation = (invitations: number, workspaces: number): boolean =>\n  invitations === 1 && workspaces === 0;\n\n// This is for the user onboarding flow where the user opens the Replay\n// browser for the first time. It teaches them how to create their first replay.\nexport function firstReplay(nags: Nag[]): boolean {\n  return shouldShowNag(nags, Nag.FIRST_REPLAY_2) && isReplayBrowser();\n}\n\n// This is for the user onboarding flow where the user first opens the replay app\n// and it's not in the Replay browser. This will prompt them to download Replay.\nexport function downloadReplay(nags: Nag[], dismissNag: (nag: Nag) => void): boolean {\n  if (isReplayBrowser()) {\n    dismissNag(Nag.DOWNLOAD_REPLAY);\n\n    return false;\n  }\n\n  return shouldShowNag(nags, Nag.DOWNLOAD_REPLAY);\n}\n","import { useGetNonPendingWorkspaces } from \"ui/hooks/workspaces\";\nimport { Workspace, WorkspaceSettings } from \"ui/types\";\n\nimport { useGetTeamIdFromRoute } from \"../components/Library/Team/utils\";\n\nexport function getDefaultOrganizationSettings(): WorkspaceSettings {\n  return {\n    features: {\n      user: {\n        library: true,\n        autoJoin: null,\n      },\n      recording: {\n        public: true,\n        allowList: [],\n        blockList: [],\n      },\n    },\n    motd: null,\n  };\n}\n\nexport function getOrganizationSettings(workspaces: Workspace[]) {\n  const org = workspaces.find(w => w.isOrganization);\n  return org?.settings || getDefaultOrganizationSettings();\n}\n\nexport function useIsPublicEnabled() {\n  const { workspaces, loading: loadingWorkspaces } = useGetNonPendingWorkspaces();\n  const teamId = useGetTeamIdFromRoute();\n\n  if (loadingWorkspaces) {\n    return false;\n  }\n\n  return !isPublicDisabled(workspaces, teamId);\n}\n\nexport function isPublicDisabled(workspaces: Workspace[], selectedWorkspaceId: string | null) {\n  const workspace = workspaces.find(w => w.id === selectedWorkspaceId);\n  const publicDisabledMyLibrary = workspaces.some(\n    w => w.settings?.features.recording.public === false\n  );\n  return (\n    (!selectedWorkspaceId && publicDisabledMyLibrary) ||\n    workspace?.settings?.features.recording.public === false\n  );\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/team/[[...param]]\",\n      function () {\n        return require(\"private-next-pages/team/[[...param]].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/team/[[...param]]\"])\n      });\n    }\n  ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__E8Cex\",\"authenticated\":\"Avatar_authenticated__weGMn\",\"firstPlayer\":\"Avatar_firstPlayer__OhjBJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"libraryHeader\":\"Library_libraryHeader__Q6BUj\",\"libraryWrapper\":\"Library_libraryWrapper__r3pJD\",\"libraryRow\":\"Library_libraryRow__bJfe0\",\"libraryRowSelected\":\"Library_libraryRowSelected__90gMl\",\"teamRow\":\"Library_teamRow__YfBbJ\",\"teamRowActive\":\"Library_teamRowActive__F8V2w\",\"dropdownDivider\":\"Library_dropdownDivider__dG_PD\",\"editButton\":\"Library_editButton__1jLbJ\",\"recordingsBackground\":\"Library_recordingsBackground__tHlCM\",\"navigation\":\"Library_navigation__GBDVP\",\"workspaceName\":\"Library_workspaceName__zZEkn\",\"runOverview\":\"Library_runOverview__L_KLG\"};"],"names":["NagSwitcher","userInfo","pendingWorkspaces","workspaces","dispatch","useAppDispatch","dismissNag","hooks","useEffect","singleInvitation","length","trackEvent","setModal","downloadReplay","nags","firstReplay","LibraryNags","loading","userInfoLoading","pendingWorkspacesLoading","workspacesLoading","useGetNagPreRequisites","LibrarySpinner","className","Spinner","MY_LIBRARY_TEAM","name","isTest","id","databaseId","TeamContext","createContext","TeamContextRoot","children","teamId","useGetTeamRouteParams","workspace","workspaceLoading","useGetWorkspace","isPendingTeam","some","w","Provider","value","team","MyLibraryContextRoot","TeamButton","label","isNew","router","useRouter","basePath","url","isSelected","asPath","includes","showSettingsButton","updateDefaultWorkspace","useUpdateDefaultWorkspace","href","classNames","styles","onClick","async","variables","workspaceId","LibraryIcon","teamType","SettingsButton","Icon","filename","size","e","stopPropagation","preventDefault","Invitations","sortBy","map","NewTeamButton","Profile","picture","useGetUserInfo","Avatar","src","Teams","Navigation","style","scrollbarColor","SettingsHandler","query","settings","view","ParamHandler","connect","actions","window","__IS_RECORD_REPLAY_RUNTIME__","color","fontSize","FilterContext","SURROUNDERS","peekNextWord","input","match","RegExp","encodeFilter","str","encodedStr","nextChar","substring","Object","keys","closingChar","valueMatch","until","encodeURIComponent","nextWord","console","log","useFilters","initialString","decodeURIComponent","getParams","q","appliedString","displayedString","setDisplayedText","setAppliedText","setAppliedString","useState","setDisplayedString","newStr","updateUrlWithParams","useFilterString","filter","ViewContext","ViewContextRoot","defaultView","filters","useContext","push","setView","viewLabels","recordings","runs","results","ViewOptions","collapseDropdown","useGetTeamIdFromRoute","handleSetView","FilterDropdown","expanded","setExpanded","buttonLabel","setStringAndCollapseDropdown","button","PortalDropdown","buttonContent","position","distance","menuItemsClassName","days","secondsAgo","daysInSeconds","Date","getTime","toISOString","substr","handleCreatedSince","FilterBar","showFilterInput","onChange","target","placeholder","onKeyDown","key","currentTarget","FilterBarContainer","LaunchButton","MoveRecordingMenu","onMoveRecording","disableLibrary","currentWorkspaceId","availableWorkspaces","subscription","subscriptionExpired","BatchActionDropdown","selectedIds","setSelectedIds","userId","userIdLoading","isPublicEnabled","useIsPublicEnabled","updateRecordingWorkspace","updateIsPrivate","deleteRecording","confirmDestructive","useConfirm","setSelectedIdsIsPrivate","isPrivate","forEach","recordingId","recording","find","MaterialIcon","outlined","iconSize","buttonClasses","getButtonClasses","enableLibrary","r","every","user","buttonStyle","firstSelectedRecordingTitle","title","count","firstTitle","message","description","acceptLabel","getConfirmOptions","then","confirmed","targetWorkspaceId","TeamTrialEnd","members","localUserId","trialEnds","roles","m","undefined","expiresIn","subscriptionEndsIn","TrialEnd","ViewerHeaderActions","isEditing","setIsEditing","handleDoneEditing","isLibrary","ViewerHeader","workspaceName","HeaderLeft","ViewerHeaderLeft","DeleteOption","onOptionClick","onDeleteRecording","RenameOption","modalOptions","onRename","TogglePrivacyOption","setIsPrivate","private","ShareOption","MoveRecordingOption","permissions","useGetUserPermissions","moveToLibrary","RecordingOptionsDropdown","rename","delete","privacy","move","TestResult","result","getDurationString","durationMs","Math","round","getTruncatedRelativeDate","date","getRelativeDate","truncate","content","formatDistanceToNow","addSuffix","replace","shortenRelativeDate","formatDate","ReplayTitle","RowWrapper","getRecordingURL","textDecoration","ItemScreenshot","screenData","Redacted","addSelectedId","removeSelectedId","selected","permissionsLoading","allowSelecting","toggleChecked","type","checked","height","scrollContainer","once","metadata","test","minWidth","duration","getDisplayedUrl","file","comments","RecordingsError","msg","isReplayBrowser","Recordings","showMore","toggleShowMore","shownRecordings","useMemo","sortedRecordings","slice","i","RecordingsPageViewer","NonPendingTeamScreen","logo","Base64Image","PendingTeamPrompt","redirectToTeam","useRedirectToTeam","setLoading","inviterEmail","acceptPendingInvitation","declinePendingInvitation","MOCK_DATA","MockRecordingRow","floor","random","PendingTeamScreen","RecordingsPage","MyRecordingsPage","TeamRecordingsPage","AttributeContainer","icon","maxWidth","Title","source","merge","commit","formatted","Status","Attributes","trigger","branch","TestResultRow","rel","TestResults","TestResultsPage","TestResultsContent","gql","GET_TEST_RUNS_FOR_WORKSPACE","GET_TEST_RUN","unwrapRecordingsData","edges","node","uuid","createdAt","convertTestRun","testRun","firstRecording","orderBy","triggerUrl","TestRunsContext","TestRunsContainer","focusId","testRuns","data","useQuery","assert","useGetTestRunsForWorkspace","TestRunOverviewContext","TestRunOverviewContainer","testRunId","useGetTestRunForWorkspace","ViewReplay","passed","Comments","numComments","FilterByTestButton","path","JSON","stringify","TestResultListItem","RunResults","passedRecordings","failedRecordings","TestStatusGroup","sort","a","b","Pill","RunStats","failed","stats","commitTitle","durationString","getDuration","mergeId","mergeTitle","RunnerLink","RunSummary","TestRunOverviewContent","width","TestRunOverviewPage","failCount","TestRunListItem","TestRunList","t","TestRunsPage","TestRunsContent","ViewPage","ViewPageContent","TeamPage","TeamContent","Library","userSettings","defaultTeamId","useGetTeamId","defaultWorkspaceId","isValidTeamId","loading1","loading2","useGetIsValidTeamId","auth","useAuth0","logrocket","auth0User","LoadingScreen","fallbackMessage","userSettingsLoading","TeamIndex","isAuthenticated","setLoadingFinished","Login","returnToPath","location","pathname","search","cx","css","AvatarImage","props","onError","AuthAvatar","player","isFirstPlayer","index","background","getAvatarColor","Dropdown","widthClass","fontSizeClass","as","open","static","DropdownItem","active","DropdownItemContent","DropdownDivider","rest","showRedactions","prefs","classnames","RedactedSpan","SIZES","custom","small","medium","large","sizeStyles","isOSX","Services","LoginReferrer","GET_CONNECTION","SSOLogin","onLogin","email","setEmail","error","setError","onEnterpriseLogin","resp","connection","errors","onKeyPress","LoginMessaging","getLoginReferrerParam","firstBrowserOpen","isTeamMemberInvite","SocialLogin","onShowSSOLogin","ReplayBrowserLogin","requestBrowserLogin","AuthError","sendTelemetryEvent","errorMessage","overlay","noLogo","LoginLink","referrer","challenge","state","loginWithRedirect","sso","setSSO","startsWith","authHost","getAuthHost","clientId","getAuthClientId","appState","returnTo","setUserInBrowserPrefs","theme","global","OnboardingContext","React","OnboardingContentWrapper","OnboardingContent","OnboardingHeader","OnboardingBody","OnboardingActions","NextButton","current","text","setCurrent","onNext","allowNext","nextClicked","setNextClicked","buttonText","OnboardingButton","disabled","OnboardingModalContainer","options","maskTransparency","blurMask","buttonRef","useRef","dropdownNode","setDropdownNode","contentPosition","buttonRect","getBoundingClientRect","docRect","document","body","dropdownRect","left","right","top","bottom","doc","dropdown","overflows","getViewportOverflows","overflow","oppositeMap","adjustPosition","getContentPosition","toolboxLayout","useAppSelector","getToolboxLayout","onMouseDown","ref","createPortal","xmlns","fill","viewBox","cy","stroke","strokeWidth","d","backgroundColor","cursor","URL","searchParams","get","invitations","shouldShowNag","Nag","getOrganizationSettings","isOrganization","features","library","autoJoin","public","allowList","blockList","motd","loadingWorkspaces","useGetNonPendingWorkspaces","isPublicDisabled","selectedWorkspaceId","publicDisabledMyLibrary","__NEXT_P","module","exports"],"sourceRoot":""}