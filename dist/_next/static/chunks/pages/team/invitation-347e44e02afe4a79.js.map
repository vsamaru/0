{"version":3,"file":"static/chunks/pages/team/invitation-347e44e02afe4a79.js","mappings":"gOASe,SAASA,IACtB,MAAMC,GAAQC,EAAAA,EAAAA,MACR,QAAEC,IAAYC,EAAAA,EAAAA,MACd,KAAEC,EAAF,MAAQC,IAAUC,EAAAA,EAAAA,aAClBC,GAAWC,EAAAA,EAAAA,MACXC,EAAiBJ,EAAMK,KACvBC,EAA0BC,EAAAA,EAAAA,4BAEhC,WACER,EAAK,QAEP,WACEG,GACEM,EAAAA,EAAAA,GAAiB,CACfC,QAAS,uCACTC,QACE,iIACFC,OAAQ,gBAyBd,OAnBAC,EAAAA,EAAAA,YACE,WAGE,IAAIf,EAIJ,GAAIF,EAAMkB,iBAAmBT,EAC3BE,EAAwB,CAAEQ,UAAW,CAAET,KAAMD,SACxC,CAEL,MAAMW,EAAeC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,OAChEpB,EAAK,CAAEmB,SAAU,SAAUlB,MAAO,CAAEoB,SAAUL,QAGlD,CAAClB,IAGI,O,uBClDJmB,OAAOK,SAAWL,OAAOK,UAAY,IAAItB,KAAK,CAC7C,mBACA,WACE,OAAO,EAAQ,Y","sources":["webpack://_N_E/./pages/team/invitation.tsx","webpack://_N_E/?7ea3"],"sourcesContent":["import { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\n\nimport { setExpectedError } from \"ui/actions/errors\";\nimport hooks from \"ui/hooks\";\nimport { useAppDispatch } from \"ui/setup/hooks\";\nimport useAuth0 from \"ui/utils/useAuth0\";\nimport useToken from \"ui/utils/useToken\";\n\nexport default function InvitationHandler() {\n  const auth0 = useAuth0();\n  const { loading } = useToken();\n  const { push, query } = useRouter();\n  const dispatch = useAppDispatch();\n  const invitationCode = query.code as string;\n  const claimTeamInvitationCode = hooks.useClaimTeamInvitationCode(onCompleted, onError);\n\n  function onCompleted() {\n    push(\"/\");\n  }\n  function onError() {\n    dispatch(\n      setExpectedError({\n        message: \"This team invitation code is invalid\",\n        content:\n          \"There seems to be a problem with your team invitation link. Please ask your team administrator to send you an up-to-date link.\",\n        action: \"library\",\n      })\n    );\n  }\n\n  // TODO [jaril] Fix react-hooks/exhaustive-deps\n  useEffect(\n    function handleTeamInvitationCode() {\n      // The auth0 object is not reliable until the token has finished loading,\n      // so we wait for loading to finish before doing anything with it.\n      if (loading) {\n        return;\n      }\n\n      if (auth0.isAuthenticated && invitationCode) {\n        claimTeamInvitationCode({ variables: { code: invitationCode } });\n      } else {\n        // If the user is not logged in, show them the login screen\n        const returnToPath = window.location.pathname + window.location.search;\n        push({ pathname: \"/login\", query: { returnTo: returnToPath } });\n      }\n    },\n    [loading] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  return null;\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/team/invitation\",\n      function () {\n        return require(\"private-next-pages/team/invitation.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/team/invitation\"])\n      });\n    }\n  "],"names":["InvitationHandler","auth0","useAuth0","loading","useToken","push","query","useRouter","dispatch","useAppDispatch","invitationCode","code","claimTeamInvitationCode","hooks","setExpectedError","message","content","action","useEffect","isAuthenticated","variables","returnToPath","window","location","pathname","search","returnTo","__NEXT_P"],"sourceRoot":""}